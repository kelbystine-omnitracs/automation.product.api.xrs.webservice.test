<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.0 on win32)" generated="20191219 12:17:58.531" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests">
<suite id="s1-s1" name="AWS XRS WebServicesTests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests">
<suite id="s1-s1-s1" name="ValidateAWSXRSResourceGroupWebService" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\04__ValidateAWSXRSResourceGroupWebService.robot">
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService" type="setup">
<doc>Create a session with aws xrs web services</doc>
<msg timestamp="20191219 12:17:58.736" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<msg timestamp="20191219 12:17:58.737" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'https://d3ws.xataxrs.com' | verify=True | auth=['GnomeShippingD3|admin', 'xrs123'] ]</msg>
<msg timestamp="20191219 12:17:58.737" level="INFO">Creating Session using : alias=xrs_web_service_session, url=https://d3ws.xataxrs.com, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x000001BE5BB528B0&gt;, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg timestamp="20191219 12:17:58.737" level="DEBUG">Creating session: xrs_web_service_session</msg>
<msg timestamp="20191219 12:17:58.737" level="DEBUG">Argument types are:
&lt;class 'bool'&gt;</msg>
<msg timestamp="20191219 12:17:58.737" level="TRACE">Return: &lt;requests.sessions.Session object at 0x000001BE5BB523D0&gt;</msg>
<status status="PASS" starttime="20191219 12:17:58.736" endtime="20191219 12:17:58.737"></status>
</kw>
<msg timestamp="20191219 12:17:58.737" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:17:58.736" endtime="20191219 12:17:58.737"></status>
</kw>
<test id="s1-s1-s1-t1" name="Validate AWS XRS Get Resource Groups REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191219 12:17:58.739" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191219 12:17:58.739" level="TRACE">Return: ['2019', '12', '19']</msg>
<msg timestamp="20191219 12:17:58.739" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191219 12:17:58.739" level="INFO">${mm} = 12</msg>
<msg timestamp="20191219 12:17:58.739" level="INFO">${dd} = 19</msg>
<status status="PASS" starttime="20191219 12:17:58.738" endtime="20191219 12:17:58.739"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191219 12:17:58.740" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191219 12:17:58.741" level="TRACE">Return: {'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191219 12:17:58.741" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/19/2019 }</msg>
<status status="PASS" starttime="20191219 12:17:58.740" endtime="20191219 12:17:58.741"></status>
</kw>
<kw name="Verify Get Resource Groups With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191219 12:17:58.742" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<msg timestamp="20191219 12:17:58.742" level="TRACE">Arguments: [ '/' ]</msg>
<msg timestamp="20191219 12:17:58.742" level="TRACE">Return: '/'</msg>
<msg timestamp="20191219 12:17:58.742" level="INFO">${ending_character} = /</msg>
<status status="PASS" starttime="20191219 12:17:58.742" endtime="20191219 12:17:58.742"></status>
</kw>
<kw name="Get Resource Groups With URI Ending With ${ending_character} And Parameters &amp;{params}" library="ResourceGroup">
<doc>This Keyword modifies character between the base uri and the parameters
This will get Resource Groups that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Resource Groups Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:17:58.743" level="TRACE">Arguments: [ ${ending_character}='/' | ${params}={'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191219 12:17:58.743" level="TRACE">Arguments: [ 'ResourceGroupWebService.svc/resourcegroups/' ]</msg>
<msg timestamp="20191219 12:17:58.743" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups/'</msg>
<msg timestamp="20191219 12:17:58.744" level="INFO">${uri} = ResourceGroupWebService.svc/resourcegroups/</msg>
<status status="PASS" starttime="20191219 12:17:58.743" endtime="20191219 12:17:58.744"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:17:58.744" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'ResourceGroupWebService.svc/resourcegroups/' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<msg timestamp="20191219 12:17:58.745" level="INFO">GET Request using : uri=ResourceGroupWebService.svc/resourcegroups/, params={'OrganizationID': 46663, 'IsActive': 'True', 'AsOfDateTime': '12/19/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191219 12:17:58.747" level="DEBUG">Starting new HTTPS connection (1): d3ws.xataxrs.com:443</msg>
<msg timestamp="20191219 12:18:00.325" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /ResourceGroupWebService.svc/resourcegroups/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12%2F19%2F2019 HTTP/1.1" 200 2</msg>
<msg timestamp="20191219 12:18:00.328" level="DEBUG">GET Response : status=200, reason=OK
[]</msg>
<msg timestamp="20191219 12:18:00.328" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:00.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:17:58.744" endtime="20191219 12:18:00.329"></status>
</kw>
<msg timestamp="20191219 12:18:00.330" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:00.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:17:58.742" endtime="20191219 12:18:00.331"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 12:18:00.333" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191219 12:18:00.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191219 12:18:00.334" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:00.332" endtime="20191219 12:18:00.334"></status>
</kw>
<msg timestamp="20191219 12:18:00.335" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:17:58.741" endtime="20191219 12:18:00.335"></status>
</kw>
<kw name="Verify Get Resource Groups Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191219 12:18:00.338" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Get Resource Groups" library="ResourceGroup">
<doc>Call the Get Method on Organizations.
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
Status
Filters results to active organizations only.
Valid Values: True False Both
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationId
Limits results to organizations that fall under the specified organization.
ResourceGroupId
Limits results to Organizations in one or more resource groups.
OrganizationSid
Limits results to organizations that fall under the specified organization.
ResourceGroupSid
Limits results to Organizations in one or more resource groups.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:18:00.342" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191219 12:18:00.345" level="TRACE">Arguments: [ 'ResourceGroupWebService.svc/resourcegroups' ]</msg>
<msg timestamp="20191219 12:18:00.345" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups'</msg>
<msg timestamp="20191219 12:18:00.346" level="INFO">${uri} = ResourceGroupWebService.svc/resourcegroups</msg>
<status status="PASS" starttime="20191219 12:18:00.344" endtime="20191219 12:18:00.346"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:18:00.348" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'ResourceGroupWebService.svc/resourcegroups' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<msg timestamp="20191219 12:18:00.349" level="INFO">GET Request using : uri=ResourceGroupWebService.svc/resourcegroups, params={'OrganizationID': 46663, 'IsActive': 'True', 'AsOfDateTime': '12/19/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191219 12:18:00.963" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /ResourceGroupWebService.svc/resourcegroups?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12%2F19%2F2019 HTTP/1.1" 200 2</msg>
<msg timestamp="20191219 12:18:00.965" level="DEBUG">GET Response : status=200, reason=OK
[]</msg>
<msg timestamp="20191219 12:18:00.966" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:00.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:18:00.347" endtime="20191219 12:18:00.967"></status>
</kw>
<msg timestamp="20191219 12:18:00.968" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:00.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:18:00.340" endtime="20191219 12:18:00.968"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 12:18:00.970" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191219 12:18:00.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191219 12:18:00.971" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:00.969" endtime="20191219 12:18:00.971"></status>
</kw>
<msg timestamp="20191219 12:18:00.971" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:00.337" endtime="20191219 12:18:00.971"></status>
</kw>
<doc>Get Resource Groups with basic parameters</doc>
<tags>
<tag>awsxrsresourcegrouprestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191219 12:17:58.737" endtime="20191219 12:18:00.972" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Validate AWS XRS Get Resource Groups REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Resource Groups Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191219 12:18:00.979" level="TRACE">Arguments: [ ${character_string}='/?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191219 12:18:00.979" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191219 12:18:00.979" level="TRACE">Return: ['2019', '12', '19']</msg>
<msg timestamp="20191219 12:18:00.980" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191219 12:18:00.980" level="INFO">${mm} = 12</msg>
<msg timestamp="20191219 12:18:00.980" level="INFO">${dd} = 19</msg>
<status status="PASS" starttime="20191219 12:18:00.979" endtime="20191219 12:18:00.980"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191219 12:18:00.980" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191219 12:18:00.981" level="TRACE">Return: {'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191219 12:18:00.981" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/19/2019 }</msg>
<status status="PASS" starttime="20191219 12:18:00.980" endtime="20191219 12:18:00.981"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191219 12:18:00.982" level="TRACE">Arguments: [ ${base_uri}='ResourceGroupWebService.svc' | ${request_type}='/resourcegroups' | ${character_string}='/?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191219 12:18:00.983" level="TRACE">Arguments: [ 'ResourceGroupWebService.svc/resourcegroups/?' ]</msg>
<msg timestamp="20191219 12:18:00.983" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups/?'</msg>
<msg timestamp="20191219 12:18:00.983" level="INFO">${uri} = ResourceGroupWebService.svc/resourcegroups/?</msg>
<status status="PASS" starttime="20191219 12:18:00.982" endtime="20191219 12:18:00.983"></status>
</kw>
<msg timestamp="20191219 12:18:00.983" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups/?'</msg>
<msg timestamp="20191219 12:18:00.983" level="INFO">${uri_string} = ResourceGroupWebService.svc/resourcegroups/?</msg>
<status status="PASS" starttime="20191219 12:18:00.982" endtime="20191219 12:18:00.983"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191219 12:18:00.984" level="TRACE">Arguments: [ 'ResourceGroupWebService.svc/resourcegroups/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019' ]</msg>
<msg timestamp="20191219 12:18:00.984" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019'</msg>
<msg timestamp="20191219 12:18:00.984" level="INFO">${uri} = ResourceGroupWebService.svc/resourcegroups/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019</msg>
<status status="PASS" starttime="20191219 12:18:00.983" endtime="20191219 12:18:00.984"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:18:00.985" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'ResourceGroupWebService.svc/resourcegroups/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191219 12:18:00.985" level="INFO">GET Request using : uri=ResourceGroupWebService.svc/resourcegroups/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191219 12:18:01.884" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /ResourceGroupWebService.svc/resourcegroups/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019 HTTP/1.1" 200 2</msg>
<msg timestamp="20191219 12:18:01.886" level="DEBUG">GET Response : status=200, reason=OK
[]</msg>
<msg timestamp="20191219 12:18:01.886" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:01.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:18:00.985" endtime="20191219 12:18:01.887"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 12:18:01.889" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191219 12:18:01.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191219 12:18:01.889" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:01.887" endtime="20191219 12:18:01.890"></status>
</kw>
<msg timestamp="20191219 12:18:01.890" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:00.978" endtime="20191219 12:18:01.890"></status>
</kw>
<kw name="Verify Get Resource Groups Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191219 12:18:01.892" level="TRACE">Arguments: [ ${character_string}='?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191219 12:18:01.893" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191219 12:18:01.894" level="TRACE">Return: ['2019', '12', '19']</msg>
<msg timestamp="20191219 12:18:01.894" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191219 12:18:01.894" level="INFO">${mm} = 12</msg>
<msg timestamp="20191219 12:18:01.894" level="INFO">${dd} = 19</msg>
<status status="PASS" starttime="20191219 12:18:01.893" endtime="20191219 12:18:01.894"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191219 12:18:01.895" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191219 12:18:01.896" level="TRACE">Return: {'AsOfDateTime': '12/19/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191219 12:18:01.897" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/19/2019 }</msg>
<status status="PASS" starttime="20191219 12:18:01.895" endtime="20191219 12:18:01.897"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191219 12:18:01.898" level="TRACE">Arguments: [ ${base_uri}='ResourceGroupWebService.svc' | ${request_type}='/resourcegroups' | ${character_string}='?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191219 12:18:01.899" level="TRACE">Arguments: [ 'ResourceGroupWebService.svc/resourcegroups?' ]</msg>
<msg timestamp="20191219 12:18:01.900" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups?'</msg>
<msg timestamp="20191219 12:18:01.900" level="INFO">${uri} = ResourceGroupWebService.svc/resourcegroups?</msg>
<status status="PASS" starttime="20191219 12:18:01.899" endtime="20191219 12:18:01.900"></status>
</kw>
<msg timestamp="20191219 12:18:01.900" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups?'</msg>
<msg timestamp="20191219 12:18:01.901" level="INFO">${uri_string} = ResourceGroupWebService.svc/resourcegroups?</msg>
<status status="PASS" starttime="20191219 12:18:01.897" endtime="20191219 12:18:01.901"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191219 12:18:01.902" level="TRACE">Arguments: [ 'ResourceGroupWebService.svc/resourcegroups?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019' ]</msg>
<msg timestamp="20191219 12:18:01.902" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019'</msg>
<msg timestamp="20191219 12:18:01.902" level="INFO">${uri} = ResourceGroupWebService.svc/resourcegroups?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019</msg>
<status status="PASS" starttime="20191219 12:18:01.901" endtime="20191219 12:18:01.902"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:18:01.903" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'ResourceGroupWebService.svc/resourcegroups?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191219 12:18:01.904" level="INFO">GET Request using : uri=ResourceGroupWebService.svc/resourcegroups?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191219 12:18:02.396" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /ResourceGroupWebService.svc/resourcegroups?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/19/2019 HTTP/1.1" 200 2</msg>
<msg timestamp="20191219 12:18:02.399" level="DEBUG">GET Response : status=200, reason=OK
[]</msg>
<msg timestamp="20191219 12:18:02.399" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:02.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:18:01.903" endtime="20191219 12:18:02.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 12:18:02.401" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191219 12:18:02.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191219 12:18:02.402" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:02.400" endtime="20191219 12:18:02.403"></status>
</kw>
<msg timestamp="20191219 12:18:02.403" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:01.892" endtime="20191219 12:18:02.403"></status>
</kw>
<doc>Get Resource Groups with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsresourcegrouprestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191219 12:18:00.977" endtime="20191219 12:18:02.405" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Validate AWS XRS Get Resource Groups REST Web Services For All Resource Groups Returns 200 OK">
<kw name="Get All Resource Groups" library="ResourceGroup">
<doc>Get attributes for all organizations.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:18:02.411" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191219 12:18:02.412" level="TRACE">Arguments: [ 'ResourceGroupWebService.svc/resourcegroups' ]</msg>
<msg timestamp="20191219 12:18:02.412" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroups'</msg>
<msg timestamp="20191219 12:18:02.412" level="INFO">${uri} = ResourceGroupWebService.svc/resourcegroups</msg>
<status status="PASS" starttime="20191219 12:18:02.412" endtime="20191219 12:18:02.413"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:18:02.413" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'ResourceGroupWebService.svc/resourcegroups' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191219 12:18:02.414" level="INFO">GET Request using : uri=ResourceGroupWebService.svc/resourcegroups, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191219 12:18:03.028" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /ResourceGroupWebService.svc/resourcegroups HTTP/1.1" 200 648</msg>
<msg timestamp="20191219 12:18:03.030" level="DEBUG">GET Response : status=200, reason=OK
[{"DeviceNumberList":["9522227832"],"DeviceSidList":[2720],"DriverIdList":[],"DriverSidList":[],"IsDefaultGroup":true,"IsSharedResourceGroup":false,"ModifiedBy":0,"ModifiedDate":"\/Date(1576198671606-0800)\/","OrganizationID":"46663","OrganizationSID":414,"ResourceGroupName":"Gnome Shipping D3","ResourceGroupSid":357,"SiteIdList":[],"SiteSidList":[],"Status":true,"TrailerIdList":[],"TrailerSidList":[],"UserIdList":["dispatchUser","fleetviewUser","kstine","readOnlyUser","admin","annj","operationsUser","mobileInstallerUser","maintenanceUser"],"UserSidList":[5687,5690,5685,5686,5412,5523,5688,5691,5689],"VehicleIdList":[],"VehicleSidList":[]}]</msg>
<msg timestamp="20191219 12:18:03.030" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:03.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:18:02.413" endtime="20191219 12:18:03.031"></status>
</kw>
<msg timestamp="20191219 12:18:03.032" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:03.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:18:02.411" endtime="20191219 12:18:03.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 12:18:03.037" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191219 12:18:03.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191219 12:18:03.038" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:03.035" endtime="20191219 12:18:03.038"></status>
</kw>
<doc>Gets all the Organizations</doc>
<tags>
<tag>awsxrsresourcegrouprestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191219 12:18:02.409" endtime="20191219 12:18:03.040" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Validate AWS XRS Get Device REST Web Services Returns 200 OK">
<kw name="Get Resource Group By Resource Group Id" library="ResourceGroup">
<doc>Get resource group information for a particular group using the resource group id</doc>
<arguments>
<arg>${DEFAULT_RESOURCE_GROUP.RESOURCE_GROUP_NAME}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:18:03.047" level="TRACE">Arguments: [ ${resource_group_id}='Gnome Shipping D3' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUP}/${resource_group_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191219 12:18:03.048" level="TRACE">Arguments: [ 'ResourceGroupWebService.svc/resourcegroup/Gnome Shipping D3' ]</msg>
<msg timestamp="20191219 12:18:03.048" level="TRACE">Return: 'ResourceGroupWebService.svc/resourcegroup/Gnome Shipping D3'</msg>
<msg timestamp="20191219 12:18:03.048" level="INFO">${uri} = ResourceGroupWebService.svc/resourcegroup/Gnome Shipping D3</msg>
<status status="PASS" starttime="20191219 12:18:03.047" endtime="20191219 12:18:03.048"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191219 12:18:03.049" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'ResourceGroupWebService.svc/resourcegroup/Gnome Shipping D3' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191219 12:18:03.049" level="INFO">GET Request using : uri=ResourceGroupWebService.svc/resourcegroup/Gnome Shipping D3, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191219 12:18:03.584" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /ResourceGroupWebService.svc/resourcegroup/Gnome%20Shipping%20D3 HTTP/1.1" 200 646</msg>
<msg timestamp="20191219 12:18:03.586" level="DEBUG">GET Response : status=200, reason=OK
{"DeviceNumberList":["9522227832"],"DeviceSidList":[2720],"DriverIdList":[],"DriverSidList":[],"IsDefaultGroup":true,"IsSharedResourceGroup":false,"ModifiedBy":0,"ModifiedDate":"\/Date(1576198671606-0800)\/","OrganizationID":"46663","OrganizationSID":414,"ResourceGroupName":"Gnome Shipping D3","ResourceGroupSid":357,"SiteIdList":[],"SiteSidList":[],"Status":true,"TrailerIdList":[],"TrailerSidList":[],"UserIdList":["dispatchUser","fleetviewUser","kstine","readOnlyUser","admin","annj","operationsUser","mobileInstallerUser","maintenanceUser"],"UserSidList":[5687,5690,5685,5686,5412,5523,5688,5691,5689],"VehicleIdList":[],"VehicleSidList":[]}</msg>
<msg timestamp="20191219 12:18:03.587" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:03.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:18:03.048" endtime="20191219 12:18:03.588"></status>
</kw>
<msg timestamp="20191219 12:18:03.589" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191219 12:18:03.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191219 12:18:03.046" endtime="20191219 12:18:03.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 12:18:03.592" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191219 12:18:03.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191219 12:18:03.592" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:03.591" endtime="20191219 12:18:03.593"></status>
</kw>
<doc>Verifies that a posted device now exists</doc>
<tags>
<tag>awsxrsresourcegrouprestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191219 12:18:03.044" endtime="20191219 12:18:03.594" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<msg timestamp="20191219 12:18:03.598" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191219 12:18:03.598" level="INFO">Delete All Sessions</msg>
<msg timestamp="20191219 12:18:03.598" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191219 12:18:03.598" endtime="20191219 12:18:03.599"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Resource Group Entity Management Web Services</doc>
<status status="PASS" starttime="20191219 12:17:58.559" endtime="20191219 12:18:03.599"></status>
</suite>
<status status="PASS" starttime="20191219 12:17:58.556" endtime="20191219 12:18:03.605"></status>
</suite>
<status status="PASS" starttime="20191219 12:17:58.533" endtime="20191219 12:18:03.609"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0">awsxrsresourcegrouprestwebservicevalidation</stat>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="4" fail="0" id="s1-s1" name="AWS XRS WebServicesTests">Tests.AWS XRS WebServicesTests</stat>
<stat pass="4" fail="0" id="s1-s1-s1" name="ValidateAWSXRSResourceGroupWebService">Tests.AWS XRS WebServicesTests.ValidateAWSXRSResourceGroupWebService</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
