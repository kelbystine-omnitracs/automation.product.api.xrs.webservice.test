<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20191217 09:59:24.769" rpa="false">
<suite id="s1" name="AWS XRS WebServicesTests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests">
<suite id="s1-s1" name="ValidateAWSXRSOrganizationWebService" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\03__ValidateAWSXRSOrganizationWebService.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Create AWS XRS Web Services Session</arg>
<arg>AND</arg>
<arg>Test Data Setup For XRS AWS Organization Web Service Test Suite</arg>
</arguments>
<msg timestamp="20191217 09:59:25.356" level="TRACE">Arguments: [ 'Create AWS XRS Web Services Session' | 'AND' | 'Test Data Setup For XRS AWS Organization Web Service Test Suite' ]</msg>
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService">
<doc>Create a session with aws xrs web services</doc>
<msg timestamp="20191217 09:59:25.356" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<msg timestamp="20191217 09:59:25.357" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'https://d3ws.xataxrs.com' | verify=True | auth=['GnomeShippingD3|admin', 'xrs123'] ]</msg>
<msg timestamp="20191217 09:59:25.357" level="INFO">Creating Session using : alias=xrs_web_service_session, url=https://d3ws.xataxrs.com, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x0000015F1A312518&gt;, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg timestamp="20191217 09:59:25.357" level="DEBUG">Creating session: xrs_web_service_session</msg>
<msg timestamp="20191217 09:59:25.357" level="DEBUG">Argument types are:
&lt;class 'bool'&gt;</msg>
<msg timestamp="20191217 09:59:25.357" level="TRACE">Return: &lt;requests.sessions.Session object at 0x0000015F1A312DD8&gt;</msg>
<status status="PASS" starttime="20191217 09:59:25.356" endtime="20191217 09:59:25.357"></status>
</kw>
<msg timestamp="20191217 09:59:25.357" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:25.356" endtime="20191217 09:59:25.357"></status>
</kw>
<kw name="Test Data Setup For XRS AWS Organization Web Service Test Suite">
<doc>Keyword for setting up a random organization for the organization test suite</doc>
<msg timestamp="20191217 09:59:25.357" level="TRACE">Arguments: [  ]</msg>
<kw name="Word" library="FakerLibrary">
<doc>:returns: A random word, eg: 'lorem'</doc>
<assign>
<var>${FAKE_WORD1}</var>
</assign>
<msg timestamp="20191217 09:59:25.358" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191217 09:59:25.358" level="TRACE">Return: 'wind'</msg>
<msg timestamp="20191217 09:59:25.358" level="INFO">${FAKE_WORD1} = wind</msg>
<status status="PASS" starttime="20191217 09:59:25.358" endtime="20191217 09:59:25.358"></status>
</kw>
<kw name="Word" library="FakerLibrary">
<doc>:returns: A random word, eg: 'lorem'</doc>
<assign>
<var>${FAKE_WORD2}</var>
</assign>
<msg timestamp="20191217 09:59:25.358" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191217 09:59:25.358" level="TRACE">Return: 'run'</msg>
<msg timestamp="20191217 09:59:25.358" level="INFO">${FAKE_WORD2} = run</msg>
<status status="PASS" starttime="20191217 09:59:25.358" endtime="20191217 09:59:25.358"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_WORD1}${FAKE_WORD2}</arg>
</arguments>
<assign>
<var>${FAKE_TEST_ORGANIZATION_ID_1}</var>
</assign>
<msg timestamp="20191217 09:59:25.359" level="TRACE">Arguments: [ 'windrun' ]</msg>
<msg timestamp="20191217 09:59:25.359" level="TRACE">Return: 'windrun'</msg>
<msg timestamp="20191217 09:59:25.359" level="INFO">${FAKE_TEST_ORGANIZATION_ID_1} = windrun</msg>
<status status="PASS" starttime="20191217 09:59:25.359" endtime="20191217 09:59:25.359"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_WORD1}${SPACE}${FAKE_WORD2}</arg>
</arguments>
<assign>
<var>${FAKE_TEST_ORGANIZATION_NAME_1}</var>
</assign>
<msg timestamp="20191217 09:59:25.359" level="TRACE">Arguments: [ 'wind run' ]</msg>
<msg timestamp="20191217 09:59:25.359" level="TRACE">Return: 'wind run'</msg>
<msg timestamp="20191217 09:59:25.359" level="INFO">${FAKE_TEST_ORGANIZATION_NAME_1} = wind run</msg>
<status status="PASS" starttime="20191217 09:59:25.359" endtime="20191217 09:59:25.359"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>CarrierName=${XRS_GENERAL_INFORMATION.Address.Carrier_Name}</arg>
<arg>Country=${XRS_GENERAL_INFORMATION.Address.Country}</arg>
<arg>DotNumber=${XRS_GENERAL_INFORMATION.Address.DOT_Number}</arg>
<arg>Language=${XRS_GENERAL_INFORMATION.Localization.Language}</arg>
<arg>OrganizationId=${FAKE_TEST_ORGANIZATION_ID_1}</arg>
<arg>OrganizationName=${FAKE_TEST_ORGANIZATION_NAME_1}</arg>
<arg>ParentOrganizationId=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>ParentOrganizationSid=${XRS_GENERAL_INFORMATION.Company.ParentOrganizationSid}</arg>
<arg>TimeZone=CST</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT}</var>
</assign>
<msg timestamp="20191217 09:59:25.360" level="TRACE">Arguments: [ 'CarrierName=${XRS_GENERAL_INFORMATION.Address.Carrier_Name}' | 'Country=${XRS_GENERAL_INFORMATION.Address.Country}' | 'DotNumber=${XRS_GENERAL_INFORMATION.Address.DOT_Number}' | 'Language=${XRS_GENERAL_INFORMATION.Localization.Language}' | 'OrganizationId=${FAKE_TEST_ORGANIZATION_ID_1}' | 'OrganizationName=${FAKE_TEST_ORGANIZATION_NAME_1}' | 'ParentOrganizationId=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'ParentOrganizationSid=${XRS_GENERAL_INFORMATION.Company.ParentOrganizationSid}' | 'TimeZone=CST' ]</msg>
<msg timestamp="20191217 09:59:25.360" level="TRACE">Return: {'CarrierName': 'Gnome Shipping D3',
 'Country': 'USA',
 'DotNumber': 123456,
 'Language': 'English',
 'OrganizationId': 'windrun',
 'OrganizationName': 'wind run',
 'ParentOrganizationId': 46663,
 'ParentOrganizationSid': 414,
 'TimeZone': 'CST'}</msg>
<msg timestamp="20191217 09:59:25.361" level="INFO">&amp;{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT} = { CarrierName=Gnome Shipping D3 | Country=USA | DotNumber=123456 | Language=English | OrganizationId=windrun | OrganizationName=wind run | ParentOrganizationId=46663 | ParentOrganizationSid=414 | Time...</msg>
<status status="PASS" starttime="20191217 09:59:25.359" endtime="20191217 09:59:25.361"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST}</var>
</assign>
<msg timestamp="20191217 09:59:25.361" level="TRACE">Arguments: [ {'CarrierName': 'Gnome Shipping D3',
 'Country': 'USA',
 'DotNumber': 123456,
 'Language': 'English',
 'OrganizationId': 'windrun',
 'OrganizationName': 'wind run',
 'ParentOrganizationId': 46663,
 'ParentOrganizationSid': 414,
 'TimeZone': 'CST'} ]</msg>
<msg timestamp="20191217 09:59:25.361" level="TRACE">Return: [{'CarrierName': 'Gnome Shipping D3',
  'Country': 'USA',
  'DotNumber': 123456,
  'Language': 'English',
  'OrganizationId': 'windrun',
  'OrganizationName': 'wind run',
  'ParentOrganizationId': 46663,
  'ParentOrganizationSid': 414,
  'TimeZone': 'CST'}]</msg>
<msg timestamp="20191217 09:59:25.361" level="INFO">@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST} = [ {'CarrierName': 'Gnome Shipping D3', 'Country': 'USA', 'DotNumber': 123456, 'Language': 'English', 'OrganizationId': 'windrun', 'OrganizationName': 'wind run', 'ParentOrganizationId': 46663, 'Parent...</msg>
<status status="PASS" starttime="20191217 09:59:25.361" endtime="20191217 09:59:25.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT}</arg>
</arguments>
<msg timestamp="20191217 09:59:25.362" level="TRACE">Arguments: [ '${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT}' ]</msg>
<msg timestamp="20191217 09:59:25.362" level="INFO">${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT} = {'CarrierName': 'Gnome Shipping D3', 'Country': 'USA', 'DotNumber': 123456, 'Language': 'English', 'OrganizationId': 'windrun', 'OrganizationName': 'wind run', 'ParentOrganizationId': 46663, 'ParentOr...</msg>
<msg timestamp="20191217 09:59:25.362" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:25.362" endtime="20191217 09:59:25.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST}</arg>
</arguments>
<msg timestamp="20191217 09:59:25.362" level="TRACE">Arguments: [ '@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST}' ]</msg>
<msg timestamp="20191217 09:59:25.362" level="INFO">@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST} = [ {'CarrierName': 'Gnome Shipping D3', 'Country': 'USA', 'DotNumber': 123456, 'Language': 'English', 'OrganizationId': 'windrun', 'OrganizationName': 'wind run', 'ParentOrganizationId': 46663, 'Parent...</msg>
<msg timestamp="20191217 09:59:25.362" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:25.362" endtime="20191217 09:59:25.363"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Language=${XRS_GENERAL_INFORMATION.Localization.Language}</arg>
<arg>OrganizationId=${FAKE_TEST_ORGANIZATION_ID_1}</arg>
<arg>OrganizationName=${FAKE_TEST_ORGANIZATION_NAME_1}Modified</arg>
<arg>ParentOrganizationId=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_1_DICT}</var>
</assign>
<msg timestamp="20191217 09:59:25.363" level="TRACE">Arguments: [ 'Language=${XRS_GENERAL_INFORMATION.Localization.Language}' | 'OrganizationId=${FAKE_TEST_ORGANIZATION_ID_1}' | 'OrganizationName=${FAKE_TEST_ORGANIZATION_NAME_1}Modified' | 'ParentOrganizationId=${XRS_GENERAL_INFORMATION.Company.Company_ID}' ]</msg>
<msg timestamp="20191217 09:59:25.363" level="TRACE">Return: {'Language': 'English',
 'OrganizationId': 'windrun',
 'OrganizationName': 'wind runModified',
 'ParentOrganizationId': 46663}</msg>
<msg timestamp="20191217 09:59:25.363" level="INFO">&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_1_DICT} = { Language=English | OrganizationId=windrun | OrganizationName=wind runModified | ParentOrganizationId=46663 }</msg>
<status status="PASS" starttime="20191217 09:59:25.363" endtime="20191217 09:59:25.363"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST}</var>
</assign>
<msg timestamp="20191217 09:59:25.364" level="TRACE">Arguments: [ {'Language': 'English',
 'OrganizationId': 'windrun',
 'OrganizationName': 'wind runModified',
 'ParentOrganizationId': 46663} ]</msg>
<msg timestamp="20191217 09:59:25.364" level="TRACE">Return: [{'Language': 'English',
  'OrganizationId': 'windrun',
  'OrganizationName': 'wind runModified',
  'ParentOrganizationId': 46663}]</msg>
<msg timestamp="20191217 09:59:25.364" level="INFO">@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST} = [ {'Language': 'English', 'OrganizationId': 'windrun', 'OrganizationName': 'wind runModified', 'ParentOrganizationId': 46663} ]</msg>
<status status="PASS" starttime="20191217 09:59:25.363" endtime="20191217 09:59:25.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST}</arg>
</arguments>
<msg timestamp="20191217 09:59:25.364" level="TRACE">Arguments: [ '@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST}' ]</msg>
<msg timestamp="20191217 09:59:25.364" level="INFO">@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST} = [ {'Language': 'English', 'OrganizationId': 'windrun', 'OrganizationName': 'wind runModified', 'ParentOrganizationId': 46663} ]</msg>
<msg timestamp="20191217 09:59:25.364" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:25.364" endtime="20191217 09:59:25.364"></status>
</kw>
<msg timestamp="20191217 09:59:25.364" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:25.357" endtime="20191217 09:59:25.365"></status>
</kw>
<msg timestamp="20191217 09:59:25.365" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:25.356" endtime="20191217 09:59:25.365"></status>
</kw>
<test id="s1-s1-t1" name="Validate AWS XRS Get Organization By SID REST Web Services Returns 200 OK With Parent Organization SID">
<kw name="Get Organization By OrganizationSID" library="Organization">
<doc>Get Organization information for a particular Organization using the OrganizationSID</doc>
<arguments>
<arg>${XRS_GENERAL_INFORMATION.Company.ParentOrganizationSid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:25.366" level="TRACE">Arguments: [ ${organization_sid}=414 ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_GET_ORGANIZATION}/${organization_sid}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:25.366" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organization/414' ]</msg>
<msg timestamp="20191217 09:59:25.366" level="TRACE">Return: 'OrganizationWebService.svc/organization/414'</msg>
<msg timestamp="20191217 09:59:25.366" level="INFO">${uri} = OrganizationWebService.svc/organization/414</msg>
<status status="PASS" starttime="20191217 09:59:25.366" endtime="20191217 09:59:25.366"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:25.366" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organization/414' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:25.367" level="INFO">GET Request using : uri=OrganizationWebService.svc/organization/414, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:25.368" level="DEBUG">Starting new HTTPS connection (1): d3ws.xataxrs.com:443</msg>
<msg timestamp="20191217 09:59:26.249" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organization/414 HTTP/1.1" 200 657</msg>
<msg timestamp="20191217 09:59:26.250" level="DEBUG">GET Response : status=200, reason=OK
{"Address1":"12900 Whitewater Dr","Address2":"Suite 300","AllowSharedResourceGroup":true,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"Minnetonka","Country":"USA","CreateDate":"\/Date(1537828533000-0700)\/","DotNumber":"123456","FleetViewRefresh":5,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1574816207411-0800)\/","OrganizationId":"46663","OrganizationName":"Gnome Shipping D3","OrganizationSid":414,"ParentOrganizationId":null,"ParentOrganizationSid":0,"PostalCode":"55343","State":"Minnesota","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}</msg>
<msg timestamp="20191217 09:59:26.250" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:26.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:25.366" endtime="20191217 09:59:26.251"></status>
</kw>
<msg timestamp="20191217 09:59:26.251" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:26.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:25.365" endtime="20191217 09:59:26.251"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:26.252" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:26.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:26.252" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:26.252" endtime="20191217 09:59:26.252"></status>
</kw>
<doc>Verifies that a Organization with a specific number does not exist</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:25.365" endtime="20191217 09:59:26.253" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Validate AWS XRS Post Organization REST Web Services Returns Caption &quot;Request succeeded.&quot;">
<kw name="Post Organizations" library="Organization">
<doc>Calls the Post Method on Organizations.
Accepts a list of json objects
Json field definitions:
Address1
The Address of the organization.
Defaults to Parent Organization's value.
Address2
The Address of the organization.
Defaults to Parent Organization's value.
AllowSharedResourceGroup
An advanced feature, users can view and report on shared resources across organizations.
See Resource Group Field Definitions for more information.
AllowSubscriptionChange
When set to True, Omnitracs XRS will track any changes that affect subscription levels
(adding subscribers, or moving vehicles or drivers between organizations).
The customer will be billed based on the changes.
When set to False, customers must contact Omnitracs XRS or their sales channel for subscription changes.
BillingOrganizationId
The ID of the Billing Organization.
BillingOrganizationSid
The SID of the Billing Organization.
This value is generated automatically by Omnitracs XRS and can be retrieved using the GET method.
CarrierName
DOT-specific carrier name.
City
The name of the city where the organization is based.
Country
The name of the country where the organization is based.
CreateDate
The date and time the account was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
DotNumber
Company's US DOT Number.
FleetViewRefresh
A read only field indicating the ID of the last driver which logged into the Organization.
Language
A read only field indicating the name of the last driver which logged into the Organization.
ModifiedBy
The SID of the last Omnitracs XRS User that made modifications to the record.
ModifiedDate
The Date and Time the site record was last modified.
OrganizationID
The user-defined ID of the organization.
OrganizationName
A read-only field containing the name of the organization to which the Organization is assigned.
OrganizationSid
The internal system generated ID (primary key) of the Organization in Omnitracs XRS.
This value can be retrieved using the GET method.
ParentOrganizationID
The internal system generated ID (primary key) of the Parent Organization in Omnitracs XRS.
Note: This field is required if a ParentOrganizationSID value is not specified.
ParentOrganizationSid
The ID of the parent organization.
Note: This field is required if a Parent OrganizationID value is not specified.
PostalCode
The 5 to 9 digit zip code for the organization.
State
The state, province or territory for the organization.
Status
Indicates whether the Organization record is active within Omnitracs XRS.
TimeZone
Identifies the Time Zone the Organization is located in.
UnitOfMeasure
The unit of measure selected for this organization. This applies to all performance and compliance based reporting.
Standard (MPG)
Metric (KM/L)</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:26.257" level="TRACE">Arguments: [ @{list_data}=[{'CarrierName': 'Gnome Shipping D3',
  'Country': 'USA',
  'DotNumber': 123456,
  'Language': 'English',
  'OrganizationId': 'windrun',
  'OrganizationName': 'wind run',
  'ParentOrganizationId': 46663,
  'ParentOrganizationSid': 414,
  'TimeZone': 'CST'}] ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:26.258" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations' ]</msg>
<msg timestamp="20191217 09:59:26.258" level="TRACE">Return: 'OrganizationWebService.svc/organizations'</msg>
<msg timestamp="20191217 09:59:26.258" level="INFO">${uri} = OrganizationWebService.svc/organizations</msg>
<status status="PASS" starttime="20191217 09:59:26.258" endtime="20191217 09:59:26.258"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:26.259" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations' | json=[{'CarrierName': 'Gnome Shipping D3',
  'Country': 'USA',
  'DotNumber': 123456,
  'Language': 'English',
  'OrganizationId': 'windrun',
  'OrganizationName': 'wind run',
  'ParentOrganizationId': 46663,
  'ParentOrganizationSid': 414,
  'TimeZone': 'CST'}] | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:26.260" level="INFO">POST Request using : uri=OrganizationWebService.svc/organizations, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=[{'CarrierName': 'Gnome Shipping D3', 'Country': 'USA', 'DotNumber': 123456, 'Language': 'English', 'OrganizationId': 'windrun', 'OrganizationName': 'wind run', 'ParentOrganizationId': 46663, 'ParentOrganizationSid': 414, 'TimeZone': 'CST'}]</msg>
<msg timestamp="20191217 09:59:28.201" level="DEBUG">https://d3ws.xataxrs.com:443 "POST /OrganizationWebService.svc/organizations HTTP/1.1" 200 195</msg>
<msg timestamp="20191217 09:59:28.202" level="DEBUG">POST Response : status=200, reason=OK
[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Organization Added Successfully.","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}]</msg>
<msg timestamp="20191217 09:59:28.202" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:28.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:26.259" endtime="20191217 09:59:28.203"></status>
</kw>
<msg timestamp="20191217 09:59:28.203" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:28.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:26.256" endtime="20191217 09:59:28.203"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20191217 09:59:28.204" level="TRACE">Arguments: [ b'[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Organization Added Successfully.","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}]' ]</msg>
<msg timestamp="20191217 09:59:28.204" level="INFO">To JSON using : content=[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Organization Added Successfully.","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}] </msg>
<msg timestamp="20191217 09:59:28.204" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191217 09:59:28.204" level="TRACE">Return: [{'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Organization Added Successfully.',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'}]</msg>
<msg timestamp="20191217 09:59:28.204" level="INFO">${json_response} = [{'Caption': 'Request succeeded.', 'Code': '12538021530103185408', 'Description': 'Organization Added Successfully.', 'Id': 'windrun', 'ObjectName': 'Organization', 'SID': 531, 'Title': 'Request succe...</msg>
<status status="PASS" starttime="20191217 09:59:28.204" endtime="20191217 09:59:28.204"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = {'Caption': 'Request succeeded.', 'Code': '12538021530103185408', 'Description': 'Organization Added Successfully.', 'Id': 'windrun', 'ObjectName': 'Organization', 'SID': 531, 'Title': 'Request succee..." type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Caption]</arg>
<arg>Request succeeded.</arg>
</arguments>
<msg timestamp="20191217 09:59:28.205" level="TRACE">Arguments: [ 'Request succeeded.' | 'Request succeeded.' ]</msg>
<msg timestamp="20191217 09:59:28.205" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:28.205" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:28.205" endtime="20191217 09:59:28.206"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${r}[SID]</arg>
</arguments>
<assign>
<var>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</var>
</assign>
<msg timestamp="20191217 09:59:28.206" level="TRACE">Arguments: [ 531 ]</msg>
<msg timestamp="20191217 09:59:28.206" level="TRACE">Return: 531</msg>
<msg timestamp="20191217 09:59:28.206" level="INFO">${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID} = 531</msg>
<status status="PASS" starttime="20191217 09:59:28.206" endtime="20191217 09:59:28.206"></status>
</kw>
<status status="PASS" starttime="20191217 09:59:28.205" endtime="20191217 09:59:28.206"></status>
</kw>
<status status="PASS" starttime="20191217 09:59:28.205" endtime="20191217 09:59:28.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
</arguments>
<msg timestamp="20191217 09:59:28.207" level="TRACE">Arguments: [ '${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}' ]</msg>
<msg timestamp="20191217 09:59:28.207" level="INFO">${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID} = 531</msg>
<msg timestamp="20191217 09:59:28.207" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:28.207" endtime="20191217 09:59:28.207"></status>
</kw>
<doc>Posts a Organization and expects a Caption value "Request succeeded."</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:26.254" endtime="20191217 09:59:28.207" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Validate AWS XRS Get Organization By SID REST Web Services Returns 200 OK With New Organization">
<kw name="Get Organization By OrganizationSID" library="Organization">
<doc>Get Organization information for a particular Organization using the OrganizationSID</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:28.211" level="TRACE">Arguments: [ ${organization_sid}=531 ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_GET_ORGANIZATION}/${organization_sid}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:28.212" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organization/531' ]</msg>
<msg timestamp="20191217 09:59:28.212" level="TRACE">Return: 'OrganizationWebService.svc/organization/531'</msg>
<msg timestamp="20191217 09:59:28.212" level="INFO">${uri} = OrganizationWebService.svc/organization/531</msg>
<status status="PASS" starttime="20191217 09:59:28.211" endtime="20191217 09:59:28.212"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:28.212" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organization/531' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:28.213" level="INFO">GET Request using : uri=OrganizationWebService.svc/organization/531, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:29.007" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organization/531 HTTP/1.1" 200 604</msg>
<msg timestamp="20191217 09:59:29.007" level="DEBUG">GET Response : status=200, reason=OK
{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}</msg>
<msg timestamp="20191217 09:59:29.007" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:29.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:28.212" endtime="20191217 09:59:29.008"></status>
</kw>
<msg timestamp="20191217 09:59:29.008" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:29.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:28.210" endtime="20191217 09:59:29.008"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:29.010" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:29.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:29.010" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:29.009" endtime="20191217 09:59:29.010"></status>
</kw>
<doc>Verifies that a posted Organization now exists</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:28.209" endtime="20191217 09:59:29.011" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Validate AWS XRS Put Organization REST Web Services Modifies Description Successfully">
<kw name="Put Organizations" library="Organization">
<doc>Calls the Put Method on Organizations.
Accepts a list of json objects
See Json field definitions in the "Post Organizations" Keyword</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:29.016" level="TRACE">Arguments: [ @{list_data}=[{'Language': 'English',
  'OrganizationId': 'windrun',
  'OrganizationName': 'wind runModified',
  'ParentOrganizationId': 46663}] ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_PUT_ORGANIZATIONS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:29.016" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/update' ]</msg>
<msg timestamp="20191217 09:59:29.017" level="TRACE">Return: 'OrganizationWebService.svc/organizations/update'</msg>
<msg timestamp="20191217 09:59:29.017" level="INFO">${uri} = OrganizationWebService.svc/organizations/update</msg>
<status status="PASS" starttime="20191217 09:59:29.016" endtime="20191217 09:59:29.017"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:29.018" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/update' | json=[{'Language': 'English',
  'OrganizationId': 'windrun',
  'OrganizationName': 'wind runModified',
  'ParentOrganizationId': 46663}] | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:29.018" level="INFO">PUT Request using : uri=OrganizationWebService.svc/organizations/update, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=[{'Language': 'English', 'OrganizationId': 'windrun', 'OrganizationName': 'wind runModified', 'ParentOrganizationId': 46663}]</msg>
<msg timestamp="20191217 09:59:29.531" level="DEBUG">https://d3ws.xataxrs.com:443 "PUT /OrganizationWebService.svc/organizations/update HTTP/1.1" 200 196</msg>
<msg timestamp="20191217 09:59:29.532" level="DEBUG">PUT Response : status=200, reason=OK
[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Organization Edited Successfully.","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}]</msg>
<msg timestamp="20191217 09:59:29.532" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:29.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:29.017" endtime="20191217 09:59:29.533"></status>
</kw>
<msg timestamp="20191217 09:59:29.533" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:29.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:29.015" endtime="20191217 09:59:29.533"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20191217 09:59:29.535" level="TRACE">Arguments: [ b'[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Organization Edited Successfully.","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}]' ]</msg>
<msg timestamp="20191217 09:59:29.536" level="INFO">To JSON using : content=[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Organization Edited Successfully.","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}] </msg>
<msg timestamp="20191217 09:59:29.536" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191217 09:59:29.536" level="TRACE">Return: [{'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Organization Edited Successfully.',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'}]</msg>
<msg timestamp="20191217 09:59:29.537" level="INFO">${json_response} = [{'Caption': 'Request succeeded.', 'Code': '12538021530103185408', 'Description': 'Organization Edited Successfully.', 'Id': 'windrun', 'ObjectName': 'Organization', 'SID': 531, 'Title': 'Request succ...</msg>
<status status="PASS" starttime="20191217 09:59:29.535" endtime="20191217 09:59:29.537"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = {'Caption': 'Request succeeded.', 'Code': '12538021530103185408', 'Description': 'Organization Edited Successfully.', 'Id': 'windrun', 'ObjectName': 'Organization', 'SID': 531, 'Title': 'Request succe..." type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Organization Edited Successfully.</arg>
</arguments>
<msg timestamp="20191217 09:59:29.539" level="TRACE">Arguments: [ 'Organization Edited Successfully.' | 'Organization Edited Successfully.' ]</msg>
<msg timestamp="20191217 09:59:29.539" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:29.539" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:29.538" endtime="20191217 09:59:29.540"></status>
</kw>
<status status="PASS" starttime="20191217 09:59:29.538" endtime="20191217 09:59:29.540"></status>
</kw>
<status status="PASS" starttime="20191217 09:59:29.538" endtime="20191217 09:59:29.540"></status>
</kw>
<doc>Posts a Organization and expects a Code value of 201</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:29.014" endtime="20191217 09:59:29.541" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Validate AWS XRS Get Organizations By Parameters REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191217 09:59:29.546" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191217 09:59:29.547" level="TRACE">Return: ['2019', '12', '17']</msg>
<msg timestamp="20191217 09:59:29.547" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191217 09:59:29.547" level="INFO">${mm} = 12</msg>
<msg timestamp="20191217 09:59:29.547" level="INFO">${dd} = 17</msg>
<status status="PASS" starttime="20191217 09:59:29.546" endtime="20191217 09:59:29.547"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191217 09:59:29.549" level="TRACE">Arguments: [ 'OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191217 09:59:29.549" level="TRACE">Return: {'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531}</msg>
<msg timestamp="20191217 09:59:29.550" level="INFO">&amp;{params} = { OrganizationSid=531 | IsActive=True | AsOfDateTime=12/17/2019 }</msg>
<status status="PASS" starttime="20191217 09:59:29.548" endtime="20191217 09:59:29.550"></status>
</kw>
<kw name="Verify Get Organizations With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191217 09:59:29.551" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<msg timestamp="20191217 09:59:29.552" level="TRACE">Arguments: [ '/' ]</msg>
<msg timestamp="20191217 09:59:29.552" level="TRACE">Return: '/'</msg>
<msg timestamp="20191217 09:59:29.552" level="INFO">${ending_character} = /</msg>
<status status="PASS" starttime="20191217 09:59:29.552" endtime="20191217 09:59:29.552"></status>
</kw>
<kw name="Get Organizations With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Organization">
<doc>This Keyword modifies character between the base uri and the parameters
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Organizations Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:29.553" level="TRACE">Arguments: [ ${ending_character}='/' | ${params}={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:29.554" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/' ]</msg>
<msg timestamp="20191217 09:59:29.554" level="TRACE">Return: 'OrganizationWebService.svc/organizations/'</msg>
<msg timestamp="20191217 09:59:29.554" level="INFO">${uri} = OrganizationWebService.svc/organizations/</msg>
<status status="PASS" starttime="20191217 09:59:29.553" endtime="20191217 09:59:29.554"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:29.554" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531} ]</msg>
<msg timestamp="20191217 09:59:29.555" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations/, params={'OrganizationSid': 531, 'IsActive': 'True', 'AsOfDateTime': '12/17/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:29.966" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12%2F17%2F2019 HTTP/1.1" 200 606</msg>
<msg timestamp="20191217 09:59:29.969" level="DEBUG">GET Response : status=200, reason=OK
[{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}]</msg>
<msg timestamp="20191217 09:59:29.969" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:29.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:29.554" endtime="20191217 09:59:29.971"></status>
</kw>
<msg timestamp="20191217 09:59:29.971" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:29.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:29.552" endtime="20191217 09:59:29.972"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:29.974" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:29.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:29.974" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:29.973" endtime="20191217 09:59:29.974"></status>
</kw>
<msg timestamp="20191217 09:59:29.975" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:29.551" endtime="20191217 09:59:29.975"></status>
</kw>
<kw name="Verify Get Organizations Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191217 09:59:29.978" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531} ]</msg>
<kw name="Get Organizations" library="Organization">
<doc>Call the Get Method on Organizations.
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
The date and time are associated with the last modified date and time of the record.
System Limit: 30 days
Status
Filters results to active organizations only.
Valid Values: True False Both
Active (same as True)
Inactive (same as False)
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationId
Limits results to organizations that fall under the specified organization.
ResourceGroupId
Limits results to Organizations in one or more resource groups.
OrganizationSid
Limits results to organizations that fall under the specified organization.
ResourceGroupSid
Limits results to Organizations in one or more resource groups.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:29.980" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:29.981" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations' ]</msg>
<msg timestamp="20191217 09:59:29.981" level="TRACE">Return: 'OrganizationWebService.svc/organizations'</msg>
<msg timestamp="20191217 09:59:29.982" level="INFO">${uri} = OrganizationWebService.svc/organizations</msg>
<status status="PASS" starttime="20191217 09:59:29.980" endtime="20191217 09:59:29.982"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:29.983" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531} ]</msg>
<msg timestamp="20191217 09:59:29.984" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations, params={'OrganizationSid': 531, 'IsActive': 'True', 'AsOfDateTime': '12/17/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:30.474" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12%2F17%2F2019 HTTP/1.1" 200 606</msg>
<msg timestamp="20191217 09:59:30.475" level="DEBUG">GET Response : status=200, reason=OK
[{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}]</msg>
<msg timestamp="20191217 09:59:30.476" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:30.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:29.982" endtime="20191217 09:59:30.476"></status>
</kw>
<msg timestamp="20191217 09:59:30.476" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:30.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:29.979" endtime="20191217 09:59:30.477"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:30.477" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:30.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:30.477" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:30.477" endtime="20191217 09:59:30.478"></status>
</kw>
<msg timestamp="20191217 09:59:30.478" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:29.977" endtime="20191217 09:59:30.478"></status>
</kw>
<doc>Get Organizations with basic parameters</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:29.545" endtime="20191217 09:59:30.479" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Validate AWS XRS Get Organizations By Parameters REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Organizations Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191217 09:59:30.483" level="TRACE">Arguments: [ ${character_string}='/?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191217 09:59:30.486" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191217 09:59:30.486" level="TRACE">Return: ['2019', '12', '17']</msg>
<msg timestamp="20191217 09:59:30.486" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191217 09:59:30.486" level="INFO">${mm} = 12</msg>
<msg timestamp="20191217 09:59:30.487" level="INFO">${dd} = 17</msg>
<status status="PASS" starttime="20191217 09:59:30.484" endtime="20191217 09:59:30.487"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191217 09:59:30.487" level="TRACE">Arguments: [ 'OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191217 09:59:30.488" level="TRACE">Return: {'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531}</msg>
<msg timestamp="20191217 09:59:30.489" level="INFO">&amp;{params} = { OrganizationSid=531 | IsActive=True | AsOfDateTime=12/17/2019 }</msg>
<status status="PASS" starttime="20191217 09:59:30.487" endtime="20191217 09:59:30.489"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}</arg>
<arg>${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191217 09:59:30.490" level="TRACE">Arguments: [ ${base_uri}='OrganizationWebService.svc' | ${request_type}='/organizations' | ${character_string}='/?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:30.491" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/?' ]</msg>
<msg timestamp="20191217 09:59:30.491" level="TRACE">Return: 'OrganizationWebService.svc/organizations/?'</msg>
<msg timestamp="20191217 09:59:30.491" level="INFO">${uri} = OrganizationWebService.svc/organizations/?</msg>
<status status="PASS" starttime="20191217 09:59:30.491" endtime="20191217 09:59:30.491"></status>
</kw>
<msg timestamp="20191217 09:59:30.492" level="TRACE">Return: 'OrganizationWebService.svc/organizations/?'</msg>
<msg timestamp="20191217 09:59:30.492" level="INFO">${uri_string} = OrganizationWebService.svc/organizations/?</msg>
<status status="PASS" starttime="20191217 09:59:30.489" endtime="20191217 09:59:30.492"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationSid=${params.OrganizationSid}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:30.493" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019' ]</msg>
<msg timestamp="20191217 09:59:30.493" level="TRACE">Return: 'OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019'</msg>
<msg timestamp="20191217 09:59:30.493" level="INFO">${uri} = OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019</msg>
<status status="PASS" starttime="20191217 09:59:30.492" endtime="20191217 09:59:30.493"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:30.494" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:30.494" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:30.975" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019 HTTP/1.1" 200 606</msg>
<msg timestamp="20191217 09:59:30.976" level="DEBUG">GET Response : status=200, reason=OK
[{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}]</msg>
<msg timestamp="20191217 09:59:30.977" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:30.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:30.494" endtime="20191217 09:59:30.977"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:30.979" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:30.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:30.979" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:30.978" endtime="20191217 09:59:30.979"></status>
</kw>
<msg timestamp="20191217 09:59:30.980" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:30.483" endtime="20191217 09:59:30.980"></status>
</kw>
<kw name="Verify Get Organizations Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191217 09:59:30.982" level="TRACE">Arguments: [ ${character_string}='?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191217 09:59:30.982" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191217 09:59:30.983" level="TRACE">Return: ['2019', '12', '17']</msg>
<msg timestamp="20191217 09:59:30.983" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191217 09:59:30.983" level="INFO">${mm} = 12</msg>
<msg timestamp="20191217 09:59:30.983" level="INFO">${dd} = 17</msg>
<status status="PASS" starttime="20191217 09:59:30.982" endtime="20191217 09:59:30.983"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191217 09:59:30.984" level="TRACE">Arguments: [ 'OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191217 09:59:30.984" level="TRACE">Return: {'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531}</msg>
<msg timestamp="20191217 09:59:30.985" level="INFO">&amp;{params} = { OrganizationSid=531 | IsActive=True | AsOfDateTime=12/17/2019 }</msg>
<status status="PASS" starttime="20191217 09:59:30.983" endtime="20191217 09:59:30.985"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}</arg>
<arg>${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191217 09:59:30.986" level="TRACE">Arguments: [ ${base_uri}='OrganizationWebService.svc' | ${request_type}='/organizations' | ${character_string}='?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:30.987" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations?' ]</msg>
<msg timestamp="20191217 09:59:30.987" level="TRACE">Return: 'OrganizationWebService.svc/organizations?'</msg>
<msg timestamp="20191217 09:59:30.987" level="INFO">${uri} = OrganizationWebService.svc/organizations?</msg>
<status status="PASS" starttime="20191217 09:59:30.987" endtime="20191217 09:59:30.988"></status>
</kw>
<msg timestamp="20191217 09:59:30.988" level="TRACE">Return: 'OrganizationWebService.svc/organizations?'</msg>
<msg timestamp="20191217 09:59:30.988" level="INFO">${uri_string} = OrganizationWebService.svc/organizations?</msg>
<status status="PASS" starttime="20191217 09:59:30.985" endtime="20191217 09:59:30.988"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationSid=${params.OrganizationSid}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:30.989" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019' ]</msg>
<msg timestamp="20191217 09:59:30.990" level="TRACE">Return: 'OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019'</msg>
<msg timestamp="20191217 09:59:30.990" level="INFO">${uri} = OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019</msg>
<status status="PASS" starttime="20191217 09:59:30.988" endtime="20191217 09:59:30.990"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:30.991" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:30.991" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:31.430" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019 HTTP/1.1" 200 606</msg>
<msg timestamp="20191217 09:59:31.431" level="DEBUG">GET Response : status=200, reason=OK
[{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}]</msg>
<msg timestamp="20191217 09:59:31.432" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:31.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:30.990" endtime="20191217 09:59:31.432"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:31.434" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:31.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:31.434" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:31.433" endtime="20191217 09:59:31.435"></status>
</kw>
<msg timestamp="20191217 09:59:31.435" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:30.981" endtime="20191217 09:59:31.435"></status>
</kw>
<doc>Get Organizations with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:30.481" endtime="20191217 09:59:31.437" critical="yes"></status>
</test>
<test id="s1-s1-t7" name="Validate AWS XRS Get Organizations By ID REST Web Services Returns 200 OK">
<kw name="Get Organizations By ID" library="Organization">
<doc>Get organizations by ID.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:31.446" level="TRACE">Arguments: [ ${organization_id}='windrun' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}/${organization_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:31.447" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/windrun' ]</msg>
<msg timestamp="20191217 09:59:31.448" level="TRACE">Return: 'OrganizationWebService.svc/organizations/windrun'</msg>
<msg timestamp="20191217 09:59:31.448" level="INFO">${uri} = OrganizationWebService.svc/organizations/windrun</msg>
<status status="PASS" starttime="20191217 09:59:31.446" endtime="20191217 09:59:31.448"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:31.449" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/windrun' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:31.450" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations/windrun, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:31.926" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations/windrun HTTP/1.1" 200 604</msg>
<msg timestamp="20191217 09:59:31.927" level="DEBUG">GET Response : status=200, reason=OK
{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}</msg>
<msg timestamp="20191217 09:59:31.927" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:31.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:31.448" endtime="20191217 09:59:31.928"></status>
</kw>
<msg timestamp="20191217 09:59:31.928" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:31.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:31.444" endtime="20191217 09:59:31.928"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:31.930" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:31.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:31.931" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:31.929" endtime="20191217 09:59:31.931"></status>
</kw>
<doc>Get organization by ID returns 200 OK</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:31.442" endtime="20191217 09:59:31.932" critical="yes"></status>
</test>
<test id="s1-s1-t8" name="Validate AWS XRS Get Organizations REST Web Services For All Organizations Returns 200 OK">
<kw name="Get All Organizations" library="Organization">
<doc>Get attributes for all organizations.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:31.937" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:31.938" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations' ]</msg>
<msg timestamp="20191217 09:59:31.939" level="TRACE">Return: 'OrganizationWebService.svc/organizations'</msg>
<msg timestamp="20191217 09:59:31.939" level="INFO">${uri} = OrganizationWebService.svc/organizations</msg>
<status status="PASS" starttime="20191217 09:59:31.937" endtime="20191217 09:59:31.939"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:31.940" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:31.940" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:32.639" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations HTTP/1.1" 200 25505</msg>
<msg timestamp="20191217 09:59:32.690" level="DEBUG">GET Response : status=200, reason=OK
[{"Address1":"12900 Whitewater Dr","Address2":"Suite 300","AllowSharedResourceGroup":true,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"Minnetonka","Country":"USA","CreateDate":"\/Date(1537828533000-0700)\/","DotNumber":"123456","FleetViewRefresh":5,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1574816207411-0800)\/","OrganizationId":"46663","OrganizationName":"Gnome Shipping D3","OrganizationSid":414,"ParentOrganizationId":null,"ParentOrganizationSid":0,"PostalCode":"55343","State":"Minnesota","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576132837331-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576132837491-0800)\/","OrganizationId":"adultmanager","OrganizationName":"adult manager","OrganizationSid":503,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576203698026-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576203698479-0800)\/","OrganizationId":"agebelieve","OrganizationName":"age believe","OrganizationSid":518,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576199130592-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576199130747-0800)\/","OrganizationId":"alonevalue","OrganizationName":"alone value","OrganizationSid":516,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576203947761-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576203947586-0800)\/","OrganizationId":"availabledevelopment","OrganizationName":"available development","OrganizationSid":520,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"12900 Whitewater Dr","Address2":"Suite 300","AllowSharedResourceGroup":true,"AllowSubscriptionChange":false,"BillingOrganizationId":"46663","BillingOrganizationSid":414,"CarrierName":"Gnome Shipping D3","City":"Minnetonka","Country":"USA","CreateDate":"\/Date(1556163634892-0700)\/","DotNumber":"123456","FleetViewRefresh":5,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1575348898444-0800)\/","OrganizationId":"Bob","OrganizationName":"Bob","OrganizationSid":482,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"55343","State":"Minnesota","Status":true,"TimeZone":"HST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576132502418-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576132502318-0800)\/","OrganizationId":"bytop","OrganizationName":"by top","OrganizationSid":501,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576203973165-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576203973436-0800)\/","OrganizationId":"carpopulation","OrganizationName":"car population","OrganizationSid":521,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576204288823-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576204288762-0800)\/","OrganizationId":"designcourt","OrganizationName":"design court","OrganizationSid":523,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576132876437-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576132876598-0800)\/","OrganizationId":"directorcompare","OrganizationName":"director compare","OrganizationSid":504,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576198711058-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576198711082-0800)\/","OrganizationId":"discoveradd","OrganizationName":"discover add","OrganizationSid":513,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576122799498-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576122799351-0800)\/","OrganizationId":"Evaluate FakerLibrary.WordEvaluate FakerLibrary.Word","OrganizationName":"Evaluate FakerLibrary.Word Evaluate FakerLibrary.Word","OrganizationSid":499,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576122678864-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576122678742-0800)\/","OrganizationId":"FakerLibrary.WordFakerLibrary.Word","OrganizationName":"FakerLibrary.Word FakerLibrary.Word","OrganizationSid":498,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"12900 Whitewater Dr","Address2":"Suite 300","AllowSharedResourceGroup":true,"AllowSubscriptionChange":false,"BillingOrganizationId":"46663","BillingOrganizationSid":414,"CarrierName":"Gnome Shipping D3","City":"Minnetonka","Country":"USA","CreateDate":"\/Date(1575692062764-0800)\/","DotNumber":"123456","FleetViewRefresh":5,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576109206905-0800)\/","OrganizationId":"fghjfghjfghj","OrganizationName":"testme name","OrganizationSid":494,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"55343","State":"Minnesota","Status":true,"TimeZone":"NFLD","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576204315081-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576204314934-0800)\/","OrganizationId":"glasshair","OrganizationName":"glass hair","OrganizationSid":524,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627049977-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627049929-0800)\/","OrganizationId":"hundredwind","OrganizationName":"hundred wind","OrganizationSid":530,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576194403361-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576194403499-0800)\/","OrganizationId":"itselfmedia","OrganizationName":"itself media","OrganizationSid":511,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576205393649-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576205393420-0800)\/","OrganizationId":"leaderappear","OrganizationName":"leader appear","OrganizationSid":526,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576199029080-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576199029238-0800)\/","OrganizationId":"legscene","OrganizationName":"leg scene","OrganizationSid":515,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576193414920-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576193415165-0800)\/","OrganizationId":"lookstar","OrganizationName":"look star","OrganizationSid":506,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576111786284-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576111786488-0800)\/","OrganizationId":"neworgid","OrganizationName":"neworg name","OrganizationSid":495,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576113163095-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576113163460-0800)\/","OrganizationId":"neworgid2","OrganizationName":"neworg name2","OrganizationSid":496,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576198598102-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576198598271-0800)\/","OrganizationId":"nicescene","OrganizationName":"nice scene","OrganizationSid":512,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576198957632-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576198957614-0800)\/","OrganizationId":"officermain","OrganizationName":"officer main","OrganizationSid":514,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576193807638-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576193807711-0800)\/","OrganizationId":"onapply","OrganizationName":"on apply","OrganizationSid":509,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576203513711-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576203513717-0800)\/","OrganizationId":"pieceseries","OrganizationName":"piece series","OrganizationSid":517,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"12900 Whitewater Dr","Address2":"Suite 300","AllowSharedResourceGroup":true,"AllowSubscriptionChange":false,"BillingOrganizationId":"46663","BillingOrganizationSid":414,"CarrierName":"Gnome Shipping D3","City":"Minnetonka","Country":"USA","CreateDate":"\/Date(1576113346196-0800)\/","DotNumber":"123456","FleetViewRefresh":5,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576113346196-0800)\/","OrganizationId":"sdfgsdfgdfg","OrganizationName":"ksdjfhgkjsdg","OrganizationSid":497,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"55343","State":"Minnesota","Status":true,"TimeZone":"HST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576194375306-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576194375502-0800)\/","OrganizationId":"sherequire","OrganizationName":"she require","OrganizationSid":510,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576626894133-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576626894519-0800)\/","OrganizationId":"sidelate","OrganizationName":"side late","OrganizationSid":528,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576204005471-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576204005274-0800)\/","OrganizationId":"sidestand","OrganizationName":"side stand","OrganizationSid":522,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576128882233-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576128882274-0800)\/","OrganizationId":"simplybecause","OrganizationName":"simply because","OrganizationSid":500,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627001150-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627001284-0800)\/","OrganizationId":"simplything","OrganizationName":"simply thing","OrganizationSid":529,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576132795706-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576132795968-0800)\/","OrganizationId":"strategymeeting","OrganizationName":"strategy meeting","OrganizationSid":502,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"12900 Whitewater Dr","Address2":"300","AllowSharedResourceGroup":true,"AllowSubscriptionChange":false,"BillingOrganizationId":"46663","BillingOrganizationSid":414,"CarrierName":"SvirfneblinSyndicate","City":"Minnetonka","Country":"USA","CreateDate":"\/Date(1537907376514-0700)\/","DotNumber":"12312312","FleetViewRefresh":5,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1575349017631-0800)\/","OrganizationId":"SvirfneblinSyndicate","OrganizationName":"SvirfneblinSyndicate","OrganizationSid":415,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"55343","State":"Minnesota","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576204512559-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576204512897-0800)\/","OrganizationId":"testarticle","OrganizationName":"test article","OrganizationSid":525,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576626487900-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576626487870-0800)\/","OrganizationId":"themcreate","OrganizationName":"them create","OrganizationSid":527,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576193767687-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576193767766-0800)\/","OrganizationId":"uponremember","OrganizationName":"upon remember","OrganizationSid":508,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576203769350-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576203769194-0800)\/","OrganizationId":"whatparticipant","OrganizationName":"what participant","OrganizationSid":519,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576132988050-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576132988266-0800)\/","OrganizationId":"whiterule","OrganizationName":"white rule","OrganizationSid":505,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"},{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576193686932-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576193687184-0800)\/","OrganizationId":"withloss","OrganizationName":"with loss","OrganizationSid":507,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}]</msg>
<msg timestamp="20191217 09:59:32.691" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:32.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:31.939" endtime="20191217 09:59:32.691"></status>
</kw>
<msg timestamp="20191217 09:59:32.691" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:32.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:31.937" endtime="20191217 09:59:32.691"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:32.693" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:32.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:32.693" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:32.693" endtime="20191217 09:59:32.693"></status>
</kw>
<doc>Gets all the Organizations</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:31.934" endtime="20191217 09:59:32.694" critical="yes"></status>
</test>
<test id="s1-s1-t9" name="Validate AWS XRS Get Organizations Performance (settings) Data By SID REST Web Services Returns 200 OK">
<kw name="Get Organizations Performance Data By ID" library="Organization">
<doc>Get performance (settings) data for all organizations by ID</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:32.699" level="TRACE">Arguments: [ ${organization_id}='windrun' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}/${organization_id}/performance</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:32.700" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/windrun/performance' ]</msg>
<msg timestamp="20191217 09:59:32.700" level="TRACE">Return: 'OrganizationWebService.svc/organizations/windrun/performance'</msg>
<msg timestamp="20191217 09:59:32.700" level="INFO">${uri} = OrganizationWebService.svc/organizations/windrun/performance</msg>
<status status="PASS" starttime="20191217 09:59:32.700" endtime="20191217 09:59:32.701"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:32.701" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/windrun/performance' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:32.702" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations/windrun/performance, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:33.094" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations/windrun/performance HTTP/1.1" 404 1782</msg>
<msg timestamp="20191217 09:59:33.095" level="DEBUG">GET Response : status=404, reason=Not Found
﻿&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
  &lt;head&gt;
    &lt;title&gt;Service&lt;/title&gt;
    &lt;style&gt;BODY { color: #000000; background-color: white; font-family: Verdana; margin-left: 0px; margin-top: 0px; } #content { margin-left: 30px; font-size: .70em; padding-bottom: 2em; } A:link { color: #336699; font-weight: bold; text-decoration: underline; } A:visited { color: #6699cc; font-weight: bold; text-decoration: underline; } A:active { color: #336699; font-weight: bold; text-decoration: underline; } .heading1 { background-color: #003366; border-bottom: #336699 6px solid; color: #ffffff; font-family: Tahoma; font-size: 26px; font-weight: normal;margin: 0em 0em 10px -20px; padding-bottom: 8px; padding-left: 30px;padding-top: 16px;} pre { font-size:small; background-color: #e5e5cc; padding: 5px; font-family: Courier New; margin-top: 0px; border: 1px #f0f0e0 solid; white-space: pre-wrap; white-space: -pre-wrap; word-wrap: break-word; } table { border-collapse: collapse; border-spacing: 0px; font-family: Verdana;} table th { border-right: 2px white solid; border-bottom: 2px white solid; font-weight: bold; background-color: #cecf9c;} table td { border-right: 2px white solid; border-bottom: 2px white solid; background-color: #e5e5cc;}&lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id="content"&gt;
      &lt;p class="heading1"&gt;Service&lt;/p&gt;
      &lt;p xmlns=""&gt;Endpoint not found. Please see the &lt;a rel="help-page" href="http://xrs-apigw-ws-2a944cb0887450de.elb.us-east-1.amazonaws.com/OrganizationWebService.svc/help"&gt;service help page&lt;/a&gt; for constructing valid requests to the service.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20191217 09:59:33.095" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20191217 09:59:33.095" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:32.701" endtime="20191217 09:59:33.095"></status>
</kw>
<msg timestamp="20191217 09:59:33.096" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20191217 09:59:33.096" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:32.699" endtime="20191217 09:59:33.096"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:33.098" level="TRACE">Arguments: [ 404 | '200' ]</msg>
<msg timestamp="20191217 09:59:33.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:33.099" level="FAIL">404 != 200</msg>
<msg timestamp="20191217 09:59:33.099" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20191217 09:59:33.098" endtime="20191217 09:59:33.099"></status>
</kw>
<doc>Get organization performance endpoint by ID returns 200 OK</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="FAIL" starttime="20191217 09:59:32.697" endtime="20191217 09:59:33.101" critical="yes">404 != 200</status>
</test>
<test id="s1-s1-t10" name="Validate AWS XRS Put Organization Performance (settings) Data By SID REST Web Services Updates Settings Correctly">
<kw name="Load JSON From File" library="JSONLibrary">
<doc>Load JSON from file.</doc>
<arguments>
<arg>C:\\Users\\kstine\\git\\aws-api-gateway-tests\\Tests\\AWS_XRS_WebServicesTests/organization_performance_minimum_setting.json</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20191217 09:59:33.108" level="TRACE">Arguments: [ 'C:\\Users\\kstine\\git\\aws-api-gateway-tests\\Tests\\AWS_XRS_WebServicesTests/organization_performance_minimum_setting.json' ]</msg>
<msg timestamp="20191217 09:59:33.108" level="DEBUG">Check if file exists</msg>
<msg timestamp="20191217 09:59:33.109" level="TRACE">Return: [{'Key': 'AbsHardBrakeEnable', 'Value': '0'},
 {'Key': 'ExcessiveOverspeedThreshold', 'Value': '5'},
 {'Key': 'ExcessiveOverspeedEnable', 'Value': '0'},
 {'Key': 'OverspeedThreshold', 'Value': '5'},
 {'Key': 'OverspeedEnable', 'Value': '0'},
 {'Key': 'CMSXBRThreshold', 'Value': '-1'},
 {'Key': 'ForwardCollisionWarningCriticalEventDetection', 'Value': '0'},
 {'Key': 'HapticWarningXBRThreshold', 'Value': '-1'},
 {'Key': 'FCWOffThreshold', 'Value': '1'},
 {'Key': 'FCWOnThreshold', 'Value': '1'},
 {'Key': 'ForwardCollisionWarningMinimumSpeedThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeDurationThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationOffThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationOnThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationThreshold', 'Value': '0'},
 {'Key': 'FleetHardBrakeThreshold', 'Value': '-4'},
 {'Key': 'LaneDepartureDisableWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureDisableEventCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableTimeThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableOnCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureImminentWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureImminentEventCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentTimeThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureActiveOnCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureActiveSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveTimeThreshold', 'Value': '1'},
 {'Key': 'RollStabilityCriticalEventDetection', 'Value': '0'},
 {'Key': 'RollStabilityOffThreshold', 'Value': '1'},
 {'Key': 'RollStabilityOnThreshold', 'Value': '1'},
 {'Key': 'RollStabilityMinimumSpeedThreshold', 'Value': '1'},
 {'Key': 'RollStabilitySources', 'Value': '0'}]</msg>
<msg timestamp="20191217 09:59:33.111" level="INFO">${json_data} = [{'Key': 'AbsHardBrakeEnable', 'Value': '0'}, {'Key': 'ExcessiveOverspeedThreshold', 'Value': '5'}, {'Key': 'ExcessiveOverspeedEnable', 'Value': '0'}, {'Key': 'OverspeedThreshold', 'Value': '5'}, {'Ke...</msg>
<status status="PASS" starttime="20191217 09:59:33.107" endtime="20191217 09:59:33.111"></status>
</kw>
<kw name="Put Organizations Performance Data By ID" library="Organization">
<doc>Calls the Put Method on Organizations performance (settings)
Requires two variables: OrganizationId and List data</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}</arg>
<arg>${json_data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:33.114" level="TRACE">Arguments: [ ${organization_id}='windrun' | ${json_data}=[{'Key': 'AbsHardBrakeEnable', 'Value': '0'},
 {'Key': 'ExcessiveOverspeedThreshold', 'Value': '5'},
 {'Key': 'ExcessiveOverspeedEnable', 'Value': '0'},
 {'Key': 'OverspeedThreshold', 'Value': '5'},
 {'Key': 'OverspeedEnable', 'Value': '0'},
 {'Key': 'CMSXBRThreshold', 'Value': '-1'},
 {'Key': 'ForwardCollisionWarningCriticalEventDetection', 'Value': '0'},
 {'Key': 'HapticWarningXBRThreshold', 'Value': '-1'},
 {'Key': 'FCWOffThreshold', 'Value': '1'},
 {'Key': 'FCWOnThreshold', 'Value': '1'},
 {'Key': 'ForwardCollisionWarningMinimumSpeedThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeDurationThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationOffThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationOnThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationThreshold', 'Value': '0'},
 {'Key': 'FleetHardBrakeThreshold', 'Value': '-4'},
 {'Key': 'LaneDepartureDisableWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureDisableEventCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableTimeThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableOnCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureImminentWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureImminentEventCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentTimeThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureActiveOnCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureActiveSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveTimeThreshold', 'Value': '1'},
 {'Key': 'RollStabilityCriticalEventDetection', 'Value': '0'},
 {'Key': 'RollStabilityOffThreshold', 'Value': '1'},
 {'Key': 'RollStabilityOnThreshold', 'Value': '1'},
 {'Key': 'RollStabilityMinimumSpeedThreshold', 'Value': '1'},
 {'Key': 'RollStabilitySources', 'Value': '0'}] ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}/${organization_id}/performance</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:33.116" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/windrun/performance' ]</msg>
<msg timestamp="20191217 09:59:33.116" level="TRACE">Return: 'OrganizationWebService.svc/organizations/windrun/performance'</msg>
<msg timestamp="20191217 09:59:33.116" level="INFO">${uri} = OrganizationWebService.svc/organizations/windrun/performance</msg>
<status status="PASS" starttime="20191217 09:59:33.115" endtime="20191217 09:59:33.116"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${json_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:33.117" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/windrun/performance' | json=[{'Key': 'AbsHardBrakeEnable', 'Value': '0'},
 {'Key': 'ExcessiveOverspeedThreshold', 'Value': '5'},
 {'Key': 'ExcessiveOverspeedEnable', 'Value': '0'},
 {'Key': 'OverspeedThreshold', 'Value': '5'},
 {'Key': 'OverspeedEnable', 'Value': '0'},
 {'Key': 'CMSXBRThreshold', 'Value': '-1'},
 {'Key': 'ForwardCollisionWarningCriticalEventDetection', 'Value': '0'},
 {'Key': 'HapticWarningXBRThreshold', 'Value': '-1'},
 {'Key': 'FCWOffThreshold', 'Value': '1'},
 {'Key': 'FCWOnThreshold', 'Value': '1'},
 {'Key': 'ForwardCollisionWarningMinimumSpeedThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeDurationThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationOffThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationOnThreshold', 'Value': '1'},
 {'Key': 'FollowingTimeViolationThreshold', 'Value': '0'},
 {'Key': 'FleetHardBrakeThreshold', 'Value': '-4'},
 {'Key': 'LaneDepartureDisableWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureDisableEventCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableTimeThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableOnCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureDisableSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureImminentWarningEnable', 'Value': '0'},
 {'Key': 'LaneDepartureImminentEventCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentTimeThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureImminentSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveOffCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureActiveOnCountThreshold', 'Value': '1'},
 {'Key': 'LaneDepartureActiveSpeedThreshold', 'Value': '0'},
 {'Key': 'LaneDepartureActiveTimeThreshold', 'Value': '1'},
 {'Key': 'RollStabilityCriticalEventDetection', 'Value': '0'},
 {'Key': 'RollStabilityOffThreshold', 'Value': '1'},
 {'Key': 'RollStabilityOnThreshold', 'Value': '1'},
 {'Key': 'RollStabilityMinimumSpeedThreshold', 'Value': '1'},
 {'Key': 'RollStabilitySources', 'Value': '0'}] | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:33.118" level="INFO">PUT Request using : uri=OrganizationWebService.svc/organizations/windrun/performance, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=[{'Key': 'AbsHardBrakeEnable', 'Value': '0'}, {'Key': 'ExcessiveOverspeedThreshold', 'Value': '5'}, {'Key': 'ExcessiveOverspeedEnable', 'Value': '0'}, {'Key': 'OverspeedThreshold', 'Value': '5'}, {'Key': 'OverspeedEnable', 'Value': '0'}, {'Key': 'CMSXBRThreshold', 'Value': '-1'}, {'Key': 'ForwardCollisionWarningCriticalEventDetection', 'Value': '0'}, {'Key': 'HapticWarningXBRThreshold', 'Value': '-1'}, {'Key': 'FCWOffThreshold', 'Value': '1'}, {'Key': 'FCWOnThreshold', 'Value': '1'}, {'Key': 'ForwardCollisionWarningMinimumSpeedThreshold', 'Value': '1'}, {'Key': 'FollowingTimeDurationThreshold', 'Value': '1'}, {'Key': 'FollowingTimeViolationOffThreshold', 'Value': '1'}, {'Key': 'FollowingTimeViolationOnThreshold', 'Value': '1'}, {'Key': 'FollowingTimeViolationThreshold', 'Value': '0'}, {'Key': 'FleetHardBrakeThreshold', 'Value': '-4'}, {'Key': 'LaneDepartureDisableWarningEnable', 'Value': '0'}, {'Key': 'LaneDepartureDisableEventCountThreshold', 'Value': '1'}, {'Key': 'LaneDepartureDisableTimeThreshold', 'Value': '1'}, {'Key': 'LaneDepartureDisableOffCountThreshold', 'Value': '1'}, {'Key': 'LaneDepartureDisableOnCountThreshold', 'Value': '1'}, {'Key': 'LaneDepartureDisableSpeedThreshold', 'Value': '0'}, {'Key': 'LaneDepartureActiveWarningEnable', 'Value': '0'}, {'Key': 'LaneDepartureImminentWarningEnable', 'Value': '0'}, {'Key': 'LaneDepartureImminentEventCountThreshold', 'Value': '1'}, {'Key': 'LaneDepartureImminentTimeThreshold', 'Value': '1'}, {'Key': 'LaneDepartureImminentOffCountThreshold', 'Value': '1'}, {'Key': 'LaneDepartureImminentSpeedThreshold', 'Value': '0'}, {'Key': 'LaneDepartureActiveOffCountThreshold', 'Value': '1'}, {'Key': 'LaneDepartureActiveOnCountThreshold', 'Value': '1'}, {'Key': 'LaneDepartureActiveSpeedThreshold', 'Value': '0'}, {'Key': 'LaneDepartureActiveTimeThreshold', 'Value': '1'}, {'Key': 'RollStabilityCriticalEventDetection', 'Value': '0'}, {'Key': 'RollStabilityOffThreshold', 'Value': '1'}, {'Key': 'RollStabilityOnThreshold', 'Value': '1'}, {'Key': 'RollStabilityMinimumSpeedThreshold', 'Value': '1'}, {'Key': 'RollStabilitySources', 'Value': '0'}]</msg>
<msg timestamp="20191217 09:59:33.877" level="DEBUG">https://d3ws.xataxrs.com:443 "PUT /OrganizationWebService.svc/organizations/windrun/performance HTTP/1.1" 200 8215</msg>
<msg timestamp="20191217 09:59:33.882" level="DEBUG">PUT Response : status=200, reason=OK
[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. AbsHardBrakeEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ExcessiveOverspeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ExcessiveOverspeedEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. OverspeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. OverspeedEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. CMSXBRThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ForwardCollisionWarningCriticalEventDetection","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. HapticWarningXBRThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FCWOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FCWOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ForwardCollisionWarningMinimumSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeDurationThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FleetHardBrakeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableEventCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableOnCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentEventCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveOnCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityCriticalEventDetection","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityMinimumSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilitySources","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}]</msg>
<msg timestamp="20191217 09:59:33.884" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:33.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:33.116" endtime="20191217 09:59:33.885"></status>
</kw>
<msg timestamp="20191217 09:59:33.885" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:33.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:33.113" endtime="20191217 09:59:33.886"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20191217 09:59:33.890" level="TRACE">Arguments: [ b'[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. AbsHardBrakeEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ExcessiveOverspeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ExcessiveOverspeedEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. OverspeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. OverspeedEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. CMSXBRThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ForwardCollisionWarningCriticalEventDetection","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. HapticWarningXBRThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FCWOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FCWOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ForwardCollisionWarningMinimumSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeDurationThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FleetHardBrakeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableEventCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableOnCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentEventCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveOnCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityCriticalEventDetection","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityMinimumSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilitySources","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}]' ]</msg>
<msg timestamp="20191217 09:59:33.892" level="INFO">To JSON using : content=[{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. AbsHardBrakeEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ExcessiveOverspeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ExcessiveOverspeedEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. OverspeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. OverspeedEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. CMSXBRThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ForwardCollisionWarningCriticalEventDetection","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. HapticWarningXBRThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FCWOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FCWOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. ForwardCollisionWarningMinimumSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeDurationThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FollowingTimeViolationThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. FleetHardBrakeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableEventCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableOnCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureDisableSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentWarningEnable","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentEventCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureImminentSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveOffCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveOnCountThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. LaneDepartureActiveTimeThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityCriticalEventDetection","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityOffThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityOnThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilityMinimumSpeedThreshold","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."},{"Caption":"Request succeeded.","Code":"12538021530103185408","Description":"Setting successfully updated. RollStabilitySources","Id":"windrun","ObjectName":"Organization","SID":531,"Title":"Request succeeded."}] </msg>
<msg timestamp="20191217 09:59:33.892" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191217 09:59:33.892" level="TRACE">Return: [{'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. AbsHardBrakeEnable',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. ExcessiveOverspeedThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. ExcessiveOverspeedEnable',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. OverspeedThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. OverspeedEnable',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. CMSXBRThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. ForwardCollisionWarningCriticalEventDetection',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. HapticWarningXBRThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. FCWOffThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. FCWOnThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. ForwardCollisionWarningMinimumSpeedThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. FollowingTimeDurationThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. FollowingTimeViolationOffThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. FollowingTimeViolationOnThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. FollowingTimeViolationThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. FleetHardBrakeThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureDisableWarningEnable',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureDisableEventCountThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureDisableTimeThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureDisableOffCountThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureDisableOnCountThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureDisableSpeedThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureActiveWarningEnable',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureImminentWarningEnable',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureImminentEventCountThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureImminentTimeThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureImminentOffCountThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureImminentSpeedThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureActiveOffCountThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureActiveOnCountThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureActiveSpeedThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. LaneDepartureActiveTimeThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. RollStabilityCriticalEventDetection',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. RollStabilityOffThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. RollStabilityOnThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. RollStabilityMinimumSpeedThreshold',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'},
 {'Caption': 'Request succeeded.',
  'Code': '12538021530103185408',
  'Description': 'Setting successfully updated. RollStabilitySources',
  'Id': 'windrun',
  'ObjectName': 'Organization',
  'SID': 531,
  'Title': 'Request succeeded.'}]</msg>
<msg timestamp="20191217 09:59:33.904" level="INFO">${json_response} = [{'Caption': 'Request succeeded.', 'Code': '12538021530103185408', 'Description': 'Setting successfully updated. AbsHardBrakeEnable', 'Id': 'windrun', 'ObjectName': 'Organization', 'SID': 531, 'Title'...</msg>
<status status="PASS" starttime="20191217 09:59:33.889" endtime="20191217 09:59:33.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:33.906" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:33.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:33.906" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:33.905" endtime="20191217 09:59:33.907"></status>
</kw>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:33.105" endtime="20191217 09:59:33.907" critical="yes"></status>
</test>
<test id="s1-s1-t11" name="Validate AWS XRS Get Organizations Performance (settings) Data By Parameters REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191217 09:59:33.910" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191217 09:59:33.910" level="TRACE">Return: ['2019', '12', '17']</msg>
<msg timestamp="20191217 09:59:33.910" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191217 09:59:33.910" level="INFO">${mm} = 12</msg>
<msg timestamp="20191217 09:59:33.910" level="INFO">${dd} = 17</msg>
<status status="PASS" starttime="20191217 09:59:33.910" endtime="20191217 09:59:33.910"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationId=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191217 09:59:33.911" level="TRACE">Arguments: [ 'OrganizationId=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191217 09:59:33.912" level="TRACE">Return: {'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationId': 'windrun'}</msg>
<msg timestamp="20191217 09:59:33.912" level="INFO">&amp;{params} = { OrganizationId=windrun | IsActive=True | AsOfDateTime=12/17/2019 }</msg>
<status status="PASS" starttime="20191217 09:59:33.911" endtime="20191217 09:59:33.912"></status>
</kw>
<kw name="Verify Get Organizations Performance (settings) Data With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191217 09:59:33.913" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationId': 'windrun'} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<msg timestamp="20191217 09:59:33.913" level="TRACE">Arguments: [ '/' ]</msg>
<msg timestamp="20191217 09:59:33.913" level="TRACE">Return: '/'</msg>
<msg timestamp="20191217 09:59:33.913" level="INFO">${ending_character} = /</msg>
<status status="PASS" starttime="20191217 09:59:33.913" endtime="20191217 09:59:33.913"></status>
</kw>
<kw name="Get Organizations Performance Data With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Organization">
<doc>This Keyword modifies character between the base uri and the parameters
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Organizations Performance Data Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:33.914" level="TRACE">Arguments: [ ${ending_character}='/' | ${params}={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationId': 'windrun'} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_GET_PUT_ORGANIZATIONS_PERFORMANCE}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:33.915" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/performance/' ]</msg>
<msg timestamp="20191217 09:59:33.915" level="TRACE">Return: 'OrganizationWebService.svc/organizations/performance/'</msg>
<msg timestamp="20191217 09:59:33.915" level="INFO">${uri} = OrganizationWebService.svc/organizations/performance/</msg>
<status status="PASS" starttime="20191217 09:59:33.914" endtime="20191217 09:59:33.915"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:33.915" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/performance/' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationId': 'windrun'} ]</msg>
<msg timestamp="20191217 09:59:33.916" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations/performance/, params={'OrganizationId': 'windrun', 'IsActive': 'True', 'AsOfDateTime': '12/17/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:34.477" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations/performance/?OrganizationId=windrun&amp;IsActive=True&amp;AsOfDateTime=12%2F17%2F2019 HTTP/1.1" 200 1389</msg>
<msg timestamp="20191217 09:59:34.478" level="DEBUG">GET Response : status=200, reason=OK
[{"AbsHardBrake":{"EnableEvent":false},"ExcessiveOverspeed":{"EnableEvent":false,"Threshold":5},"Fleet":{"HardBrakeThreshold":-4,"SpeedingGracePeriod":60,"SpeedingThreshold":65},"FollowingTimeViolation":{"EnableEvent":false,"OffThreshold":1,"OnThreshold":1,"SecondsThreshold":37,"TimeThreshold":1},"ForwardCollisionWarning":{"CmsThreshold":-1,"EnableEvent":false,"HapticThreshold":-1,"MinimumSpeedThreshold":1,"OffThreshold":1,"OnThreshold":1},"LaneDepartureWarning":{"Active":{"CountThreshold":1,"EnableEvent":false,"OffCount":1,"OnCount":1,"SpeedThreshold":0,"TimeThreshold":1},"Disable":{"CountThreshold":1,"EnableEvent":false,"OffCount":1,"OnCount":1,"SpeedThreshold":0,"TimeThreshold":1},"Imminent":{"CountThreshold":1,"EnableEvent":false,"OffCount":1,"OnCount":1,"SpeedThreshold":0,"TimeThreshold":1}},"OfficialStopTime":300,"OptimumRpmThreshold":{"High":1750,"Low":1150},"OrganizationId":"windrun","OrganizationName":"wind run","Overspeed":{"Duration":30,"EnableEvent":false,"Threshold":5},"PassiveForwardCollisionWarning":{"EnableEvent":false},"StabilityControl":{"EnableEvent":false,"OffCount":1,"OnCount":1,"Sources":"0","SpeedThreshold":1},"TopSpeed":[{"Key":1,"Value":5},{"Key":2,"Value":35},{"Key":3,"Value":50},{"Key":4,"Value":55},{"Key":5,"Value":60},{"Key":6,"Value":65},{"Key":7,"Value":70},{"Key":8,"Value":75},{"Key":9,"Value":85}],"YardToRoad":{"Speed":0,"Time":120}}]</msg>
<msg timestamp="20191217 09:59:34.479" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:34.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:33.915" endtime="20191217 09:59:34.479"></status>
</kw>
<msg timestamp="20191217 09:59:34.479" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:34.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:33.914" endtime="20191217 09:59:34.480"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:34.481" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:34.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:34.481" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:34.480" endtime="20191217 09:59:34.482"></status>
</kw>
<msg timestamp="20191217 09:59:34.482" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:33.912" endtime="20191217 09:59:34.482"></status>
</kw>
<kw name="Verify Get Organizations Performance (settings) Data Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191217 09:59:34.485" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationId': 'windrun'} ]</msg>
<kw name="Get Organizations Performance Data" library="Organization">
<doc>Call the Get Method on Organizations Performance (settings) data.
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
The date and time are associated with the last modified date and time of the record.
System Limit: 30 days
Status
Filters results to active organizations only.
Valid Values: True False Both
Active (same as True)
Inactive (same as False)
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationId
Limits results to organizations that fall under the specified organization.
ResourceGroupId
Limits results to Organizations in one or more resource groups.
Recurse
No clue what this does.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:34.488" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationId': 'windrun'} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${ENTITY_MANAGEMENT_WEBSERVICE_GET_PUT_ORGANIZATIONS_PERFORMANCE}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:34.489" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/performance' ]</msg>
<msg timestamp="20191217 09:59:34.489" level="TRACE">Return: 'OrganizationWebService.svc/organizations/performance'</msg>
<msg timestamp="20191217 09:59:34.490" level="INFO">${uri} = OrganizationWebService.svc/organizations/performance</msg>
<status status="PASS" starttime="20191217 09:59:34.488" endtime="20191217 09:59:34.490"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:34.491" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/performance' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationId': 'windrun'} ]</msg>
<msg timestamp="20191217 09:59:34.492" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations/performance, params={'OrganizationId': 'windrun', 'IsActive': 'True', 'AsOfDateTime': '12/17/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:34.965" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations/performance?OrganizationId=windrun&amp;IsActive=True&amp;AsOfDateTime=12%2F17%2F2019 HTTP/1.1" 200 1389</msg>
<msg timestamp="20191217 09:59:34.967" level="DEBUG">GET Response : status=200, reason=OK
[{"AbsHardBrake":{"EnableEvent":false},"ExcessiveOverspeed":{"EnableEvent":false,"Threshold":5},"Fleet":{"HardBrakeThreshold":-4,"SpeedingGracePeriod":60,"SpeedingThreshold":65},"FollowingTimeViolation":{"EnableEvent":false,"OffThreshold":1,"OnThreshold":1,"SecondsThreshold":37,"TimeThreshold":1},"ForwardCollisionWarning":{"CmsThreshold":-1,"EnableEvent":false,"HapticThreshold":-1,"MinimumSpeedThreshold":1,"OffThreshold":1,"OnThreshold":1},"LaneDepartureWarning":{"Active":{"CountThreshold":1,"EnableEvent":false,"OffCount":1,"OnCount":1,"SpeedThreshold":0,"TimeThreshold":1},"Disable":{"CountThreshold":1,"EnableEvent":false,"OffCount":1,"OnCount":1,"SpeedThreshold":0,"TimeThreshold":1},"Imminent":{"CountThreshold":1,"EnableEvent":false,"OffCount":1,"OnCount":1,"SpeedThreshold":0,"TimeThreshold":1}},"OfficialStopTime":300,"OptimumRpmThreshold":{"High":1750,"Low":1150},"OrganizationId":"windrun","OrganizationName":"wind run","Overspeed":{"Duration":30,"EnableEvent":false,"Threshold":5},"PassiveForwardCollisionWarning":{"EnableEvent":false},"StabilityControl":{"EnableEvent":false,"OffCount":1,"OnCount":1,"Sources":"0","SpeedThreshold":1},"TopSpeed":[{"Key":1,"Value":5},{"Key":2,"Value":35},{"Key":3,"Value":50},{"Key":4,"Value":55},{"Key":5,"Value":60},{"Key":6,"Value":65},{"Key":7,"Value":70},{"Key":8,"Value":75},{"Key":9,"Value":85}],"YardToRoad":{"Speed":0,"Time":120}}]</msg>
<msg timestamp="20191217 09:59:34.967" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:34.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:34.490" endtime="20191217 09:59:34.968"></status>
</kw>
<msg timestamp="20191217 09:59:34.969" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:34.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:34.487" endtime="20191217 09:59:34.969"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:34.971" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:34.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:34.972" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:34.970" endtime="20191217 09:59:34.973"></status>
</kw>
<msg timestamp="20191217 09:59:34.973" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:34.484" endtime="20191217 09:59:34.973"></status>
</kw>
<doc>Get Organizations with basic parameters</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:33.909" endtime="20191217 09:59:34.976" critical="yes"></status>
</test>
<test id="s1-s1-t12" name="Validate AWS XRS Get Organizations Performance (settings) Data By Parameters REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Organizations Performance (settings) Data Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191217 09:59:34.987" level="TRACE">Arguments: [ ${character_string}='/?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191217 09:59:34.988" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191217 09:59:34.988" level="TRACE">Return: ['2019', '12', '17']</msg>
<msg timestamp="20191217 09:59:34.988" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191217 09:59:34.988" level="INFO">${mm} = 12</msg>
<msg timestamp="20191217 09:59:34.988" level="INFO">${dd} = 17</msg>
<status status="PASS" starttime="20191217 09:59:34.987" endtime="20191217 09:59:34.988"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191217 09:59:34.989" level="TRACE">Arguments: [ 'OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191217 09:59:34.990" level="TRACE">Return: {'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531}</msg>
<msg timestamp="20191217 09:59:34.990" level="INFO">&amp;{params} = { OrganizationSid=531 | IsActive=True | AsOfDateTime=12/17/2019 }</msg>
<status status="PASS" starttime="20191217 09:59:34.989" endtime="20191217 09:59:34.990"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}</arg>
<arg>${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191217 09:59:34.991" level="TRACE">Arguments: [ ${base_uri}='OrganizationWebService.svc' | ${request_type}='/organizations' | ${character_string}='/?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:34.992" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/?' ]</msg>
<msg timestamp="20191217 09:59:34.992" level="TRACE">Return: 'OrganizationWebService.svc/organizations/?'</msg>
<msg timestamp="20191217 09:59:34.992" level="INFO">${uri} = OrganizationWebService.svc/organizations/?</msg>
<status status="PASS" starttime="20191217 09:59:34.992" endtime="20191217 09:59:34.992"></status>
</kw>
<msg timestamp="20191217 09:59:34.993" level="TRACE">Return: 'OrganizationWebService.svc/organizations/?'</msg>
<msg timestamp="20191217 09:59:34.993" level="INFO">${uri_string} = OrganizationWebService.svc/organizations/?</msg>
<status status="PASS" starttime="20191217 09:59:34.990" endtime="20191217 09:59:34.993"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationSid=${params.OrganizationSid}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:34.994" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019' ]</msg>
<msg timestamp="20191217 09:59:34.994" level="TRACE">Return: 'OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019'</msg>
<msg timestamp="20191217 09:59:34.994" level="INFO">${uri} = OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019</msg>
<status status="PASS" starttime="20191217 09:59:34.993" endtime="20191217 09:59:34.994"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:34.995" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:34.995" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:35.432" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations/?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019 HTTP/1.1" 200 606</msg>
<msg timestamp="20191217 09:59:35.436" level="DEBUG">GET Response : status=200, reason=OK
[{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}]</msg>
<msg timestamp="20191217 09:59:35.436" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:35.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:34.994" endtime="20191217 09:59:35.437"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:35.439" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:35.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:35.440" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:35.438" endtime="20191217 09:59:35.441"></status>
</kw>
<msg timestamp="20191217 09:59:35.441" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:34.986" endtime="20191217 09:59:35.441"></status>
</kw>
<kw name="Verify Get Organizations Performance (settings) Data Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191217 09:59:35.444" level="TRACE">Arguments: [ ${character_string}='?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191217 09:59:35.445" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191217 09:59:35.445" level="TRACE">Return: ['2019', '12', '17']</msg>
<msg timestamp="20191217 09:59:35.446" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191217 09:59:35.446" level="INFO">${mm} = 12</msg>
<msg timestamp="20191217 09:59:35.446" level="INFO">${dd} = 17</msg>
<status status="PASS" starttime="20191217 09:59:35.445" endtime="20191217 09:59:35.446"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191217 09:59:35.447" level="TRACE">Arguments: [ 'OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191217 09:59:35.448" level="TRACE">Return: {'AsOfDateTime': '12/17/2019', 'IsActive': 'True', 'OrganizationSid': 531}</msg>
<msg timestamp="20191217 09:59:35.448" level="INFO">&amp;{params} = { OrganizationSid=531 | IsActive=True | AsOfDateTime=12/17/2019 }</msg>
<status status="PASS" starttime="20191217 09:59:35.446" endtime="20191217 09:59:35.448"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}</arg>
<arg>${ENTITY_MANAGEMENT_WEBSERVICE_POST_GET_ORGANIZATIONS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191217 09:59:35.449" level="TRACE">Arguments: [ ${base_uri}='OrganizationWebService.svc' | ${request_type}='/organizations' | ${character_string}='?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:35.450" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations?' ]</msg>
<msg timestamp="20191217 09:59:35.450" level="TRACE">Return: 'OrganizationWebService.svc/organizations?'</msg>
<msg timestamp="20191217 09:59:35.450" level="INFO">${uri} = OrganizationWebService.svc/organizations?</msg>
<status status="PASS" starttime="20191217 09:59:35.449" endtime="20191217 09:59:35.450"></status>
</kw>
<msg timestamp="20191217 09:59:35.451" level="TRACE">Return: 'OrganizationWebService.svc/organizations?'</msg>
<msg timestamp="20191217 09:59:35.451" level="INFO">${uri_string} = OrganizationWebService.svc/organizations?</msg>
<status status="PASS" starttime="20191217 09:59:35.448" endtime="20191217 09:59:35.451"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationSid=${params.OrganizationSid}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191217 09:59:35.452" level="TRACE">Arguments: [ 'OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019' ]</msg>
<msg timestamp="20191217 09:59:35.452" level="TRACE">Return: 'OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019'</msg>
<msg timestamp="20191217 09:59:35.452" level="INFO">${uri} = OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019</msg>
<status status="PASS" starttime="20191217 09:59:35.451" endtime="20191217 09:59:35.452"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191217 09:59:35.453" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191217 09:59:35.453" level="INFO">GET Request using : uri=OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191217 09:59:35.900" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /OrganizationWebService.svc/organizations?OrganizationSid=531&amp;IsActive=True&amp;AsOfDateTime=12/17/2019 HTTP/1.1" 200 606</msg>
<msg timestamp="20191217 09:59:35.902" level="DEBUG">GET Response : status=200, reason=OK
[{"Address1":"","Address2":"","AllowSharedResourceGroup":false,"AllowSubscriptionChange":false,"BillingOrganizationId":null,"BillingOrganizationSid":0,"CarrierName":"Gnome Shipping D3","City":"","Country":"USA","CreateDate":"\/Date(1576627159186-0800)\/","DotNumber":"123456","FleetViewRefresh":0,"Language":"English","ModifiedBy":5412,"ModifiedDate":"\/Date(1576627159028-0800)\/","OrganizationId":"windrun","OrganizationName":"wind run","OrganizationSid":531,"ParentOrganizationId":"46663","ParentOrganizationSid":414,"PostalCode":"","State":"","Status":true,"TimeZone":"CST","UnitOfMeasure":"Standard"}]</msg>
<msg timestamp="20191217 09:59:35.903" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191217 09:59:35.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191217 09:59:35.452" endtime="20191217 09:59:35.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191217 09:59:35.906" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191217 09:59:35.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191217 09:59:35.907" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:35.904" endtime="20191217 09:59:35.908"></status>
</kw>
<msg timestamp="20191217 09:59:35.908" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:35.443" endtime="20191217 09:59:35.908"></status>
</kw>
<doc>Get Organizations with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191217 09:59:34.983" endtime="20191217 09:59:35.910" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<msg timestamp="20191217 09:59:35.915" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191217 09:59:35.916" level="INFO">Delete All Sessions</msg>
<msg timestamp="20191217 09:59:35.916" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191217 09:59:35.915" endtime="20191217 09:59:35.916"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Organization Entity Management Web Services</doc>
<status status="FAIL" starttime="20191217 09:59:24.798" endtime="20191217 09:59:35.916"></status>
</suite>
<status status="FAIL" starttime="20191217 09:59:24.772" endtime="20191217 09:59:35.924"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="1">Critical Tests</stat>
<stat pass="11" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="11" fail="1">awsxrsorganizationrestwebservicevalidation</stat>
</tag>
<suite>
<stat pass="11" fail="1" id="s1" name="AWS XRS WebServicesTests">AWS XRS WebServicesTests</stat>
<stat pass="11" fail="1" id="s1-s1" name="ValidateAWSXRSOrganizationWebService">AWS XRS WebServicesTests.ValidateAWSXRSOrganizationWebService</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
