<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.0 on win32)" generated="20191223 16:45:11.619" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests">
<suite id="s1-s1" name="AWS XRS WebServicesTests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests">
<suite id="s1-s1-s1" name="ValidateAWSXRSTrailerWebService" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\06__ValidateAWSXRSTrailerWebService.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Create AWS XRS Web Services Session</arg>
<arg>AND</arg>
<arg>Test Data Setup For XRS AWS Trailer Web Service Test Suite</arg>
</arguments>
<msg timestamp="20191223 16:45:11.844" level="TRACE">Arguments: [ 'Create AWS XRS Web Services Session' | 'AND' | 'Test Data Setup For XRS AWS Trailer Web Service Test Suite' ]</msg>
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService">
<doc>Create a session with aws xrs web services</doc>
<msg timestamp="20191223 16:45:11.845" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<msg timestamp="20191223 16:45:11.845" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'https://d3ws.xataxrs.com' | verify=True | auth=['GnomeShippingD3|admin', 'xrs123'] ]</msg>
<msg timestamp="20191223 16:45:11.845" level="INFO">Creating Session using : alias=xrs_web_service_session, url=https://d3ws.xataxrs.com, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x000001A4DF8BB8E0&gt;, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg timestamp="20191223 16:45:11.845" level="DEBUG">Creating session: xrs_web_service_session</msg>
<msg timestamp="20191223 16:45:11.845" level="DEBUG">Argument types are:
&lt;class 'bool'&gt;</msg>
<msg timestamp="20191223 16:45:11.846" level="TRACE">Return: &lt;requests.sessions.Session object at 0x000001A4DF8BBA60&gt;</msg>
<status status="PASS" starttime="20191223 16:45:11.845" endtime="20191223 16:45:11.846"></status>
</kw>
<msg timestamp="20191223 16:45:11.846" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:11.845" endtime="20191223 16:45:11.846"></status>
</kw>
<kw name="Test Data Setup For XRS AWS Trailer Web Service Test Suite">
<doc>Keyword for setting up suite variables for AWS Trailer Web Service Tests.</doc>
<msg timestamp="20191223 16:45:11.846" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_TRAILER.StateName}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_TRAILER.Status}</arg>
<arg>TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_DICT}</var>
</assign>
<msg timestamp="20191223 16:45:11.846" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'StateName=${XRS_WEB_SERVICES_TEST_TRAILER.StateName}' | 'Status=${XRS_WEB_SERVICES_TEST_TRAILER.Status}' | 'TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}' ]</msg>
<msg timestamp="20191223 16:45:11.847" level="TRACE">Return: {'OrganizationID': 46663,
 'StateName': 'Minnesota',
 'Status': 'Active',
 'TrailerIdentity': 'WS_Test_Trailer'}</msg>
<msg timestamp="20191223 16:45:11.847" level="INFO">&amp;{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_DICT} = { OrganizationID=46663 | StateName=Minnesota | Status=Active | TrailerIdentity=WS_Test_Trailer }</msg>
<status status="PASS" starttime="20191223 16:45:11.846" endtime="20191223 16:45:11.847"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST}</var>
</assign>
<msg timestamp="20191223 16:45:11.847" level="TRACE">Arguments: [ {'OrganizationID': 46663,
 'StateName': 'Minnesota',
 'Status': 'Active',
 'TrailerIdentity': 'WS_Test_Trailer'} ]</msg>
<msg timestamp="20191223 16:45:11.848" level="TRACE">Return: [{'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer'}]</msg>
<msg timestamp="20191223 16:45:11.848" level="INFO">@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST} = [ {'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer'} ]</msg>
<status status="PASS" starttime="20191223 16:45:11.847" endtime="20191223 16:45:11.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST}</arg>
</arguments>
<msg timestamp="20191223 16:45:11.848" level="TRACE">Arguments: [ '@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST}' ]</msg>
<msg timestamp="20191223 16:45:11.848" level="INFO">@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST} = [ {'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer'} ]</msg>
<msg timestamp="20191223 16:45:11.848" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:11.848" endtime="20191223 16:45:11.848"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_TRAILER.StateName}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_TRAILER.Status}</arg>
<arg>TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_DICT}</var>
</assign>
<msg timestamp="20191223 16:45:11.849" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'StateName=${XRS_WEB_SERVICES_TEST_TRAILER.StateName}' | 'Status=${XRS_WEB_SERVICES_TEST_TRAILER.Status}' | 'TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}' ]</msg>
<msg timestamp="20191223 16:45:11.849" level="TRACE">Return: {'OrganizationID': 46663,
 'StateName': 'Minnesota',
 'Status': 'Active',
 'TrailerIdentity': 'WS_Test_Trailer'}</msg>
<msg timestamp="20191223 16:45:11.849" level="INFO">&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_DICT} = { OrganizationID=46663 | StateName=Minnesota | Status=Active | TrailerIdentity=WS_Test_Trailer }</msg>
<status status="PASS" starttime="20191223 16:45:11.848" endtime="20191223 16:45:11.849"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST}</var>
</assign>
<msg timestamp="20191223 16:45:11.849" level="TRACE">Arguments: [ {'OrganizationID': 46663,
 'StateName': 'Minnesota',
 'Status': 'Active',
 'TrailerIdentity': 'WS_Test_Trailer'} ]</msg>
<msg timestamp="20191223 16:45:11.850" level="TRACE">Return: [{'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer'}]</msg>
<msg timestamp="20191223 16:45:11.850" level="INFO">@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST} = [ {'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer'} ]</msg>
<status status="PASS" starttime="20191223 16:45:11.849" endtime="20191223 16:45:11.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST}</arg>
</arguments>
<msg timestamp="20191223 16:45:11.850" level="TRACE">Arguments: [ '@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST}' ]</msg>
<msg timestamp="20191223 16:45:11.850" level="INFO">@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST} = [ {'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer'} ]</msg>
<msg timestamp="20191223 16:45:11.850" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:11.850" endtime="20191223 16:45:11.850"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_TRAILER_V2.StateName}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Status}</arg>
<arg>TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
<arg>Country=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Country}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_V2_DICT}</var>
</assign>
<msg timestamp="20191223 16:45:11.851" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'StateName=${XRS_WEB_SERVICES_TEST_TRAILER_V2.StateName}' | 'Status=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Status}' | 'TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}' | 'Country=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Country}' ]</msg>
<msg timestamp="20191223 16:45:11.851" level="TRACE">Return: {'Country': 'USA',
 'OrganizationID': 46663,
 'StateName': 'Minnesota',
 'Status': 'Active',
 'TrailerIdentity': 'WS_Test_Trailer_V2'}</msg>
<msg timestamp="20191223 16:45:11.851" level="INFO">&amp;{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_V2_DICT} = { OrganizationID=46663 | StateName=Minnesota | Status=Active | TrailerIdentity=WS_Test_Trailer_V2 | Country=USA }</msg>
<status status="PASS" starttime="20191223 16:45:11.850" endtime="20191223 16:45:11.851"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_V2_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2}</var>
</assign>
<msg timestamp="20191223 16:45:11.852" level="TRACE">Arguments: [ {'Country': 'USA',
 'OrganizationID': 46663,
 'StateName': 'Minnesota',
 'Status': 'Active',
 'TrailerIdentity': 'WS_Test_Trailer_V2'} ]</msg>
<msg timestamp="20191223 16:45:11.852" level="TRACE">Return: [{'Country': 'USA',
  'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer_V2'}]</msg>
<msg timestamp="20191223 16:45:11.852" level="INFO">@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2} = [ {'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer_V2', 'Country': 'USA'} ]</msg>
<status status="PASS" starttime="20191223 16:45:11.852" endtime="20191223 16:45:11.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2}</arg>
</arguments>
<msg timestamp="20191223 16:45:11.852" level="TRACE">Arguments: [ '@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2}' ]</msg>
<msg timestamp="20191223 16:45:11.852" level="INFO">@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2} = [ {'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer_V2', 'Country': 'USA'} ]</msg>
<msg timestamp="20191223 16:45:11.852" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:11.852" endtime="20191223 16:45:11.852"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_TRAILER_V2.StateName}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Status}</arg>
<arg>TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
<arg>Country=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Country}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_V2_DICT}</var>
</assign>
<msg timestamp="20191223 16:45:11.853" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'StateName=${XRS_WEB_SERVICES_TEST_TRAILER_V2.StateName}' | 'Status=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Status}' | 'TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}' | 'Country=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Country}' ]</msg>
<msg timestamp="20191223 16:45:11.853" level="TRACE">Return: {'Country': 'USA',
 'OrganizationID': 46663,
 'StateName': 'Minnesota',
 'Status': 'Active',
 'TrailerIdentity': 'WS_Test_Trailer_V2'}</msg>
<msg timestamp="20191223 16:45:11.853" level="INFO">&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_V2_DICT} = { OrganizationID=46663 | StateName=Minnesota | Status=Active | TrailerIdentity=WS_Test_Trailer_V2 | Country=USA }</msg>
<status status="PASS" starttime="20191223 16:45:11.852" endtime="20191223 16:45:11.853"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_V2_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2}</var>
</assign>
<msg timestamp="20191223 16:45:11.854" level="TRACE">Arguments: [ {'Country': 'USA',
 'OrganizationID': 46663,
 'StateName': 'Minnesota',
 'Status': 'Active',
 'TrailerIdentity': 'WS_Test_Trailer_V2'} ]</msg>
<msg timestamp="20191223 16:45:11.854" level="TRACE">Return: [{'Country': 'USA',
  'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer_V2'}]</msg>
<msg timestamp="20191223 16:45:11.854" level="INFO">@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2} = [ {'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer_V2', 'Country': 'USA'} ]</msg>
<status status="PASS" starttime="20191223 16:45:11.853" endtime="20191223 16:45:11.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2}</arg>
</arguments>
<msg timestamp="20191223 16:45:11.855" level="TRACE">Arguments: [ '@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2}' ]</msg>
<msg timestamp="20191223 16:45:11.855" level="INFO">@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2} = [ {'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer_V2', 'Country': 'USA'} ]</msg>
<msg timestamp="20191223 16:45:11.855" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:11.855" endtime="20191223 16:45:11.855"></status>
</kw>
<msg timestamp="20191223 16:45:11.855" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:11.846" endtime="20191223 16:45:11.855"></status>
</kw>
<msg timestamp="20191223 16:45:11.855" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:11.844" endtime="20191223 16:45:11.855"></status>
</kw>
<test id="s1-s1-s1-t1" name="Validate AWS XRS Get Trailer REST Web Services Returns 400 Error">
<kw name="Get Trailer By ID" library="Trailer">
<doc>Get attributes for a specific trailer by specifying a TrailerSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:11.856" level="TRACE">Arguments: [ ${trailer_id}='WS_Test_Trailer' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:11.857" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailer/WS_Test_Trailer' ]</msg>
<msg timestamp="20191223 16:45:11.857" level="TRACE">Return: 'TrailerWebService.svc/trailer/WS_Test_Trailer'</msg>
<msg timestamp="20191223 16:45:11.857" level="INFO">${uri} = TrailerWebService.svc/trailer/WS_Test_Trailer</msg>
<status status="PASS" starttime="20191223 16:45:11.856" endtime="20191223 16:45:11.857"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:11.857" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailer/WS_Test_Trailer' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:11.857" level="INFO">GET Request using : uri=TrailerWebService.svc/trailer/WS_Test_Trailer, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:11.859" level="DEBUG">Starting new HTTPS connection (1): d3ws.xataxrs.com:443</msg>
<msg timestamp="20191223 16:45:12.799" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailer/WS_Test_Trailer HTTP/1.1" 400 102</msg>
<msg timestamp="20191223 16:45:12.800" level="DEBUG">GET Response : status=400, reason=Bad Request
{"ErrorMessage":"Trailer not exist.","EventCode":3461297934639824896,"Parameters":["WS_Test_Trailer"]}</msg>
<msg timestamp="20191223 16:45:12.800" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20191223 16:45:12.800" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:11.857" endtime="20191223 16:45:12.800"></status>
</kw>
<msg timestamp="20191223 16:45:12.800" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20191223 16:45:12.800" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:11.856" endtime="20191223 16:45:12.801"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20191223 16:45:12.801" level="TRACE">Arguments: [ 400 | '400' ]</msg>
<msg timestamp="20191223 16:45:12.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:12.802" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:12.801" endtime="20191223 16:45:12.802"></status>
</kw>
<doc>Verifies that a driver with a specific number does not exist</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:11.855" endtime="20191223 16:45:12.802" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Validate AWS XRS Post Trailer REST Web Services Returns Code 201">
<kw name="Post Trailers" library="Trailer">
<doc>Calls the Post Method for Trailers.
Accepts a list of json objects
Json field definitions:
CompanyName
The user defined name of the company.
CreateDate
The date and time the trailer object was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
ModifiedBy
The ID of the last person to modify the driver record.
ModifiedDate
Date driver record was last modified.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
OrganizationID
The user-defined ID of the Organization in Omnitracs XRS in which the trailer is located.
OrganizationName
The user-defined name of the organization in which the trailer is located.
StateName
The state, province or territory for the trailer.
Status
The current status of the trailer in the Omnitracs XRS. The value of this field must be Active or Inactive.
TrailerIdentity
The user-defined ID of the trailer.
TrailerResourceGroupIDs
Indicates the set of ResourceGroupIDs to which the trailers should belong.
TrailerType
The type of trailer.
VIN
The registered Vehicle Identification Number (VIN) of the trailer.
NOTE: This non-required field is reserved for future use.
Web Service calls made to retrieve the value of this field will return a null value at this time.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:12.805" level="TRACE">Arguments: [ @{list_data}=[{'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer'}] ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:12.805" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers' ]</msg>
<msg timestamp="20191223 16:45:12.806" level="TRACE">Return: 'TrailerWebService.svc/trailers'</msg>
<msg timestamp="20191223 16:45:12.806" level="INFO">${uri} = TrailerWebService.svc/trailers</msg>
<status status="PASS" starttime="20191223 16:45:12.805" endtime="20191223 16:45:12.806"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:12.806" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers' | json=[{'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer'}] | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:12.807" level="INFO">POST Request using : uri=TrailerWebService.svc/trailers, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=[{'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer'}]</msg>
<msg timestamp="20191223 16:45:13.319" level="DEBUG">https://d3ws.xataxrs.com:443 "POST /TrailerWebService.svc/trailers HTTP/1.1" 200 161</msg>
<msg timestamp="20191223 16:45:13.320" level="DEBUG">POST Response : status=200, reason=OK
[{"Caption":"Created","Code":"201","Description":"Trailer added successfully.","Id":"WS_Test_Trailer","ObjectName":"Trailer","SID":5689,"Title":"TrailerAdded."}]</msg>
<msg timestamp="20191223 16:45:13.320" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:13.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:12.806" endtime="20191223 16:45:13.320"></status>
</kw>
<msg timestamp="20191223 16:45:13.320" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:13.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:12.805" endtime="20191223 16:45:13.320"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20191223 16:45:13.321" level="TRACE">Arguments: [ b'[{"Caption":"Created","Code":"201","Description":"Trailer added successfully.","Id":"WS_Test_Trailer","ObjectName":"Trailer","SID":5689,"Title":"TrailerAdded."}]' ]</msg>
<msg timestamp="20191223 16:45:13.321" level="INFO">To JSON using : content=[{"Caption":"Created","Code":"201","Description":"Trailer added successfully.","Id":"WS_Test_Trailer","ObjectName":"Trailer","SID":5689,"Title":"TrailerAdded."}] </msg>
<msg timestamp="20191223 16:45:13.322" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191223 16:45:13.322" level="TRACE">Return: [{'Caption': 'Created',
  'Code': '201',
  'Description': 'Trailer added successfully.',
  'Id': 'WS_Test_Trailer',
  'ObjectName': 'Trailer',
  'SID': 5689,
  'Title': 'TrailerAdded.'}]</msg>
<msg timestamp="20191223 16:45:13.322" level="INFO">${json_response} = [{'Caption': 'Created', 'Code': '201', 'Description': 'Trailer added successfully.', 'Id': 'WS_Test_Trailer', 'ObjectName': 'Trailer', 'SID': 5689, 'Title': 'TrailerAdded.'}]</msg>
<status status="PASS" starttime="20191223 16:45:13.321" endtime="20191223 16:45:13.322"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = {'Caption': 'Created', 'Code': '201', 'Description': 'Trailer added successfully.', 'Id': 'WS_Test_Trailer', 'ObjectName': 'Trailer', 'SID': 5689, 'Title': 'TrailerAdded.'}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Code]</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191223 16:45:13.323" level="TRACE">Arguments: [ '201' | '201' ]</msg>
<msg timestamp="20191223 16:45:13.323" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:13.323" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:13.323" endtime="20191223 16:45:13.323"></status>
</kw>
<status status="PASS" starttime="20191223 16:45:13.323" endtime="20191223 16:45:13.323"></status>
</kw>
<status status="PASS" starttime="20191223 16:45:13.322" endtime="20191223 16:45:13.323"></status>
</kw>
<doc>Posts a driver and expects a Code value of 201</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:12.803" endtime="20191223 16:45:13.324" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Validate AWS XRS Get Trailer REST Web Services Returns 200 OK">
<kw name="Get Trailer By ID" library="Trailer">
<doc>Get attributes for a specific trailer by specifying a TrailerSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:13.327" level="TRACE">Arguments: [ ${trailer_id}='WS_Test_Trailer' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:13.327" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailer/WS_Test_Trailer' ]</msg>
<msg timestamp="20191223 16:45:13.328" level="TRACE">Return: 'TrailerWebService.svc/trailer/WS_Test_Trailer'</msg>
<msg timestamp="20191223 16:45:13.328" level="INFO">${uri} = TrailerWebService.svc/trailer/WS_Test_Trailer</msg>
<status status="PASS" starttime="20191223 16:45:13.327" endtime="20191223 16:45:13.328"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:13.328" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailer/WS_Test_Trailer' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:13.329" level="INFO">GET Request using : uri=TrailerWebService.svc/trailer/WS_Test_Trailer, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:13.792" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailer/WS_Test_Trailer HTTP/1.1" 200 492</msg>
<msg timestamp="20191223 16:45:13.793" level="DEBUG">GET Response : status=200, reason=OK
{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169912544-0800)\/","ModifiedBy":0,"ModifiedDate":"\/Date(-62135568000000-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null}</msg>
<msg timestamp="20191223 16:45:13.793" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:13.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:13.328" endtime="20191223 16:45:13.793"></status>
</kw>
<msg timestamp="20191223 16:45:13.793" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:13.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:13.326" endtime="20191223 16:45:13.794"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:13.795" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:13.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:13.795" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:13.795" endtime="20191223 16:45:13.795"></status>
</kw>
<doc>Verifies that a posted driver now exists</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:13.325" endtime="20191223 16:45:13.797" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Validate AWS XRS Put Trailer REST Web Services Modifies Driver Successfully">
<kw name="Put Trailers" library="Trailer">
<doc>Calls the Post Method for Trailers.
Accepts a list of json objects
See Json field definitions in the "Post Trailers" Keyword</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:13.800" level="TRACE">Arguments: [ @{list_data}=[{'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer'}] ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:13.801" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers' ]</msg>
<msg timestamp="20191223 16:45:13.802" level="TRACE">Return: 'TrailerWebService.svc/trailers'</msg>
<msg timestamp="20191223 16:45:13.802" level="INFO">${uri} = TrailerWebService.svc/trailers</msg>
<status status="PASS" starttime="20191223 16:45:13.801" endtime="20191223 16:45:13.802"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:13.803" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers' | json=[{'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer'}] | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:13.804" level="INFO">PUT Request using : uri=TrailerWebService.svc/trailers, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=[{'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer'}]</msg>
<msg timestamp="20191223 16:45:14.486" level="DEBUG">https://d3ws.xataxrs.com:443 "PUT /TrailerWebService.svc/trailers HTTP/1.1" 200 202</msg>
<msg timestamp="20191223 16:45:14.487" level="DEBUG">PUT Response : status=200, reason=OK
[{"Caption":"Trailer edited successfully.","Code":"200","Description":"Trailer edited successfully.","Id":"WS_Test_Trailer","ObjectName":"Trailer edited successfully.","SID":0,"Title":"TrailerEdited."}]</msg>
<msg timestamp="20191223 16:45:14.487" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:14.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:13.803" endtime="20191223 16:45:14.487"></status>
</kw>
<msg timestamp="20191223 16:45:14.487" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:14.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:13.800" endtime="20191223 16:45:14.488"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20191223 16:45:14.489" level="TRACE">Arguments: [ b'[{"Caption":"Trailer edited successfully.","Code":"200","Description":"Trailer edited successfully.","Id":"WS_Test_Trailer","ObjectName":"Trailer edited successfully.","SID":0,"Title":"TrailerEdited."}]' ]</msg>
<msg timestamp="20191223 16:45:14.489" level="INFO">To JSON using : content=[{"Caption":"Trailer edited successfully.","Code":"200","Description":"Trailer edited successfully.","Id":"WS_Test_Trailer","ObjectName":"Trailer edited successfully.","SID":0,"Title":"TrailerEdited."}] </msg>
<msg timestamp="20191223 16:45:14.489" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191223 16:45:14.489" level="TRACE">Return: [{'Caption': 'Trailer edited successfully.',
  'Code': '200',
  'Description': 'Trailer edited successfully.',
  'Id': 'WS_Test_Trailer',
  'ObjectName': 'Trailer edited successfully.',
  'SID': 0,
  'Title': 'TrailerEdited.'}]</msg>
<msg timestamp="20191223 16:45:14.490" level="INFO">${json_response} = [{'Caption': 'Trailer edited successfully.', 'Code': '200', 'Description': 'Trailer edited successfully.', 'Id': 'WS_Test_Trailer', 'ObjectName': 'Trailer edited successfully.', 'SID': 0, 'Title': 'Tr...</msg>
<status status="PASS" starttime="20191223 16:45:14.489" endtime="20191223 16:45:14.490"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = {'Caption': 'Trailer edited successfully.', 'Code': '200', 'Description': 'Trailer edited successfully.', 'Id': 'WS_Test_Trailer', 'ObjectName': 'Trailer edited successfully.', 'SID': 0, 'Title': 'Tra..." type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Trailer edited successfully.</arg>
</arguments>
<msg timestamp="20191223 16:45:14.492" level="TRACE">Arguments: [ 'Trailer edited successfully.' | 'Trailer edited successfully.' ]</msg>
<msg timestamp="20191223 16:45:14.492" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:14.492" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:14.490" endtime="20191223 16:45:14.492"></status>
</kw>
<status status="PASS" starttime="20191223 16:45:14.490" endtime="20191223 16:45:14.492"></status>
</kw>
<status status="PASS" starttime="20191223 16:45:14.490" endtime="20191223 16:45:14.492"></status>
</kw>
<doc>Posts a driver and expects a Code value of 201</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:13.799" endtime="20191223 16:45:14.493" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Validate AWS XRS Get Trailers REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191223 16:45:14.498" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191223 16:45:14.498" level="TRACE">Return: ['2019', '12', '23']</msg>
<msg timestamp="20191223 16:45:14.498" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191223 16:45:14.498" level="INFO">${mm} = 12</msg>
<msg timestamp="20191223 16:45:14.499" level="INFO">${dd} = 23</msg>
<status status="PASS" starttime="20191223 16:45:14.498" endtime="20191223 16:45:14.499"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191223 16:45:14.500" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191223 16:45:14.501" level="TRACE">Return: {'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191223 16:45:14.501" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/23/2019 }</msg>
<status status="PASS" starttime="20191223 16:45:14.500" endtime="20191223 16:45:14.501"></status>
</kw>
<kw name="Verify Get Trailers With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191223 16:45:14.502" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<msg timestamp="20191223 16:45:14.503" level="TRACE">Arguments: [ '/' ]</msg>
<msg timestamp="20191223 16:45:14.503" level="TRACE">Return: '/'</msg>
<msg timestamp="20191223 16:45:14.503" level="INFO">${ending_character} = /</msg>
<status status="PASS" starttime="20191223 16:45:14.503" endtime="20191223 16:45:14.504"></status>
</kw>
<kw name="Get Trailers With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Trailer">
<doc>This Keyword modifies character between the base uri and the parameters
This will get trailers that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Trailers Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:14.505" level="TRACE">Arguments: [ ${ending_character}='/' | ${params}={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:14.506" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers/' ]</msg>
<msg timestamp="20191223 16:45:14.506" level="TRACE">Return: 'TrailerWebService.svc/trailers/'</msg>
<msg timestamp="20191223 16:45:14.506" level="INFO">${uri} = TrailerWebService.svc/trailers/</msg>
<status status="PASS" starttime="20191223 16:45:14.505" endtime="20191223 16:45:14.506"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:14.507" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers/' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<msg timestamp="20191223 16:45:14.507" level="INFO">GET Request using : uri=TrailerWebService.svc/trailers/, params={'OrganizationID': 46663, 'IsActive': 'True', 'AsOfDateTime': '12/23/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:14.962" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12%2F23%2F2019 HTTP/1.1" 200 495</msg>
<msg timestamp="20191223 16:45:14.963" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169912544-0800)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1577169913731-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null}]</msg>
<msg timestamp="20191223 16:45:14.963" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:14.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:14.506" endtime="20191223 16:45:14.963"></status>
</kw>
<msg timestamp="20191223 16:45:14.964" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:14.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:14.504" endtime="20191223 16:45:14.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:14.964" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:14.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:14.965" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:14.964" endtime="20191223 16:45:14.965"></status>
</kw>
<msg timestamp="20191223 16:45:14.965" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:14.502" endtime="20191223 16:45:14.965"></status>
</kw>
<kw name="Verify Get Trailers Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191223 16:45:14.967" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Get Trailers" library="Trailer">
<doc>Call the Get Method on trailers.
This will get trailers that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
IsActive
Filters results to active trailers only.
True, False, Both
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationID
Limits results to trailers in one or more organizations.
Maximum of 20 characters.
Recurse
When True, limits results to all trailer objects in all OrganizationIDs and ResourceGroupIDs in OrganizationID &amp; ResourceGroupID.
ResourceGroupID
Limits results to trailers in one or more resource groups.
ResourceGroupSID
Limits results to Organizations in one or more resource groups.
Maximum of 50 characters.
Status
Limits results to trailers with the selected status. Valid values include:
IsActive - Limits results to all active trailer objects in OrganizationID &amp; ResourceGroupID.
IsInActive - Limits results to all inactive trailer objects within all OrganizationID and ResourceGroupID.
TrailerID
Limits the results to trailer objects with TrailerID in OrganizationID and ResourceGroupID.
Maximum of 20 characters.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:14.969" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:14.970" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers' ]</msg>
<msg timestamp="20191223 16:45:14.970" level="TRACE">Return: 'TrailerWebService.svc/trailers'</msg>
<msg timestamp="20191223 16:45:14.970" level="INFO">${uri} = TrailerWebService.svc/trailers</msg>
<status status="PASS" starttime="20191223 16:45:14.969" endtime="20191223 16:45:14.970"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:14.971" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<msg timestamp="20191223 16:45:14.973" level="INFO">GET Request using : uri=TrailerWebService.svc/trailers, params={'OrganizationID': 46663, 'IsActive': 'True', 'AsOfDateTime': '12/23/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:15.485" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12%2F23%2F2019 HTTP/1.1" 200 495</msg>
<msg timestamp="20191223 16:45:15.486" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169912544-0800)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1577169913731-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null}]</msg>
<msg timestamp="20191223 16:45:15.486" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:15.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:14.970" endtime="20191223 16:45:15.487"></status>
</kw>
<msg timestamp="20191223 16:45:15.487" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:15.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:14.968" endtime="20191223 16:45:15.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:15.489" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:15.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:15.490" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:15.488" endtime="20191223 16:45:15.490"></status>
</kw>
<msg timestamp="20191223 16:45:15.490" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:14.966" endtime="20191223 16:45:15.490"></status>
</kw>
<doc>Get drivers with basic parameters</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:14.496" endtime="20191223 16:45:15.492" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Validate AWS XRS Get Trailers REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Trailers Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191223 16:45:15.500" level="TRACE">Arguments: [ ${character_string}='/?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191223 16:45:15.501" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191223 16:45:15.501" level="TRACE">Return: ['2019', '12', '23']</msg>
<msg timestamp="20191223 16:45:15.502" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191223 16:45:15.502" level="INFO">${mm} = 12</msg>
<msg timestamp="20191223 16:45:15.502" level="INFO">${dd} = 23</msg>
<status status="PASS" starttime="20191223 16:45:15.501" endtime="20191223 16:45:15.502"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191223 16:45:15.503" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191223 16:45:15.504" level="TRACE">Return: {'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191223 16:45:15.504" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/23/2019 }</msg>
<status status="PASS" starttime="20191223 16:45:15.502" endtime="20191223 16:45:15.504"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191223 16:45:15.505" level="TRACE">Arguments: [ ${base_uri}='TrailerWebService.svc' | ${request_type}='/trailers' | ${character_string}='/?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:15.506" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers/?' ]</msg>
<msg timestamp="20191223 16:45:15.506" level="TRACE">Return: 'TrailerWebService.svc/trailers/?'</msg>
<msg timestamp="20191223 16:45:15.506" level="INFO">${uri} = TrailerWebService.svc/trailers/?</msg>
<status status="PASS" starttime="20191223 16:45:15.505" endtime="20191223 16:45:15.506"></status>
</kw>
<msg timestamp="20191223 16:45:15.507" level="TRACE">Return: 'TrailerWebService.svc/trailers/?'</msg>
<msg timestamp="20191223 16:45:15.507" level="INFO">${uri_string} = TrailerWebService.svc/trailers/?</msg>
<status status="PASS" starttime="20191223 16:45:15.504" endtime="20191223 16:45:15.507"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:15.508" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019' ]</msg>
<msg timestamp="20191223 16:45:15.509" level="TRACE">Return: 'TrailerWebService.svc/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019'</msg>
<msg timestamp="20191223 16:45:15.509" level="INFO">${uri} = TrailerWebService.svc/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019</msg>
<status status="PASS" starttime="20191223 16:45:15.507" endtime="20191223 16:45:15.509"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:15.510" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:15.510" level="INFO">GET Request using : uri=TrailerWebService.svc/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:15.998" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019 HTTP/1.1" 200 495</msg>
<msg timestamp="20191223 16:45:15.999" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169912544-0800)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1577169913731-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null}]</msg>
<msg timestamp="20191223 16:45:15.999" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:15.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:15.509" endtime="20191223 16:45:15.999"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:16.000" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:16.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:16.000" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:16.000" endtime="20191223 16:45:16.001"></status>
</kw>
<msg timestamp="20191223 16:45:16.001" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:15.499" endtime="20191223 16:45:16.001"></status>
</kw>
<kw name="Verify Get Trailers Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191223 16:45:16.002" level="TRACE">Arguments: [ ${character_string}='?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191223 16:45:16.003" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191223 16:45:16.003" level="TRACE">Return: ['2019', '12', '23']</msg>
<msg timestamp="20191223 16:45:16.003" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191223 16:45:16.003" level="INFO">${mm} = 12</msg>
<msg timestamp="20191223 16:45:16.003" level="INFO">${dd} = 23</msg>
<status status="PASS" starttime="20191223 16:45:16.002" endtime="20191223 16:45:16.003"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191223 16:45:16.004" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191223 16:45:16.004" level="TRACE">Return: {'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191223 16:45:16.005" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/23/2019 }</msg>
<status status="PASS" starttime="20191223 16:45:16.003" endtime="20191223 16:45:16.005"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191223 16:45:16.006" level="TRACE">Arguments: [ ${base_uri}='TrailerWebService.svc' | ${request_type}='/trailers' | ${character_string}='?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:16.006" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers?' ]</msg>
<msg timestamp="20191223 16:45:16.007" level="TRACE">Return: 'TrailerWebService.svc/trailers?'</msg>
<msg timestamp="20191223 16:45:16.007" level="INFO">${uri} = TrailerWebService.svc/trailers?</msg>
<status status="PASS" starttime="20191223 16:45:16.006" endtime="20191223 16:45:16.007"></status>
</kw>
<msg timestamp="20191223 16:45:16.007" level="TRACE">Return: 'TrailerWebService.svc/trailers?'</msg>
<msg timestamp="20191223 16:45:16.007" level="INFO">${uri_string} = TrailerWebService.svc/trailers?</msg>
<status status="PASS" starttime="20191223 16:45:16.005" endtime="20191223 16:45:16.008"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:16.009" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019' ]</msg>
<msg timestamp="20191223 16:45:16.010" level="TRACE">Return: 'TrailerWebService.svc/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019'</msg>
<msg timestamp="20191223 16:45:16.010" level="INFO">${uri} = TrailerWebService.svc/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019</msg>
<status status="PASS" starttime="20191223 16:45:16.008" endtime="20191223 16:45:16.010"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:16.011" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:16.011" level="INFO">GET Request using : uri=TrailerWebService.svc/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:16.506" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019 HTTP/1.1" 200 495</msg>
<msg timestamp="20191223 16:45:16.507" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169912544-0800)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1577169913731-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null}]</msg>
<msg timestamp="20191223 16:45:16.507" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:16.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:16.010" endtime="20191223 16:45:16.508"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:16.508" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:16.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:16.509" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:16.508" endtime="20191223 16:45:16.509"></status>
</kw>
<msg timestamp="20191223 16:45:16.510" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:16.002" endtime="20191223 16:45:16.510"></status>
</kw>
<doc>Get drivers with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:15.497" endtime="20191223 16:45:16.511" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Validate AWS XRS Delete Trailer REST Web Services Returns 200 OK">
<kw name="Delete Trailer By ID" library="Trailer">
<doc>Delete a single trailer record in Omnitracs XRS by specifying the TrailerSID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:16.517" level="TRACE">Arguments: [ ${trailer_id}='WS_Test_Trailer' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:16.518" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailer/WS_Test_Trailer' ]</msg>
<msg timestamp="20191223 16:45:16.518" level="TRACE">Return: 'TrailerWebService.svc/trailer/WS_Test_Trailer'</msg>
<msg timestamp="20191223 16:45:16.519" level="INFO">${uri} = TrailerWebService.svc/trailer/WS_Test_Trailer</msg>
<status status="PASS" starttime="20191223 16:45:16.518" endtime="20191223 16:45:16.519"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:16.519" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailer/WS_Test_Trailer' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:16.520" level="INFO">DELETE Request using : uri=TrailerWebService.svc/trailer/WS_Test_Trailer, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:17.040" level="DEBUG">https://d3ws.xataxrs.com:443 "DELETE /TrailerWebService.svc/trailer/WS_Test_Trailer HTTP/1.1" 200 161</msg>
<msg timestamp="20191223 16:45:17.041" level="DEBUG">DELETE Response : status=200, reason=OK
{"Caption":"Deleted.","Code":"200","Description":"Trailer Deleted Successfully.","Id":"WS_Test_Trailer","ObjectName":"Trailer","SID":0,"Title":"TrailerDeleted."}</msg>
<msg timestamp="20191223 16:45:17.042" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:17.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:16.519" endtime="20191223 16:45:17.042"></status>
</kw>
<msg timestamp="20191223 16:45:17.042" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:17.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:16.516" endtime="20191223 16:45:17.043"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:17.045" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:17.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:17.046" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:17.045" endtime="20191223 16:45:17.046"></status>
</kw>
<doc>Verifies that created driver is deleted</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:16.515" endtime="20191223 16:45:17.047" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Validate AWS XRS Get Trailers REST Web Services For All Trailers Returns 200 OK">
<kw name="Get All Trailers" library="Trailer">
<doc>Get attributes for all trailers.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:17.053" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:17.054" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers' ]</msg>
<msg timestamp="20191223 16:45:17.054" level="TRACE">Return: 'TrailerWebService.svc/trailers'</msg>
<msg timestamp="20191223 16:45:17.055" level="INFO">${uri} = TrailerWebService.svc/trailers</msg>
<status status="PASS" starttime="20191223 16:45:17.054" endtime="20191223 16:45:17.055"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:17.055" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:17.056" level="INFO">GET Request using : uri=TrailerWebService.svc/trailers, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:17.505" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailers HTTP/1.1" 200 948</msg>
<msg timestamp="20191223 16:45:17.506" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1562792228253-0700)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1562792228202-0700)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"Default_Trailer","TrailerResourceGroupIDs":null,"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null},{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1537837317411-0700)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1537837317396-0700)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"Troller1","TrailerResourceGroupIDs":null,"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null}]</msg>
<msg timestamp="20191223 16:45:17.507" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:17.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:17.055" endtime="20191223 16:45:17.507"></status>
</kw>
<msg timestamp="20191223 16:45:17.507" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:17.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:17.053" endtime="20191223 16:45:17.507"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:17.509" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:17.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:17.510" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:17.509" endtime="20191223 16:45:17.510"></status>
</kw>
<doc>Gets all the trailers</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:17.051" endtime="20191223 16:45:17.511" critical="yes"></status>
</test>
<test id="s1-s1-s1-t9" name="Validate AWS XRS Delete Trailers REST Web Services Returns Error Message">
<kw name="Delete Trailer By ID" library="Trailer">
<doc>Delete a single trailer record in Omnitracs XRS by specifying the TrailerSID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:17.516" level="TRACE">Arguments: [ ${trailer_id}='WS_Test_Trailer' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:17.517" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailer/WS_Test_Trailer' ]</msg>
<msg timestamp="20191223 16:45:17.518" level="TRACE">Return: 'TrailerWebService.svc/trailer/WS_Test_Trailer'</msg>
<msg timestamp="20191223 16:45:17.518" level="INFO">${uri} = TrailerWebService.svc/trailer/WS_Test_Trailer</msg>
<status status="PASS" starttime="20191223 16:45:17.517" endtime="20191223 16:45:17.518"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:17.519" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailer/WS_Test_Trailer' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:17.519" level="INFO">DELETE Request using : uri=TrailerWebService.svc/trailer/WS_Test_Trailer, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:17.933" level="DEBUG">https://d3ws.xataxrs.com:443 "DELETE /TrailerWebService.svc/trailer/WS_Test_Trailer HTTP/1.1" 200 150</msg>
<msg timestamp="20191223 16:45:17.934" level="DEBUG">DELETE Response : status=200, reason=OK
{"Caption":"Error","Code":"400","Description":"Trailer not exist.","Id":"WS_Test_Trailer","ObjectName":"Trailer","SID":0,"Title":"Trailer not exist."}</msg>
<msg timestamp="20191223 16:45:17.934" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:17.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:17.518" endtime="20191223 16:45:17.935"></status>
</kw>
<msg timestamp="20191223 16:45:17.935" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:17.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:17.516" endtime="20191223 16:45:17.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Trailer not exist.</arg>
</arguments>
<assign>
<var>${expected_error_message}</var>
</assign>
<msg timestamp="20191223 16:45:17.937" level="TRACE">Arguments: [ 'Trailer not exist.' ]</msg>
<msg timestamp="20191223 16:45:17.937" level="TRACE">Return: 'Trailer not exist.'</msg>
<msg timestamp="20191223 16:45:17.938" level="INFO">${expected_error_message} = Trailer not exist.</msg>
<status status="PASS" starttime="20191223 16:45:17.937" endtime="20191223 16:45:17.938"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20191223 16:45:17.940" level="TRACE">Arguments: [ b'{"Caption":"Error","Code":"400","Description":"Trailer not exist.","Id":"WS_Test_Trailer","ObjectName":"Trailer","SID":0,"Title":"Trailer not exist."}' ]</msg>
<msg timestamp="20191223 16:45:17.940" level="INFO">To JSON using : content={"Caption":"Error","Code":"400","Description":"Trailer not exist.","Id":"WS_Test_Trailer","ObjectName":"Trailer","SID":0,"Title":"Trailer not exist."} </msg>
<msg timestamp="20191223 16:45:17.940" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191223 16:45:17.940" level="TRACE">Return: {'Caption': 'Error',
 'Code': '400',
 'Description': 'Trailer not exist.',
 'Id': 'WS_Test_Trailer',
 'ObjectName': 'Trailer',
 'SID': 0,
 'Title': 'Trailer not exist.'}</msg>
<msg timestamp="20191223 16:45:17.941" level="INFO">${json_response} = {'Caption': 'Error', 'Code': '400', 'Description': 'Trailer not exist.', 'Id': 'WS_Test_Trailer', 'ObjectName': 'Trailer', 'SID': 0, 'Title': 'Trailer not exist.'}</msg>
<status status="PASS" starttime="20191223 16:45:17.939" endtime="20191223 16:45:17.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_response}[Description]</arg>
<arg>${expected_error_message}</arg>
</arguments>
<msg timestamp="20191223 16:45:17.942" level="TRACE">Arguments: [ 'Trailer not exist.' | 'Trailer not exist.' ]</msg>
<msg timestamp="20191223 16:45:17.942" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:17.943" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:17.942" endtime="20191223 16:45:17.943"></status>
</kw>
<doc>Attempts to delete a previously deleted trailer.</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:17.514" endtime="20191223 16:45:17.944" critical="yes"></status>
</test>
<test id="s1-s1-s1-t10" name="Validate AWS XRS Get Trailer V2 REST Web Services Returns 400 Error">
<kw name="Get Trailer V2 By ID" library="Trailer">
<doc>Get attributes for a specific trailer by specifying a TrailerSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:17.951" level="TRACE">Arguments: [ ${trailer_id}='WS_Test_Trailer_V2' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_TRAILER_V2}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:17.952" level="TRACE">Arguments: [ 'TrailerWebService.svc/v2/trailer/WS_Test_Trailer_V2' ]</msg>
<msg timestamp="20191223 16:45:17.952" level="TRACE">Return: 'TrailerWebService.svc/v2/trailer/WS_Test_Trailer_V2'</msg>
<msg timestamp="20191223 16:45:17.952" level="INFO">${uri} = TrailerWebService.svc/v2/trailer/WS_Test_Trailer_V2</msg>
<status status="PASS" starttime="20191223 16:45:17.951" endtime="20191223 16:45:17.952"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:17.953" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/v2/trailer/WS_Test_Trailer_V2' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:17.953" level="INFO">GET Request using : uri=TrailerWebService.svc/v2/trailer/WS_Test_Trailer_V2, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:18.358" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/v2/trailer/WS_Test_Trailer_V2 HTTP/1.1" 400 105</msg>
<msg timestamp="20191223 16:45:18.358" level="DEBUG">GET Response : status=400, reason=Bad Request
{"ErrorMessage":"Trailer not exist.","EventCode":3461297934639824896,"Parameters":["WS_Test_Trailer_V2"]}</msg>
<msg timestamp="20191223 16:45:18.358" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20191223 16:45:18.359" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:17.953" endtime="20191223 16:45:18.359"></status>
</kw>
<msg timestamp="20191223 16:45:18.359" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20191223 16:45:18.359" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:17.950" endtime="20191223 16:45:18.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20191223 16:45:18.361" level="TRACE">Arguments: [ 400 | '400' ]</msg>
<msg timestamp="20191223 16:45:18.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:18.361" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:18.360" endtime="20191223 16:45:18.361"></status>
</kw>
<doc>Verifies that a driver with a specific number does not exist</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:17.949" endtime="20191223 16:45:18.362" critical="yes"></status>
</test>
<test id="s1-s1-s1-t11" name="Validate AWS XRS Post Trailer V2 REST Web Services Returns Code 201">
<kw name="Post Trailers V2" library="Trailer">
<doc>Calls the Post Method for Trailers.
Accepts a list of json objects
Json field definitions:
CompanyName
The user defined name of the company.
CreateDate
The date and time the trailer object was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
ModifiedBy
The ID of the last person to modify the driver record.
ModifiedDate
Date driver record was last modified.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
OrganizationID
The user-defined ID of the Organization in Omnitracs XRS in which the trailer is located.
OrganizationName
The user-defined name of the organization in which the trailer is located.
StateName
The state, province or territory for the trailer.
Status
The current status of the trailer in the Omnitracs XRS. The value of this field must be Active or Inactive.
TrailerIdentity
The user-defined ID of the trailer.
TrailerResourceGroupIDs
Indicates the set of ResourceGroupIDs to which the trailers should belong.
TrailerType
The type of trailer.
VIN
The registered Vehicle Identification Number (VIN) of the trailer.
NOTE: This non-required field is reserved for future use.
Web Service calls made to retrieve the value of this field will return a null value at this time.
Country
The country where the trailer is based.
NOTE: This field is used only with Version 2 of this Web Service.
LicensePlate
The LicensePlate of the vehicle attached to the trailer.
NOTE: This field is used only with Version 2 of this Web Service.
Odomoter
The last Odometer reading from the trailer.
NOTE: This field is used only with Version 2 of this Web Service.
SerialNumber
The serial number of the trailer, if available.
NOTE: This field is used only with Version 2 of this Web Service.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:18.367" level="TRACE">Arguments: [ @{list_data}=[{'Country': 'USA',
  'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer_V2'}] ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:18.368" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers' ]</msg>
<msg timestamp="20191223 16:45:18.368" level="TRACE">Return: 'TrailerWebService.svc/trailers'</msg>
<msg timestamp="20191223 16:45:18.368" level="INFO">${uri} = TrailerWebService.svc/trailers</msg>
<status status="PASS" starttime="20191223 16:45:18.367" endtime="20191223 16:45:18.368"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:18.369" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers' | json=[{'Country': 'USA',
  'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer_V2'}] | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:18.370" level="INFO">POST Request using : uri=TrailerWebService.svc/trailers, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=[{'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer_V2', 'Country': 'USA'}]</msg>
<msg timestamp="20191223 16:45:18.952" level="DEBUG">https://d3ws.xataxrs.com:443 "POST /TrailerWebService.svc/trailers HTTP/1.1" 200 164</msg>
<msg timestamp="20191223 16:45:18.953" level="DEBUG">POST Response : status=200, reason=OK
[{"Caption":"Created","Code":"201","Description":"Trailer added successfully.","Id":"WS_Test_Trailer_V2","ObjectName":"Trailer","SID":5690,"Title":"TrailerAdded."}]</msg>
<msg timestamp="20191223 16:45:18.953" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:18.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:18.369" endtime="20191223 16:45:18.954"></status>
</kw>
<msg timestamp="20191223 16:45:18.954" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:18.954" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:18.366" endtime="20191223 16:45:18.954"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20191223 16:45:18.957" level="TRACE">Arguments: [ b'[{"Caption":"Created","Code":"201","Description":"Trailer added successfully.","Id":"WS_Test_Trailer_V2","ObjectName":"Trailer","SID":5690,"Title":"TrailerAdded."}]' ]</msg>
<msg timestamp="20191223 16:45:18.957" level="INFO">To JSON using : content=[{"Caption":"Created","Code":"201","Description":"Trailer added successfully.","Id":"WS_Test_Trailer_V2","ObjectName":"Trailer","SID":5690,"Title":"TrailerAdded."}] </msg>
<msg timestamp="20191223 16:45:18.957" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191223 16:45:18.957" level="TRACE">Return: [{'Caption': 'Created',
  'Code': '201',
  'Description': 'Trailer added successfully.',
  'Id': 'WS_Test_Trailer_V2',
  'ObjectName': 'Trailer',
  'SID': 5690,
  'Title': 'TrailerAdded.'}]</msg>
<msg timestamp="20191223 16:45:18.958" level="INFO">${json_response} = [{'Caption': 'Created', 'Code': '201', 'Description': 'Trailer added successfully.', 'Id': 'WS_Test_Trailer_V2', 'ObjectName': 'Trailer', 'SID': 5690, 'Title': 'TrailerAdded.'}]</msg>
<status status="PASS" starttime="20191223 16:45:18.956" endtime="20191223 16:45:18.958"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = {'Caption': 'Created', 'Code': '201', 'Description': 'Trailer added successfully.', 'Id': 'WS_Test_Trailer_V2', 'ObjectName': 'Trailer', 'SID': 5690, 'Title': 'TrailerAdded.'}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Code]</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191223 16:45:18.960" level="TRACE">Arguments: [ '201' | '201' ]</msg>
<msg timestamp="20191223 16:45:18.960" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:18.960" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:18.959" endtime="20191223 16:45:18.960"></status>
</kw>
<status status="PASS" starttime="20191223 16:45:18.959" endtime="20191223 16:45:18.961"></status>
</kw>
<status status="PASS" starttime="20191223 16:45:18.959" endtime="20191223 16:45:18.961"></status>
</kw>
<doc>Posts a driver and expects a Code value of 201</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:18.364" endtime="20191223 16:45:18.962" critical="yes"></status>
</test>
<test id="s1-s1-s1-t12" name="Validate AWS XRS Get Trailer V2 REST Web Services Returns 200 OK">
<kw name="Get Trailer By ID" library="Trailer">
<doc>Get attributes for a specific trailer by specifying a TrailerSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:18.968" level="TRACE">Arguments: [ ${trailer_id}='WS_Test_Trailer_V2' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:18.969" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailer/WS_Test_Trailer_V2' ]</msg>
<msg timestamp="20191223 16:45:18.969" level="TRACE">Return: 'TrailerWebService.svc/trailer/WS_Test_Trailer_V2'</msg>
<msg timestamp="20191223 16:45:18.969" level="INFO">${uri} = TrailerWebService.svc/trailer/WS_Test_Trailer_V2</msg>
<status status="PASS" starttime="20191223 16:45:18.968" endtime="20191223 16:45:18.969"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:18.970" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailer/WS_Test_Trailer_V2' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:18.971" level="INFO">GET Request using : uri=TrailerWebService.svc/trailer/WS_Test_Trailer_V2, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:19.417" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailer/WS_Test_Trailer_V2 HTTP/1.1" 200 495</msg>
<msg timestamp="20191223 16:45:19.418" level="DEBUG">GET Response : status=200, reason=OK
{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169901414-0800)\/","ModifiedBy":0,"ModifiedDate":"\/Date(-62135568000000-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer_V2","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null}</msg>
<msg timestamp="20191223 16:45:19.418" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:19.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:18.970" endtime="20191223 16:45:19.419"></status>
</kw>
<msg timestamp="20191223 16:45:19.419" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:19.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:18.967" endtime="20191223 16:45:19.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:19.420" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:19.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:19.421" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:19.420" endtime="20191223 16:45:19.421"></status>
</kw>
<doc>Verifies that a posted driver now exists</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:18.966" endtime="20191223 16:45:19.422" critical="yes"></status>
</test>
<test id="s1-s1-s1-t13" name="Validate AWS XRS Put Trailer V2 REST Web Services Modifies Driver Successfully">
<kw name="Put Trailers V2" library="Trailer">
<doc>Calls the Post Method for Trailers.
Accepts a list of json objects
See Json field definitions in the "Post Trailers" Keyword</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:19.427" level="TRACE">Arguments: [ @{list_data}=[{'Country': 'USA',
  'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer_V2'}] ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:19.428" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers' ]</msg>
<msg timestamp="20191223 16:45:19.428" level="TRACE">Return: 'TrailerWebService.svc/trailers'</msg>
<msg timestamp="20191223 16:45:19.429" level="INFO">${uri} = TrailerWebService.svc/trailers</msg>
<status status="PASS" starttime="20191223 16:45:19.428" endtime="20191223 16:45:19.429"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:19.429" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers' | json=[{'Country': 'USA',
  'OrganizationID': 46663,
  'StateName': 'Minnesota',
  'Status': 'Active',
  'TrailerIdentity': 'WS_Test_Trailer_V2'}] | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:19.430" level="INFO">PUT Request using : uri=TrailerWebService.svc/trailers, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=[{'OrganizationID': 46663, 'StateName': 'Minnesota', 'Status': 'Active', 'TrailerIdentity': 'WS_Test_Trailer_V2', 'Country': 'USA'}]</msg>
<msg timestamp="20191223 16:45:20.078" level="DEBUG">https://d3ws.xataxrs.com:443 "PUT /TrailerWebService.svc/trailers HTTP/1.1" 200 205</msg>
<msg timestamp="20191223 16:45:20.079" level="DEBUG">PUT Response : status=200, reason=OK
[{"Caption":"Trailer edited successfully.","Code":"200","Description":"Trailer edited successfully.","Id":"WS_Test_Trailer_V2","ObjectName":"Trailer edited successfully.","SID":0,"Title":"TrailerEdited."}]</msg>
<msg timestamp="20191223 16:45:20.079" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:20.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:19.429" endtime="20191223 16:45:20.080"></status>
</kw>
<msg timestamp="20191223 16:45:20.080" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:20.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:19.426" endtime="20191223 16:45:20.080"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20191223 16:45:20.082" level="TRACE">Arguments: [ b'[{"Caption":"Trailer edited successfully.","Code":"200","Description":"Trailer edited successfully.","Id":"WS_Test_Trailer_V2","ObjectName":"Trailer edited successfully.","SID":0,"Title":"TrailerEdited."}]' ]</msg>
<msg timestamp="20191223 16:45:20.083" level="INFO">To JSON using : content=[{"Caption":"Trailer edited successfully.","Code":"200","Description":"Trailer edited successfully.","Id":"WS_Test_Trailer_V2","ObjectName":"Trailer edited successfully.","SID":0,"Title":"TrailerEdited."}] </msg>
<msg timestamp="20191223 16:45:20.083" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191223 16:45:20.083" level="TRACE">Return: [{'Caption': 'Trailer edited successfully.',
  'Code': '200',
  'Description': 'Trailer edited successfully.',
  'Id': 'WS_Test_Trailer_V2',
  'ObjectName': 'Trailer edited successfully.',
  'SID': 0,
  'Title': 'TrailerEdited.'}]</msg>
<msg timestamp="20191223 16:45:20.084" level="INFO">${json_response} = [{'Caption': 'Trailer edited successfully.', 'Code': '200', 'Description': 'Trailer edited successfully.', 'Id': 'WS_Test_Trailer_V2', 'ObjectName': 'Trailer edited successfully.', 'SID': 0, 'Title': ...</msg>
<status status="PASS" starttime="20191223 16:45:20.081" endtime="20191223 16:45:20.085"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = {'Caption': 'Trailer edited successfully.', 'Code': '200', 'Description': 'Trailer edited successfully.', 'Id': 'WS_Test_Trailer_V2', 'ObjectName': 'Trailer edited successfully.', 'SID': 0, 'Title': '..." type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Trailer edited successfully.</arg>
</arguments>
<msg timestamp="20191223 16:45:20.087" level="TRACE">Arguments: [ 'Trailer edited successfully.' | 'Trailer edited successfully.' ]</msg>
<msg timestamp="20191223 16:45:20.087" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:20.088" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:20.087" endtime="20191223 16:45:20.088"></status>
</kw>
<status status="PASS" starttime="20191223 16:45:20.086" endtime="20191223 16:45:20.088"></status>
</kw>
<status status="PASS" starttime="20191223 16:45:20.086" endtime="20191223 16:45:20.088"></status>
</kw>
<doc>Posts a driver and expects a Code value of 201</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:19.425" endtime="20191223 16:45:20.089" critical="yes"></status>
</test>
<test id="s1-s1-s1-t14" name="Validate AWS XRS Get Trailers V2 REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191223 16:45:20.094" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191223 16:45:20.094" level="TRACE">Return: ['2019', '12', '23']</msg>
<msg timestamp="20191223 16:45:20.095" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191223 16:45:20.095" level="INFO">${mm} = 12</msg>
<msg timestamp="20191223 16:45:20.095" level="INFO">${dd} = 23</msg>
<status status="PASS" starttime="20191223 16:45:20.094" endtime="20191223 16:45:20.095"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191223 16:45:20.096" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191223 16:45:20.097" level="TRACE">Return: {'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191223 16:45:20.097" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/23/2019 }</msg>
<status status="PASS" starttime="20191223 16:45:20.096" endtime="20191223 16:45:20.097"></status>
</kw>
<kw name="Verify Get Trailers V2 With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191223 16:45:20.098" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<msg timestamp="20191223 16:45:20.098" level="TRACE">Arguments: [ '/' ]</msg>
<msg timestamp="20191223 16:45:20.099" level="TRACE">Return: '/'</msg>
<msg timestamp="20191223 16:45:20.099" level="INFO">${ending_character} = /</msg>
<status status="PASS" starttime="20191223 16:45:20.098" endtime="20191223 16:45:20.099"></status>
</kw>
<kw name="Get Trailers With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Trailer">
<doc>This Keyword modifies character between the base uri and the parameters
This will get trailers that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Trailers Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:20.099" level="TRACE">Arguments: [ ${ending_character}='/' | ${params}={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:20.101" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailers/' ]</msg>
<msg timestamp="20191223 16:45:20.101" level="TRACE">Return: 'TrailerWebService.svc/trailers/'</msg>
<msg timestamp="20191223 16:45:20.101" level="INFO">${uri} = TrailerWebService.svc/trailers/</msg>
<status status="PASS" starttime="20191223 16:45:20.100" endtime="20191223 16:45:20.101"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:20.101" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailers/' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<msg timestamp="20191223 16:45:20.102" level="INFO">GET Request using : uri=TrailerWebService.svc/trailers/, params={'OrganizationID': 46663, 'IsActive': 'True', 'AsOfDateTime': '12/23/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:20.621" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12%2F23%2F2019 HTTP/1.1" 200 498</msg>
<msg timestamp="20191223 16:45:20.623" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169901414-0800)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1577169902431-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer_V2","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":null,"UserDefinedField2":null,"UserDefinedField3":null,"UserDefinedField4":null,"UserDefinedField5":null,"VIN":null}]</msg>
<msg timestamp="20191223 16:45:20.623" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:20.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:20.101" endtime="20191223 16:45:20.624"></status>
</kw>
<msg timestamp="20191223 16:45:20.625" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:20.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:20.099" endtime="20191223 16:45:20.625"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:20.627" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:20.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:20.627" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:20.626" endtime="20191223 16:45:20.628"></status>
</kw>
<msg timestamp="20191223 16:45:20.628" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:20.097" endtime="20191223 16:45:20.628"></status>
</kw>
<kw name="Verify Get Trailers V2 Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<msg timestamp="20191223 16:45:20.631" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Get Trailers V2" library="Trailer">
<doc>Call the Get Method on trailers v2.
This will get trailers that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
IsActive
Filters results to active trailers only.
True, False, Both
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationID
Limits results to trailers in one or more organizations.
Maximum of 20 characters.
Recurse
When True, limits results to all trailer objects in all OrganizationIDs and ResourceGroupIDs in OrganizationID &amp; ResourceGroupID.
ResourceGroupID
Limits results to trailers in one or more resource groups.
ResourceGroupSID
Limits results to Organizations in one or more resource groups.
Maximum of 50 characters.
Status
Limits results to trailers with the selected status. Valid values include:
IsActive - Limits results to all active trailer objects in OrganizationID &amp; ResourceGroupID.
IsInActive - Limits results to all inactive trailer objects within all OrganizationID and ResourceGroupID.
TrailerID
Limits the results to trailer objects with TrailerID in OrganizationID and ResourceGroupID.
Maximum of 20 characters.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:20.632" level="TRACE">Arguments: [ &amp;{params}={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS_V2}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:20.634" level="TRACE">Arguments: [ 'TrailerWebService.svc/v2/trailers' ]</msg>
<msg timestamp="20191223 16:45:20.634" level="TRACE">Return: 'TrailerWebService.svc/v2/trailers'</msg>
<msg timestamp="20191223 16:45:20.634" level="INFO">${uri} = TrailerWebService.svc/v2/trailers</msg>
<status status="PASS" starttime="20191223 16:45:20.633" endtime="20191223 16:45:20.634"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:20.635" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/v2/trailers' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} | params={'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663} ]</msg>
<msg timestamp="20191223 16:45:20.636" level="INFO">GET Request using : uri=TrailerWebService.svc/v2/trailers, params={'OrganizationID': 46663, 'IsActive': 'True', 'AsOfDateTime': '12/23/2019'}, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:21.109" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/v2/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12%2F23%2F2019 HTTP/1.1" 200 555</msg>
<msg timestamp="20191223 16:45:21.110" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169901414-0800)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1577169902431-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer_V2","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":"","UserDefinedField2":"","UserDefinedField3":"","UserDefinedField4":"","UserDefinedField5":"","VIN":null,"Country":"USA","LicensePlate":"","Odometer":0,"SerialNumber":null}]</msg>
<msg timestamp="20191223 16:45:21.110" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:21.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:20.634" endtime="20191223 16:45:21.110"></status>
</kw>
<msg timestamp="20191223 16:45:21.111" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:21.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:20.632" endtime="20191223 16:45:21.111"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:21.112" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:21.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:21.113" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:21.111" endtime="20191223 16:45:21.113"></status>
</kw>
<msg timestamp="20191223 16:45:21.113" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:20.630" endtime="20191223 16:45:21.113"></status>
</kw>
<doc>Get drivers with basic parameters</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:20.092" endtime="20191223 16:45:21.115" critical="yes"></status>
</test>
<test id="s1-s1-s1-t15" name="Validate AWS XRS Get Trailers V2 REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Trailers V2 Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191223 16:45:21.121" level="TRACE">Arguments: [ ${character_string}='/?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191223 16:45:21.121" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191223 16:45:21.122" level="TRACE">Return: ['2019', '12', '23']</msg>
<msg timestamp="20191223 16:45:21.122" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191223 16:45:21.122" level="INFO">${mm} = 12</msg>
<msg timestamp="20191223 16:45:21.122" level="INFO">${dd} = 23</msg>
<status status="PASS" starttime="20191223 16:45:21.121" endtime="20191223 16:45:21.122"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191223 16:45:21.123" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191223 16:45:21.123" level="TRACE">Return: {'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191223 16:45:21.124" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/23/2019 }</msg>
<status status="PASS" starttime="20191223 16:45:21.122" endtime="20191223 16:45:21.124"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS_V2}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191223 16:45:21.124" level="TRACE">Arguments: [ ${base_uri}='TrailerWebService.svc' | ${request_type}='/v2/trailers' | ${character_string}='/?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:21.125" level="TRACE">Arguments: [ 'TrailerWebService.svc/v2/trailers/?' ]</msg>
<msg timestamp="20191223 16:45:21.125" level="TRACE">Return: 'TrailerWebService.svc/v2/trailers/?'</msg>
<msg timestamp="20191223 16:45:21.125" level="INFO">${uri} = TrailerWebService.svc/v2/trailers/?</msg>
<status status="PASS" starttime="20191223 16:45:21.125" endtime="20191223 16:45:21.125"></status>
</kw>
<msg timestamp="20191223 16:45:21.126" level="TRACE">Return: 'TrailerWebService.svc/v2/trailers/?'</msg>
<msg timestamp="20191223 16:45:21.126" level="INFO">${uri_string} = TrailerWebService.svc/v2/trailers/?</msg>
<status status="PASS" starttime="20191223 16:45:21.124" endtime="20191223 16:45:21.126"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:21.127" level="TRACE">Arguments: [ 'TrailerWebService.svc/v2/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019' ]</msg>
<msg timestamp="20191223 16:45:21.127" level="TRACE">Return: 'TrailerWebService.svc/v2/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019'</msg>
<msg timestamp="20191223 16:45:21.127" level="INFO">${uri} = TrailerWebService.svc/v2/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019</msg>
<status status="PASS" starttime="20191223 16:45:21.126" endtime="20191223 16:45:21.127"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:21.128" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/v2/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:21.128" level="INFO">GET Request using : uri=TrailerWebService.svc/v2/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:21.591" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/v2/trailers/?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019 HTTP/1.1" 200 555</msg>
<msg timestamp="20191223 16:45:21.592" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169901414-0800)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1577169902431-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer_V2","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":"","UserDefinedField2":"","UserDefinedField3":"","UserDefinedField4":"","UserDefinedField5":"","VIN":null,"Country":"USA","LicensePlate":"","Odometer":0,"SerialNumber":null}]</msg>
<msg timestamp="20191223 16:45:21.592" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:21.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:21.127" endtime="20191223 16:45:21.593"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:21.594" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:21.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:21.594" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:21.593" endtime="20191223 16:45:21.594"></status>
</kw>
<msg timestamp="20191223 16:45:21.594" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:21.120" endtime="20191223 16:45:21.594"></status>
</kw>
<kw name="Verify Get Trailers V2 Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<msg timestamp="20191223 16:45:21.596" level="TRACE">Arguments: [ ${character_string}='?' ]</msg>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<msg timestamp="20191223 16:45:21.597" level="TRACE">Arguments: [ 'year,month,day' ]</msg>
<msg timestamp="20191223 16:45:21.597" level="TRACE">Return: ['2019', '12', '23']</msg>
<msg timestamp="20191223 16:45:21.597" level="INFO">${yyyy} = 2019</msg>
<msg timestamp="20191223 16:45:21.597" level="INFO">${mm} = 12</msg>
<msg timestamp="20191223 16:45:21.597" level="INFO">${dd} = 23</msg>
<status status="PASS" starttime="20191223 16:45:21.596" endtime="20191223 16:45:21.597"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20191223 16:45:21.598" level="TRACE">Arguments: [ 'OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}' | 'IsActive=True' | 'AsOfDateTime=${mm}/${dd}/${yyyy}' ]</msg>
<msg timestamp="20191223 16:45:21.599" level="TRACE">Return: {'AsOfDateTime': '12/23/2019', 'IsActive': 'True', 'OrganizationID': 46663}</msg>
<msg timestamp="20191223 16:45:21.599" level="INFO">&amp;{params} = { OrganizationID=46663 | IsActive=True | AsOfDateTime=12/23/2019 }</msg>
<status status="PASS" starttime="20191223 16:45:21.598" endtime="20191223 16:45:21.599"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS_V2}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<msg timestamp="20191223 16:45:21.600" level="TRACE">Arguments: [ ${base_uri}='TrailerWebService.svc' | ${request_type}='/v2/trailers' | ${character_string}='?' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:21.601" level="TRACE">Arguments: [ 'TrailerWebService.svc/v2/trailers?' ]</msg>
<msg timestamp="20191223 16:45:21.602" level="TRACE">Return: 'TrailerWebService.svc/v2/trailers?'</msg>
<msg timestamp="20191223 16:45:21.602" level="INFO">${uri} = TrailerWebService.svc/v2/trailers?</msg>
<status status="PASS" starttime="20191223 16:45:21.601" endtime="20191223 16:45:21.602"></status>
</kw>
<msg timestamp="20191223 16:45:21.602" level="TRACE">Return: 'TrailerWebService.svc/v2/trailers?'</msg>
<msg timestamp="20191223 16:45:21.602" level="INFO">${uri_string} = TrailerWebService.svc/v2/trailers?</msg>
<status status="PASS" starttime="20191223 16:45:21.599" endtime="20191223 16:45:21.602"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:21.603" level="TRACE">Arguments: [ 'TrailerWebService.svc/v2/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019' ]</msg>
<msg timestamp="20191223 16:45:21.604" level="TRACE">Return: 'TrailerWebService.svc/v2/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019'</msg>
<msg timestamp="20191223 16:45:21.604" level="INFO">${uri} = TrailerWebService.svc/v2/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019</msg>
<status status="PASS" starttime="20191223 16:45:21.603" endtime="20191223 16:45:21.604"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:21.605" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/v2/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:21.605" level="INFO">GET Request using : uri=TrailerWebService.svc/v2/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:22.050" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/v2/trailers?OrganizationID=46663&amp;IsActive=True&amp;AsOfDateTime=12/23/2019 HTTP/1.1" 200 555</msg>
<msg timestamp="20191223 16:45:22.052" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1577169901414-0800)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1577169902431-0800)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"WS_Test_Trailer_V2","TrailerResourceGroupIDs":["Gnome Shipping D3"],"TrailerType":"General","UserDefinedField1":"","UserDefinedField2":"","UserDefinedField3":"","UserDefinedField4":"","UserDefinedField5":"","VIN":null,"Country":"USA","LicensePlate":"","Odometer":0,"SerialNumber":null}]</msg>
<msg timestamp="20191223 16:45:22.052" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:22.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:21.604" endtime="20191223 16:45:22.052"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:22.053" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:22.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:22.054" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:22.052" endtime="20191223 16:45:22.054"></status>
</kw>
<msg timestamp="20191223 16:45:22.054" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:21.596" endtime="20191223 16:45:22.054"></status>
</kw>
<doc>Get drivers with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:21.118" endtime="20191223 16:45:22.055" critical="yes"></status>
</test>
<test id="s1-s1-s1-t16" name="Validate AWS XRS Delete Trailer V2 REST Web Services Returns 200 OK">
<kw name="Delete Trailer By ID" library="Trailer">
<doc>Delete a single trailer record in Omnitracs XRS by specifying the TrailerSID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:22.062" level="TRACE">Arguments: [ ${trailer_id}='WS_Test_Trailer_V2' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:22.063" level="TRACE">Arguments: [ 'TrailerWebService.svc/trailer/WS_Test_Trailer_V2' ]</msg>
<msg timestamp="20191223 16:45:22.063" level="TRACE">Return: 'TrailerWebService.svc/trailer/WS_Test_Trailer_V2'</msg>
<msg timestamp="20191223 16:45:22.064" level="INFO">${uri} = TrailerWebService.svc/trailer/WS_Test_Trailer_V2</msg>
<status status="PASS" starttime="20191223 16:45:22.063" endtime="20191223 16:45:22.064"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:22.064" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/trailer/WS_Test_Trailer_V2' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:22.065" level="INFO">DELETE Request using : uri=TrailerWebService.svc/trailer/WS_Test_Trailer_V2, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:22.669" level="DEBUG">https://d3ws.xataxrs.com:443 "DELETE /TrailerWebService.svc/trailer/WS_Test_Trailer_V2 HTTP/1.1" 200 164</msg>
<msg timestamp="20191223 16:45:22.670" level="DEBUG">DELETE Response : status=200, reason=OK
{"Caption":"Deleted.","Code":"200","Description":"Trailer Deleted Successfully.","Id":"WS_Test_Trailer_V2","ObjectName":"Trailer","SID":0,"Title":"TrailerDeleted."}</msg>
<msg timestamp="20191223 16:45:22.670" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:22.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:22.064" endtime="20191223 16:45:22.670"></status>
</kw>
<msg timestamp="20191223 16:45:22.671" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:22.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:22.061" endtime="20191223 16:45:22.671"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:22.672" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:22.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:22.672" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:22.671" endtime="20191223 16:45:22.672"></status>
</kw>
<doc>Verifies that created driver is deleted</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:22.059" endtime="20191223 16:45:22.672" critical="yes"></status>
</test>
<test id="s1-s1-s1-t17" name="Validate AWS XRS Get Trailers V2 REST Web Services For All Trailers Returns 200 OK">
<kw name="Get All Trailers V2" library="Trailer">
<doc>Get attributes for all trailers v2.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:22.675" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS_V2}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191223 16:45:22.676" level="TRACE">Arguments: [ 'TrailerWebService.svc/v2/trailers' ]</msg>
<msg timestamp="20191223 16:45:22.676" level="TRACE">Return: 'TrailerWebService.svc/v2/trailers'</msg>
<msg timestamp="20191223 16:45:22.676" level="INFO">${uri} = TrailerWebService.svc/v2/trailers</msg>
<status status="PASS" starttime="20191223 16:45:22.675" endtime="20191223 16:45:22.676"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191223 16:45:22.677" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'TrailerWebService.svc/v2/trailers' | headers={'Accept': 'application/json',
 'Accept-Encoding': 'gzip, deflate',
 'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20191223 16:45:22.677" level="INFO">GET Request using : uri=TrailerWebService.svc/v2/trailers, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20191223 16:45:23.170" level="DEBUG">https://d3ws.xataxrs.com:443 "GET /TrailerWebService.svc/v2/trailers HTTP/1.1" 200 1078</msg>
<msg timestamp="20191223 16:45:23.172" level="DEBUG">GET Response : status=200, reason=OK
[{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1562792228253-0700)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1562792228202-0700)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"Default_Trailer","TrailerResourceGroupIDs":null,"TrailerType":"General","UserDefinedField1":"","UserDefinedField2":"","UserDefinedField3":"","UserDefinedField4":"","UserDefinedField5":"","VIN":null,"Country":"USA","LicensePlate":"DEFTR123","Odometer":0,"SerialNumber":null},{"CompanyName":"Gnome Shipping D3","CreateDate":"\/Date(1537837317411-0700)\/","ModifiedBy":5412,"ModifiedDate":"\/Date(1537837317396-0700)\/","OrganizationID":"46663","OrganizationName":"Gnome Shipping D3","StateName":"Minnesota","Status":"Active","TrailerIdentity":"Troller1","TrailerResourceGroupIDs":null,"TrailerType":"General","UserDefinedField1":"","UserDefinedField2":"","UserDefinedField3":"","UserDefinedField4":"","UserDefinedField5":"","VIN":null,"Country":"USA","LicensePlate":"Troller1","Odometer":0,"SerialNumber":null}]</msg>
<msg timestamp="20191223 16:45:23.172" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:23.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:22.676" endtime="20191223 16:45:23.172"></status>
</kw>
<msg timestamp="20191223 16:45:23.173" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20191223 16:45:23.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191223 16:45:22.675" endtime="20191223 16:45:23.173"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191223 16:45:23.175" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20191223 16:45:23.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191223 16:45:23.176" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:23.174" endtime="20191223 16:45:23.176"></status>
</kw>
<doc>Gets all the trailers</doc>
<tags>
<tag>awsxrstrailerrestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20191223 16:45:22.674" endtime="20191223 16:45:23.177" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<msg timestamp="20191223 16:45:23.186" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191223 16:45:23.186" level="INFO">Delete All Sessions</msg>
<msg timestamp="20191223 16:45:23.186" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191223 16:45:23.186" endtime="20191223 16:45:23.187"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Trailer Entity Management Web Services</doc>
<status status="PASS" starttime="20191223 16:45:11.649" endtime="20191223 16:45:23.187"></status>
</suite>
<status status="PASS" starttime="20191223 16:45:11.646" endtime="20191223 16:45:23.222"></status>
</suite>
<status status="PASS" starttime="20191223 16:45:11.620" endtime="20191223 16:45:23.234"></status>
</suite>
<statistics>
<total>
<stat pass="17" fail="0">Critical Tests</stat>
<stat pass="17" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="17" fail="0">awsxrstrailerrestwebservicevalidation</stat>
<stat pass="2" fail="0">xrsawsperftest</stat>
</tag>
<suite>
<stat pass="17" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="17" fail="0" id="s1-s1" name="AWS XRS WebServicesTests">Tests.AWS XRS WebServicesTests</stat>
<stat pass="17" fail="0" id="s1-s1-s1" name="ValidateAWSXRSTrailerWebService">Tests.AWS XRS WebServicesTests.ValidateAWSXRSTrailerWebService</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
