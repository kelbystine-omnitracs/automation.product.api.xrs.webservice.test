<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20191203 16:19:18.190" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests">
<suite id="s1-s1" name="AWS XRS WebServicesTests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests">
<suite id="s1-s1-s1" name="ValidateAWSXRSDeviceWebServices" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\ValidateAWSXRSDeviceWebServices.robot">
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService" type="setup">
<doc>Create a session with aws xrs web services without authorization</doc>
<msg timestamp="20191203 16:19:18.416" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<msg timestamp="20191203 16:19:18.416" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'https://d3ws.xataxrs.com' | verify=True | auth=['GnomeShippingD3|admin', 'xrs123'] ]</msg>
<msg timestamp="20191203 16:19:18.416" level="INFO">Creating Session using : alias=xrs_web_service_session, url=https://d3ws.xataxrs.com, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x0000025271D8DD68&gt;, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg timestamp="20191203 16:19:18.417" level="DEBUG">Creating session: xrs_web_service_session</msg>
<msg timestamp="20191203 16:19:18.417" level="DEBUG">Argument types are:
&lt;class 'bool'&gt;</msg>
<msg timestamp="20191203 16:19:18.417" level="TRACE">Return: &lt;requests.sessions.Session object at 0x0000025271D8DB00&gt;</msg>
<status status="PASS" starttime="20191203 16:19:18.416" endtime="20191203 16:19:18.417"></status>
</kw>
<msg timestamp="20191203 16:19:18.417" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191203 16:19:18.416" endtime="20191203 16:19:18.417"></status>
</kw>
<test id="s1-s1-s1-t1" name="Validate AWS XRS Device REST Webservices">
<kw name="Verify Post Devices">
<msg timestamp="20191203 16:19:18.418" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>PhoneNumber=1234567896</arg>
<arg>DeviceType=Nexus</arg>
<arg>CarrierDisplayName=Sprint</arg>
<arg>OrganizationName=Gnome Shipping D3</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20191203 16:19:18.419" level="TRACE">Arguments: [ 'PhoneNumber=1234567896' | 'DeviceType=Nexus' | 'CarrierDisplayName=Sprint' | 'OrganizationName=Gnome Shipping D3' ]</msg>
<msg timestamp="20191203 16:19:18.419" level="TRACE">Return: {'CarrierDisplayName': 'Sprint',
 'DeviceType': 'Nexus',
 'OrganizationName': 'Gnome Shipping D3',
 'PhoneNumber': '1234567896'}</msg>
<msg timestamp="20191203 16:19:18.419" level="INFO">&amp;{data} = { PhoneNumber=1234567896 | DeviceType=Nexus | CarrierDisplayName=Sprint | OrganizationName=Gnome Shipping D3 }</msg>
<status status="PASS" starttime="20191203 16:19:18.419" endtime="20191203 16:19:18.419"></status>
</kw>
<kw name="Post Devices" library="Device">
<doc>This will post device information.</doc>
<arguments>
<arg>PhoneNumber=1234567896</arg>
<arg>DeviceType=Nexus</arg>
<arg>CarrierDisplayName=Sprint</arg>
<arg>OrganizationName=Gnome Shipping D3</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191203 16:19:18.419" level="TRACE">Arguments: [ &amp;{data}={'CarrierDisplayName': 'Sprint',
 'DeviceType': 'Nexus',
 'OrganizationName': 'Gnome Shipping D3',
 'PhoneNumber': '1234567896'} ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}/devices</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20191203 16:19:18.420" level="TRACE">Arguments: [ 'DeviceWebService.svc/devices' ]</msg>
<msg timestamp="20191203 16:19:18.420" level="TRACE">Return: 'DeviceWebService.svc/devices'</msg>
<msg timestamp="20191203 16:19:18.420" level="INFO">${uri} = DeviceWebService.svc/devices</msg>
<status status="PASS" starttime="20191203 16:19:18.420" endtime="20191203 16:19:18.420"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION}</arg>
<arg>${uri}</arg>
<arg>json=${data} headers=${XRS_WEBSERVICES_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191203 16:19:18.421" level="TRACE">Arguments: [ 'xrs_web_service_session' | 'DeviceWebService.svc/devices' | json="{'PhoneNumber': '1234567896', 'DeviceType': 'Nexus', 'CarrierDisplayName': 'Sprint', 'OrganizationName': 'Gnome Shipping D3'} headers={'Content-Type': 'application/json', 'Accept': 'application/json'}" ]</msg>
<msg timestamp="20191203 16:19:18.421" level="INFO">POST Request using : uri=DeviceWebService.svc/devices, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json={'PhoneNumber': '1234567896', 'DeviceType': 'Nexus', 'CarrierDisplayName': 'Sprint', 'OrganizationName': 'Gnome Shipping D3'} headers={'Content-Type': 'application/json', 'Accept': 'application/json'}</msg>
<msg timestamp="20191203 16:19:18.423" level="DEBUG">Starting new HTTPS connection (1): d3ws.xataxrs.com:443</msg>
<msg timestamp="20191203 16:19:24.001" level="DEBUG">https://d3ws.xataxrs.com:443 "POST /DeviceWebService.svc/devices HTTP/1.1" 400 4483</msg>
<msg timestamp="20191203 16:19:24.002" level="DEBUG">POST Response : status=400, reason=Bad Request
ï»¿&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
  &lt;head&gt;
    &lt;title&gt;Request Error&lt;/title&gt;
    &lt;style&gt;BODY { color: #000000; background-color: white; font-family: Verdana; margin-left: 0px; margin-top: 0px; } #content { margin-left: 30px; font-size: .70em; padding-bottom: 2em; } A:link { color: #336699; font-weight: bold; text-decoration: underline; } A:visited { color: #6699cc; font-weight: bold; text-decoration: underline; } A:active { color: #336699; font-weight: bold; text-decoration: underline; } .heading1 { background-color: #003366; border-bottom: #336699 6px solid; color: #ffffff; font-family: Tahoma; font-size: 26px; font-weight: normal;margin: 0em 0em 10px -20px; padding-bottom: 8px; padding-left: 30px;padding-top: 16px;} pre { font-size:small; background-color: #e5e5cc; padding: 5px; font-family: Courier New; margin-top: 0px; border: 1px #f0f0e0 solid; white-space: pre-wrap; white-space: -pre-wrap; word-wrap: break-word; } table { border-collapse: collapse; border-spacing: 0px; font-family: Verdana;} table th { border-right: 2px white solid; border-bottom: 2px white solid; font-weight: bold; background-color: #cecf9c;} table td { border-right: 2px white solid; border-bottom: 2px white solid; background-color: #e5e5cc;}&lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id="content"&gt;
      &lt;p class="heading1"&gt;Request Error&lt;/p&gt;
      &lt;p xmlns=""&gt;The server encountered an error processing the request. Please see the &lt;a rel="help-page" href="http://xrs-apigw-ws-2a944cb0887450de.elb.us-east-1.amazonaws.com/DeviceWebService.svc/help"&gt;service help page&lt;/a&gt; for constructing valid requests to the service. The exception message is 'Expecting state 'Element'.. Encountered 'Text'  with name '', namespace ''. '. See server logs for more details. The exception stack trace is: &lt;/p&gt;
      &lt;p&gt;   at ReadArrayOfDeviceFromJson(XmlReaderDelegator , XmlObjectSerializerReadContextComplexJson , XmlDictionaryString , XmlDictionaryString , CollectionDataContract )
   at System.Runtime.Serialization.Json.JsonCollectionDataContract.ReadJsonValueCore(XmlReaderDelegator jsonReader, XmlObjectSerializerReadContextComplexJson context)
   at System.Runtime.Serialization.Json.JsonDataContract.ReadJsonValue(XmlReaderDelegator jsonReader, XmlObjectSerializerReadContextComplexJson context)
   at System.Runtime.Serialization.Json.XmlObjectSerializerReadContextComplexJson.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)
   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract&amp;amp; dataContract)
   at System.Runtime.Serialization.XmlObjectSerializerReadContextComplex.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)
   at System.Runtime.Serialization.Json.DataContractJsonSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName)
   at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   at System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader reader, Boolean verifyObjectName)
   at System.ServiceModel.Dispatcher.SingleBodyParameterDataContractMessageFormatter.ReadObject(Message message)
   at System.ServiceModel.Dispatcher.SingleBodyParameterMessageFormatter.DeserializeRequest(Message message, Object[] parameters)
   at System.ServiceModel.Dispatcher.DemultiplexingDispatchMessageFormatter.DeserializeRequest(Message message, Object[] parameters)
   at System.ServiceModel.Dispatcher.UriTemplateDispatchFormatter.DeserializeRequest(Message message, Object[] parameters)
   at System.ServiceModel.Dispatcher.DispatchOperationRuntime.DeserializeInputs(MessageRpc&amp;amp; rpc)
   at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc&amp;amp; rpc)
   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp;amp; rpc)
   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc&amp;amp; rpc)
   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&lt;/p&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20191203 16:19:24.002" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20191203 16:19:24.002" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20191203 16:19:18.420" endtime="20191203 16:19:24.003"></status>
</kw>
<msg timestamp="20191203 16:19:24.003" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20191203 16:19:24.003" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20191203 16:19:18.419" endtime="20191203 16:19:24.003"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20191203 16:19:24.004" level="TRACE">Arguments: [ b'\xef\xbb\xbf&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;\r\n&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;\r\n  &lt;head&gt;\r\n    &lt;title&gt;Request Error&lt;/title&gt;\r\n    &lt;style&gt;BODY { color: #000000; background-color: white; font-family: Verdana; margin-left: 0px; margin-top: 0px; } #content { margin-left: 30px; font-size: .70em; padding-bottom: 2em; } A:link { color: #336699; font-weight: bold; text-decoration: underline; } A:visited { color: #6699cc; font-weight: bold; text-decoration: underline; } A:active { color: #336699; font-weight: bold; text-decoration: underline; } .heading1 { background-color: #003366; border-bottom: #336699 6px solid; color: #ffffff; font-family: Tahoma; font-size: 26px; font-weight: normal;margin: 0em 0em 10px -20px; padding-bottom: 8px; padding-left: 30px;padding-top: 16px;} pre { font-size:small; background-color: #e5e5cc; padding: 5px; font-family: Courier New; margin-top: 0px; border: 1px #f0f0e0 solid; white-space: pre-wrap; white-space: -pre-wrap; word-wrap: break-word; } table { border-collapse: collapse; border-spacing: 0px; font-family: Verdana;} table th { border-right: 2px white solid; border-bottom: 2px white solid; font-weight: bold; background-color: #cecf9c;} table td { border-right: 2px white solid; border-bottom: 2px white solid; background-color: #e5e5cc;}&lt;/style&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;div id="content"&gt;\r\n      &lt;p class="heading1"&gt;Request Error&lt;/p&gt;\r\n      &lt;p xmlns=""&gt;The server encountered an error processing the request. Please see the &lt;a rel="help-page" href="http://xrs-apigw-ws-2a944cb0887450de.elb.us-east-1.amazonaws.com/DeviceWebService.svc/help"&gt;service help page&lt;/a&gt; for constructing valid requests to the service. The exception message is \'Expecting state \'Element\'.. Encountered \'Text\'  with name \'\', namespace \'\'. \'. See server logs for more details. The exception stack trace is: &lt;/p&gt;\r\n      &lt;p&gt;   at ReadArrayOfDeviceFromJson(XmlReaderDelegator , XmlObjectSerializerReadContextComplexJson , XmlDictionaryString , XmlDictionaryString , CollectionDataContract )\r\n   at System.Runtime.Serialization.Json.JsonCollectionDataContract.ReadJsonValueCore(XmlReaderDelegator jsonReader, XmlObjectSerializerReadContextComplexJson context)\r\n   at System.Runtime.Serialization.Json.JsonDataContract.ReadJsonValue(XmlReaderDelegator jsonReader, XmlObjectSerializerReadContextComplexJson context)\r\n   at System.Runtime.Serialization.Json.XmlObjectSerializerReadContextComplexJson.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract&amp;amp; dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContextComplex.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n   at System.Runtime.Serialization.Json.DataContractJsonSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader reader, Boolean verifyObjectName)\r\n   at System.ServiceModel.Dispatcher.SingleBodyParameterDataContractMessageFormatter.ReadObject(Message message)\r\n   at System.ServiceModel.Dispatcher.SingleBodyParameterMessageFormatter.DeserializeRequest(Message message, Object[] parameters)\r\n   at System.ServiceModel.Dispatcher.DemultiplexingDispatchMessageFormatter.DeserializeRequest(Message message, Object[] parameters)\r\n   at System.ServiceModel.Dispatcher.UriTemplateDispatchFormatter.DeserializeRequest(Message message, Object[] parameters)\r\n   at System.ServiceModel.Dispatcher.DispatchOperationRuntime.DeserializeInputs(MessageRpc&amp;amp; rpc)\r\n   at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc&amp;amp; rpc)\r\n   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp;amp; rpc)\r\n   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc&amp;amp; rpc)\r\n   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&lt;/p&gt;\r\n    &lt;/div&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;' ]</msg>
<msg timestamp="20191203 16:19:24.010" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191203 16:19:24.003" endtime="20191203 16:19:24.010"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191203 16:19:24.011" level="TRACE">Arguments: [ 400 | '200' ]</msg>
<msg timestamp="20191203 16:19:24.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191203 16:19:24.011" level="FAIL">400 != 200</msg>
<msg timestamp="20191203 16:19:24.011" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20191203 16:19:24.010" endtime="20191203 16:19:24.011"></status>
</kw>
<status status="FAIL" starttime="20191203 16:19:18.418" endtime="20191203 16:19:24.012"></status>
</kw>
<doc>Initial test to verify that all AWS XRS Web Services are available</doc>
<tags>
<tag>pooky</tag>
</tags>
<status status="FAIL" starttime="20191203 16:19:18.417" endtime="20191203 16:19:24.012" critical="yes">400 != 200</status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<msg timestamp="20191203 16:19:24.014" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191203 16:19:24.014" level="INFO">Delete All Sessions</msg>
<msg timestamp="20191203 16:19:24.015" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191203 16:19:24.014" endtime="20191203 16:19:24.015"></status>
</kw>
<doc>Validates</doc>
<status status="FAIL" starttime="20191203 16:19:18.223" endtime="20191203 16:19:24.015"></status>
</suite>
<status status="FAIL" starttime="20191203 16:19:18.220" endtime="20191203 16:19:24.017"></status>
</suite>
<status status="FAIL" starttime="20191203 16:19:18.192" endtime="20191203 16:19:24.020"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1">pooky</stat>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="1" id="s1-s1" name="AWS XRS WebServicesTests">Tests.AWS XRS WebServicesTests</stat>
<stat pass="0" fail="1" id="s1-s1-s1" name="ValidateAWSXRSDeviceWebServices">Tests.AWS XRS WebServicesTests.ValidateAWSXRSDeviceWebServices</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
