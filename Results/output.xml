<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.0 on win32)" generated="20200102 09:48:26.732" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests">
<suite id="s1-s1" name="AWS XRS WebServicesTests" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests">
<suite id="s1-s1-s1" name="ValidateAWSXRSDeviceWebServices" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\01__ValidateAWSXRSDeviceWebServices.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Create AWS XRS Web Services Session</arg>
<arg>AND</arg>
<arg>Test Data Setup For XRS AWS Device Web Service Test Suite</arg>
</arguments>
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService">
<doc>Create a session with aws xrs web services</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.950" endtime="20200102 09:48:26.950"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.949" endtime="20200102 09:48:26.950"></status>
</kw>
<kw name="Test Data Setup For XRS AWS Device Web Service Test Suite">
<doc>Keyword for setting up suite variables for AWS Device Web Service Tests.</doc>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>CarrierDisplayName=${XRS_WEB_SERVICES_TEST_DEVICE_1.CarrierDisplayName}</arg>
<arg>Description=${XRS_WEB_SERVICES_TEST_DEVICE_1.Description}</arg>
<arg>DeviceType=${XRS_WEB_SERVICES_TEST_DEVICE_1.DeviceType}</arg>
<arg>FixedDisplay=${XRS_WEB_SERVICES_TEST_DEVICE_1.FixedDisplay}</arg>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>PhoneNumber=${XRS_WEB_SERVICES_TEST_DEVICE_1.PhoneNumber}</arg>
<arg>SendInstallLink=${XRS_WEB_SERVICES_TEST_DEVICE_1.SendInstallLink}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_DEVICE_1.Status}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_DEVICE_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.950" endtime="20200102 09:48:26.950"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_DEVICE_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_DEVICE_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.950" endtime="20200102 09:48:26.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_DEVICE_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.951" endtime="20200102 09:48:26.951"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>CarrierDisplayName=${XRS_WEB_SERVICES_TEST_DEVICE_1.CarrierDisplayName}</arg>
<arg>Description=This has changed.</arg>
<arg>DeviceType=${XRS_WEB_SERVICES_TEST_DEVICE_1.DeviceType}</arg>
<arg>FixedDisplay=${XRS_WEB_SERVICES_TEST_DEVICE_1.FixedDisplay}</arg>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>PhoneNumber=${XRS_WEB_SERVICES_TEST_DEVICE_1.PhoneNumber}</arg>
<arg>SendInstallLink=${XRS_WEB_SERVICES_TEST_DEVICE_1.SendInstallLink}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_DEVICE_1.Status}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_DEVICE_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.951" endtime="20200102 09:48:26.951"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_DEVICE_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_DEVICE_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.951" endtime="20200102 09:48:26.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_DEVICE_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.951" endtime="20200102 09:48:26.951"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.950" endtime="20200102 09:48:26.951"></status>
</kw>
<status status="NOT_RUN" starttime="20200102 09:48:26.949" endtime="20200102 09:48:26.951"></status>
</kw>
<test id="s1-s1-s1-t1" name="Validate AWS XRS Get Device REST Web Services Returns 400 Error">
<kw name="Get Device By Phone Number" library="Device">
<doc>Get device information for a particular device using the phone number</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_DEVICE_1.PhoneNumber}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_DEVICE_BY_NUMBER}/${phone_number}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.952" endtime="20200102 09:48:26.952"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.952" endtime="20200102 09:48:26.953"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.952" endtime="20200102 09:48:26.953"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>400</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.953" endtime="20200102 09:48:26.953"></status>
</kw>
<doc>Verifies that a device with a specific number does not exist</doc>
<tags>
<tag>awsxrsdevicerestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:26.951" endtime="20200102 09:48:26.954" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Validate AWS XRS Post Device REST Web Services Returns Code 201">
<kw name="Post Devices" library="Device">
<doc>Calls the Post Method on Devices.
Accepts a list of json objects
Json field definitions:
BelongsToResourceGroups
Indicates the set of ResourceGroupIDs to which the device belongs.
If a resource group is not provided in a Post call,
the new Device is to be placed in the default resource group for the organization to which the new Device is being added.
BluetoothAddress
Read only field indicating the Bluetooth address of the device.
For Windows Mobile devices and devices using Android 5.0 or earlier, this field displays the device's unique Bluetooth address.
For devices using Android 6.0 or later, this field displays a static value of "02:00:00:00:00:00."
CarrierDisplayName
The name of the Carrier.
CompanyName
A read only field that indicates the date and time the device was created.
CreateDate
A read only field that indicates the date and time the device was created.
Description
A description of the device.
DeviceType
Indicates the manufacturer and model of the device.
FixedDisplay
Indicates if this device will always be associated to a particular vehicle.
If set to true this will change the mobile behavior such that it remembers the last vehicle it was associated to.
IsChanged
A read only field indicating if there were any changes to the device since the value in the AsOfDateTime query parameter.
LastCommunication
A read only field indicating the date and time the device last communicated with the host.
LastDriverID
A read only field indicating the ID of the last driver which logged into the device.
LastDriverName
A read only field indicating the name of the last driver which logged into the device.
LastVehicleID
A read only field indicating the ID of the last vehicle to which the device was associated via Bluetooth.
ModifiedBy
A read only field indicating the ID of the last person to modify the driver record.
From AC: CreateDate, ModifiedDate and ModifiedBy data fields will be initialized by system.
ModifiedDate
A read only field indicating the date and time the device was last modified.
OrganizationID
The user-defined ID of the organization.
OrganizationName
A read-only field containing the name of the organization to which the device is assigned.
PhoneNumber
The 10 digit phone number of the device
SendInstallLink
Indicates if an installation link will be sent to the device.
Status
Identifies if a device is active or inactive in Omnitracs XRS. The value of this field must be Active or Inactive.
StoreGNISFileOnMobile
A read only field indicating whether the GNIS file will be stored on the mobile.
UserDefinedField1
User-defined field #1
UserDefinedField2
User-defined field #2
UserDefinedField3
User-defined field #3
UserDefinedField4
User-defined field #4
UserDefinedField5
User-defined field #5</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_DEVICE_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DEVICES}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.957" endtime="20200102 09:48:26.957"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.957" endtime="20200102 09:48:26.958"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.957" endtime="20200102 09:48:26.958"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.958" endtime="20200102 09:48:26.958"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Code]</arg>
<arg>201</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.959" endtime="20200102 09:48:26.959"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.959" endtime="20200102 09:48:26.959"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.959" endtime="20200102 09:48:26.959"></status>
</kw>
<doc>Posts a device and expects a Code value of 201</doc>
<tags>
<tag>awsxrsdevicerestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:26.956" endtime="20200102 09:48:26.960" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Validate AWS XRS Get Device REST Web Services Returns 200 OK">
<kw name="Get Device By Phone Number" library="Device">
<doc>Get device information for a particular device using the phone number</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_DEVICE_1.PhoneNumber}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_DEVICE_BY_NUMBER}/${phone_number}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.962" endtime="20200102 09:48:26.963"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.963" endtime="20200102 09:48:26.963"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.962" endtime="20200102 09:48:26.963"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.964" endtime="20200102 09:48:26.964"></status>
</kw>
<doc>Verifies that a posted device now exists</doc>
<tags>
<tag>awsxrsdevicerestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:26.961" endtime="20200102 09:48:26.964" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Validate AWS XRS Put Device REST Web Services Modifies Description Successfully">
<kw name="Put Devices" library="Device">
<doc>Calls the Put Method on Devices.
Accepts a list of json objects
See Json field definitions in the "Post Devices" Keyword</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_DEVICE_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DEVICES}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.967" endtime="20200102 09:48:26.967"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.967" endtime="20200102 09:48:26.967"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.966" endtime="20200102 09:48:26.967"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.968" endtime="20200102 09:48:26.968"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Device edited successfully.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.969" endtime="20200102 09:48:26.969"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.968" endtime="20200102 09:48:26.969"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.968" endtime="20200102 09:48:26.969"></status>
</kw>
<doc>Posts a device and expects a Code value of 201</doc>
<tags>
<tag>awsxrsdevicerestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:26.966" endtime="20200102 09:48:26.969" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Validate AWS XRS Get Devices REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.971" endtime="20200102 09:48:26.971"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.972" endtime="20200102 09:48:26.972"></status>
</kw>
<kw name="Verify Get Devices With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.973" endtime="20200102 09:48:26.973"></status>
</kw>
<kw name="Get Devices With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Device">
<doc>This Keyword modifies character between the base uri and the parameters
This will get devices that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Devices Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DEVICES}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.973" endtime="20200102 09:48:26.973"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.973" endtime="20200102 09:48:26.974"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.973" endtime="20200102 09:48:26.974"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.974" endtime="20200102 09:48:26.974"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.972" endtime="20200102 09:48:26.974"></status>
</kw>
<kw name="Verify Get Devices Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Get Devices" library="Device">
<doc>Call the Get Method on Devices.
This will get devices that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
IsActive
Filters results to active drivers only.
Valid Values: True False Both
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationID
Limits results to devices in one or more organizations.
PhoneNumber
The following values can be specified:
[No Filter] - Limits results to all device records within the Web Service users' OrganizationID and ResourceGroupID.
10 character phone number - Limits results to the device record within the Web Service users' OrganizationID and ResourceGroupID
Example value: 1234567890
ResourceGroupID
Limits results to devices in one or more resource groups.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DEVICES}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.975" endtime="20200102 09:48:26.975"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.975" endtime="20200102 09:48:26.975"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.975" endtime="20200102 09:48:26.975"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.975" endtime="20200102 09:48:26.976"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.974" endtime="20200102 09:48:26.976"></status>
</kw>
<doc>Get devices with basic parameters</doc>
<tags>
<tag>awsxrsdevicerestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:26.971" endtime="20200102 09:48:26.976" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Validate AWS XRS Get Devices REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Devices Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.979" endtime="20200102 09:48:26.979"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.979" endtime="20200102 09:48:26.979"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DEVICES}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.980" endtime="20200102 09:48:26.980"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.979" endtime="20200102 09:48:26.980"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.980" endtime="20200102 09:48:26.980"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.980" endtime="20200102 09:48:26.980"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.980" endtime="20200102 09:48:26.980"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.978" endtime="20200102 09:48:26.981"></status>
</kw>
<kw name="Verify Get Devices Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.981" endtime="20200102 09:48:26.982"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.982" endtime="20200102 09:48:26.982"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DEVICES}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.982" endtime="20200102 09:48:26.982"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.982" endtime="20200102 09:48:26.982"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.983" endtime="20200102 09:48:26.983"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.983" endtime="20200102 09:48:26.983"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.983" endtime="20200102 09:48:26.983"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.981" endtime="20200102 09:48:26.983"></status>
</kw>
<doc>Get devices with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsdevicerestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:26.978" endtime="20200102 09:48:26.984" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Validate AWS XRS Get Devices REST Web Services For All Devices Returns 200 OK">
<kw name="Get All Devices" library="Device">
<doc>Get attributes for all Devices.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DEVICES}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.986" endtime="20200102 09:48:26.986"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.986" endtime="20200102 09:48:26.987"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.986" endtime="20200102 09:48:26.987"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.987" endtime="20200102 09:48:26.987"></status>
</kw>
<doc>Gets all the Devices</doc>
<tags>
<tag>awsxrsdevicerestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:26.985" endtime="20200102 09:48:26.988" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Validate AWS XRS Delete Device REST Web Services Returns 200 OK">
<kw name="Delete Device By Phone Number" library="Device">
<doc>Delete device information for a particular device using the phone number</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_DEVICE_1.PhoneNumber}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Device}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_DEVICE_BY_NUMBER}/${phone_number}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.991" endtime="20200102 09:48:26.991"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:26.991" endtime="20200102 09:48:26.991"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:26.990" endtime="20200102 09:48:26.991"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:26.992" endtime="20200102 09:48:26.992"></status>
</kw>
<doc>Verifies that created device is deleted</doc>
<tags>
<tag>awsxrsdevicerestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:26.989" endtime="20200102 09:48:26.993" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<status status="NOT_RUN" starttime="20200102 09:48:26.996" endtime="20200102 09:48:26.996"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Device Entity Management Web Services</doc>
<status status="PASS" starttime="20200102 09:48:26.762" endtime="20200102 09:48:26.996"></status>
</suite>
<suite id="s1-s1-s2" name="Validate AWSXRSDriverWebServices" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\02__Validate AWSXRSDriverWebServices.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Create AWS XRS Web Services Session</arg>
<arg>AND</arg>
<arg>Test Data Setup For XRS AWS Driver Web Service Test Suite</arg>
</arguments>
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService">
<doc>Create a session with aws xrs web services</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.079" endtime="20200102 09:48:27.079"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.079" endtime="20200102 09:48:27.079"></status>
</kw>
<kw name="Test Data Setup For XRS AWS Driver Web Service Test Suite">
<doc>Keyword for setting up suite variables for AWS Driver Web Service Tests.</doc>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>CDLNumber=${XRS_WEB_SERVICES_TEST_DRIVER_1.CDLNumber}</arg>
<arg>DriverID=${XRS_WEB_SERVICES_TEST_DRIVER_1.DriverID}</arg>
<arg>DefaultHOSRule=${XRS_WEB_SERVICES_TEST_DRIVER_1.DefaultHOSRule}</arg>
<arg>ELDExempt=${XRS_WEB_SERVICES_TEST_DRIVER_1.ELDExempt}</arg>
<arg>EnableBigDay=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableBigDay}</arg>
<arg>EnableDriverPortal=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableDriverPortal}</arg>
<arg>EnableHOSRule=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableHOSRule}</arg>
<arg>EnablePersonalConveyance=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnablePersonalConveyance}</arg>
<arg>EnableTimeClock=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableTimeClock}</arg>
<arg>EnableYardMove=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableYardMove}</arg>
<arg>FirstName=${XRS_WEB_SERVICES_TEST_DRIVER_1.FirstName}</arg>
<arg>Language=${XRS_WEB_SERVICES_TEST_DRIVER_1.Language}</arg>
<arg>LastName=${XRS_WEB_SERVICES_TEST_DRIVER_1.LastName}</arg>
<arg>LicenseIssuingCountry=${XRS_WEB_SERVICES_TEST_DRIVER_1.LicenseIssuingCountry}</arg>
<arg>LicenseIssuingStateProvince=${XRS_WEB_SERVICES_TEST_DRIVER_1.LicenseIssuingStateProvince}</arg>
<arg>MiddleName=${XRS_WEB_SERVICES_TEST_DRIVER_1.MiddleName}</arg>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>OrganizationSID=${XRS_WEB_SERVICES_TEST_DRIVER_1.OrganizationSID}</arg>
<arg>Password=${XRS_WEB_SERVICES_TEST_DRIVER_1.Password}</arg>
<arg>SendInboundMessageTo=${XRS_WEB_SERVICES_TEST_DRIVER_1.SendInboundMessageTo}</arg>
<arg>SID=${XRS_WEB_SERVICES_TEST_DRIVER_1.SID}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_DRIVER_1.Status}</arg>
<arg>UseHOSOrganizationSettings=${XRS_WEB_SERVICES_TEST_DRIVER_1.UseHOSOrganizationSettings}</arg>
<arg>UserName=${XRS_WEB_SERVICES_TEST_DRIVER_1.UserName}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_DRIVER_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.080" endtime="20200102 09:48:27.080"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_DRIVER_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_DRIVER_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.080" endtime="20200102 09:48:27.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_DRIVER_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.080" endtime="20200102 09:48:27.080"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>DriverID=${XRS_WEB_SERVICES_TEST_DRIVER_1.DriverID}</arg>
<arg>DefaultHOSRule=${XRS_WEB_SERVICES_TEST_DRIVER_1.DefaultHOSRule}</arg>
<arg>ELDExempt=${XRS_WEB_SERVICES_TEST_DRIVER_1.ELDExempt}</arg>
<arg>EnableBigDay=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableBigDay}</arg>
<arg>EnableDriverPortal=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableDriverPortal}</arg>
<arg>EnableHOSRule=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableHOSRule}</arg>
<arg>EnablePersonalConveyance=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnablePersonalConveyance}</arg>
<arg>EnableTimeClock=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableTimeClock}</arg>
<arg>EnableYardMove=${XRS_WEB_SERVICES_TEST_DRIVER_1.EnableYardMove}</arg>
<arg>FirstName=${XRS_WEB_SERVICES_TEST_DRIVER_1.FirstName}</arg>
<arg>Language=${XRS_WEB_SERVICES_TEST_DRIVER_1.Language}</arg>
<arg>LastName=${XRS_WEB_SERVICES_TEST_DRIVER_1.LastName}</arg>
<arg>LicenseIssuingCountry=${XRS_WEB_SERVICES_TEST_DRIVER_1.LicenseIssuingCountry}</arg>
<arg>LicenseIssuingStateProvince=${XRS_WEB_SERVICES_TEST_DRIVER_1.LicenseIssuingStateProvince}</arg>
<arg>MiddleName=This has been changed.</arg>
<arg>OrganizationSID=${XRS_WEB_SERVICES_TEST_DRIVER_1.OrganizationSID}</arg>
<arg>SendInboundMessageTo=${XRS_WEB_SERVICES_TEST_DRIVER_1.SendInboundMessageTo}</arg>
<arg>SID=${XRS_WEB_SERVICES_TEST_DRIVER_1.SID}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_DRIVER_1.Status}</arg>
<arg>UseHOSOrganizationSettings=${XRS_WEB_SERVICES_TEST_DRIVER_1.UseHOSOrganizationSettings}</arg>
<arg>UserName=${XRS_WEB_SERVICES_TEST_DRIVER_1.UserName}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_DRIVER_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.080" endtime="20200102 09:48:27.081"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_DRIVER_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_DRIVER_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.081" endtime="20200102 09:48:27.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_DRIVER_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.081" endtime="20200102 09:48:27.081"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.079" endtime="20200102 09:48:27.081"></status>
</kw>
<status status="NOT_RUN" starttime="20200102 09:48:27.078" endtime="20200102 09:48:27.081"></status>
</kw>
<test id="s1-s1-s2-t1" name="Validate AWS XRS Get Driver REST Web Services Returns 400 Error">
<kw name="Get Driver By ID" library="Driver">
<doc>Get attributes for a specific driver by specifying a DriverSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_DRIVER_1.DriverID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_DRIVER_BY_DRIVERID}/${driver_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.082" endtime="20200102 09:48:27.082"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.083" endtime="20200102 09:48:27.083"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.082" endtime="20200102 09:48:27.083"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>400</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.083" endtime="20200102 09:48:27.083"></status>
</kw>
<doc>Verifies that a driver with a specific number does not exist</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.081" endtime="20200102 09:48:27.084" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Validate AWS XRS Post Driver REST Web Services Returns Code 201">
<kw name="Post Drivers" library="Driver">
<doc>Calls the Post Method for Drivers.
Accepts a list of json objects
Json field definitions:
CDLExpiration
The date at which the current CDL expires.
CDLNumber
The Commercial Driver's License held by the driver.
This field supports a maximum of 20 characters.
CellPhone
The Mobile phone number of the driver.
NOTE: This phone number is not required to be the same as the phone number of the device being used for Omnitracs XRS.
CompanyName
The name of the Company.
CompanySID
The Omnitracs XRS unique System ID of the company.
This value is generated automatically by Omnitracs XRS and can be retrieved using the GET method.
CreateDate
The date and time the account was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
DefaultHOSRule
The DefaultHOSRule value of the appropriate HOS rule set.
DriverID
The user-defined driver ID.
ELDExempt
This field indicates if the driver is exempt from the ELD mandate.
This field is required for POST and PUT calls.
ELDExemptExplanation
If the ELDExempt field is set to True, this field is required and must contain an explanation as to why this driver is exempt from the ELD mandate.
This field is required if &lt;ELDExempt&gt; is True.
EnableBigDay
Indicates if the driver is allowed to declare a 16-Hour Big Day exemption
EnableDriverPortal
Indicates if the driver is allowed to login to the driver portal
EnableHOSRule</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_DRIVER_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_DRIVERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.087" endtime="20200102 09:48:27.087"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.087" endtime="20200102 09:48:27.087"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.086" endtime="20200102 09:48:27.087"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.088" endtime="20200102 09:48:27.088"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Code]</arg>
<arg>201</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.088" endtime="20200102 09:48:27.088"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.088" endtime="20200102 09:48:27.088"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.088" endtime="20200102 09:48:27.088"></status>
</kw>
<doc>Posts a driver and expects a Code value of 201</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.085" endtime="20200102 09:48:27.088" critical="yes"></status>
</test>
<test id="s1-s1-s2-t3" name="Validate AWS XRS Get Driver REST Web Services Returns 200 OK">
<kw name="Get Driver By ID" library="Driver">
<doc>Get attributes for a specific driver by specifying a DriverSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_DRIVER_1.DriverID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_DRIVER_BY_DRIVERID}/${driver_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.091" endtime="20200102 09:48:27.091"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.091" endtime="20200102 09:48:27.091"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.091" endtime="20200102 09:48:27.091"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.092" endtime="20200102 09:48:27.092"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.092" endtime="20200102 09:48:27.092"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${json_response}[SID]</arg>
</arguments>
<assign>
<var>${XRS_WEB_SERVICES_TEST_DRIVER_1_SID}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.093" endtime="20200102 09:48:27.093"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_DRIVER_1_SID}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.093" endtime="20200102 09:48:27.093"></status>
</kw>
<doc>Verifies that a posted driver now exists</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.090" endtime="20200102 09:48:27.093" critical="yes"></status>
</test>
<test id="s1-s1-s2-t4" name="Validate AWS XRS Put Driver REST Web Services Modifies Driver Successfully">
<kw name="Put Drivers" library="Driver">
<doc>Calls the Put Method for Drivers.
Accepts a list of json objects
Json field definitions:
CDLExpiration
The date at which the current CDL expires.
CDLNumber
The Commercial Driver's License held by the driver.
This field supports a maximum of 20 characters.
Omnitracs XRS 4.60 will prevent the creation of more than one driver record with the same driver’s license number &lt;CDLNumber&gt;.
To support this change, the Driver Web Service will return an error message if a PUT or
POST call is made that attempts to assign a driver’s license number &lt;CDLNumber&gt; to a driver
when that same number is already assigned to a different driver.
CellPhone
The Mobile phone number of the driver.
NOTE: This phone number is not required to be the same as the phone number of the device being used for Omnitracs XRS.
CompanyName
The name of the Company.
CompanySID
The Omnitracs XRS unique System ID of the company.
This value is generated automatically by Omnitracs XRS and can be retrieved using the GET method.
CreateDate
The date and time the account was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
DriverID
The user-defined driver ID.
ELDExempt
This field indicates if the driver is exempt from the ELD mandate.
This field is required for POST and PUT calls.
ELDExemptExplanation
If the ELDExempt field is set to True, this field is required and must contain an explanation as to why this driver is exempt from the ELD mandate.
This field is required if &lt;ELDExempt&gt; is True.
EnableBigDay
Indicates if the driver is allowed to declare a 16-Hour Big Day exemption
EnableDriverPortal
Indicates if the driver is allowed to login to the driver portal
EnableHOSRule</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_DRIVER_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_DRIVERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.097" endtime="20200102 09:48:27.097"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.097" endtime="20200102 09:48:27.097"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.096" endtime="20200102 09:48:27.097"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.098" endtime="20200102 09:48:27.098"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Driver edited successfully.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.098" endtime="20200102 09:48:27.098"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.098" endtime="20200102 09:48:27.098"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.098" endtime="20200102 09:48:27.098"></status>
</kw>
<doc>Posts a driver and expects a Code value of 201</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.094" endtime="20200102 09:48:27.099" critical="yes"></status>
</test>
<test id="s1-s1-s2-t5" name="Validate AWS XRS Get Drivers REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.101" endtime="20200102 09:48:27.101"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.101" endtime="20200102 09:48:27.101"></status>
</kw>
<kw name="Verify Get Drivers With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.102" endtime="20200102 09:48:27.102"></status>
</kw>
<kw name="Get Drivers With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Driver">
<doc>This Keyword modifies character between the base uri and the parameters
This will get devices that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Devices Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_DRIVERS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.102" endtime="20200102 09:48:27.102"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.102" endtime="20200102 09:48:27.103"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.102" endtime="20200102 09:48:27.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.103" endtime="20200102 09:48:27.103"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.101" endtime="20200102 09:48:27.103"></status>
</kw>
<kw name="Verify Get Drivers Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Get Drivers" library="Driver">
<doc>Call the Get Method on Drivers.
This will get devices that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
IsActive
Filters results to active drivers only.
Valid Values: True False Both
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationID
Limits results to devices in one or more organizations.
ResourceGroupID
Limits results to devices in one or more resource groups.
ResourceGroupSID
Limits results to devices in one or more resource groups.
ResourceGroupSID
Limits results to drivers in one or more resource groups.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_DRIVERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.104" endtime="20200102 09:48:27.104"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.104" endtime="20200102 09:48:27.104"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.104" endtime="20200102 09:48:27.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.104" endtime="20200102 09:48:27.104"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.103" endtime="20200102 09:48:27.104"></status>
</kw>
<doc>Get drivers with basic parameters</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.100" endtime="20200102 09:48:27.105" critical="yes"></status>
</test>
<test id="s1-s1-s2-t6" name="Validate AWS XRS Get Drivers REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Drivers Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.108" endtime="20200102 09:48:27.108"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.109" endtime="20200102 09:48:27.109"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_DRIVERS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.109" endtime="20200102 09:48:27.109"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.109" endtime="20200102 09:48:27.110"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.110" endtime="20200102 09:48:27.110"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.110" endtime="20200102 09:48:27.110"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.110" endtime="20200102 09:48:27.111"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.108" endtime="20200102 09:48:27.111"></status>
</kw>
<kw name="Verify Get Drivers Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.112" endtime="20200102 09:48:27.112"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.112" endtime="20200102 09:48:27.112"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_DRIVERS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.112" endtime="20200102 09:48:27.113"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.112" endtime="20200102 09:48:27.113"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.113" endtime="20200102 09:48:27.113"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.113" endtime="20200102 09:48:27.113"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.113" endtime="20200102 09:48:27.114"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.111" endtime="20200102 09:48:27.115"></status>
</kw>
<doc>Get drivers with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.106" endtime="20200102 09:48:27.116" critical="yes"></status>
</test>
<test id="s1-s1-s2-t7" name="Validate AWS XRS Delete Driver REST Web Services Returns 200 OK">
<kw name="Delete Driver By ID" library="Driver">
<doc>Delete a single driver record in Omnitracs XRS by specifying the DriverSID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_DRIVER_1.DriverID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_DRIVER_BY_DRIVERID}/${driver_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.119" endtime="20200102 09:48:27.119"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.120" endtime="20200102 09:48:27.120"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.119" endtime="20200102 09:48:27.120"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.120" endtime="20200102 09:48:27.120"></status>
</kw>
<doc>Verifies that created driver is deleted</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.118" endtime="20200102 09:48:27.121" critical="yes"></status>
</test>
<test id="s1-s1-s2-t8" name="Validate AWS XRS Get Drivers REST Web Services For All Drivers Returns 200 OK">
<kw name="Get All Drivers" library="Driver">
<doc>Get attributes for all drivers.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_DRIVERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.124" endtime="20200102 09:48:27.124"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.124" endtime="20200102 09:48:27.124"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.123" endtime="20200102 09:48:27.124"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.124" endtime="20200102 09:48:27.124"></status>
</kw>
<doc>Gets all the drivers</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.122" endtime="20200102 09:48:27.125" critical="yes"></status>
</test>
<test id="s1-s1-s2-t9" name="Validate AWS XRS Delete Drivers REST Web Services Returns Error Message">
<kw name="Delete Drivers By IDs" library="Driver">
<doc>Delete a single driver record in Omnitracs XRS by specifying the DriverSID.
The Delete method supports the deletion of one driver record per call only.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_DRIVER_1_SID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Driver}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_DRIVERS}/${drivers_sid}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.127" endtime="20200102 09:48:27.127"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.128" endtime="20200102 09:48:27.128"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.127" endtime="20200102 09:48:27.128"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Driver ${XRS_WEB_SERVICES_TEST_DRIVER_1_SID} doesn't exist.</arg>
</arguments>
<assign>
<var>${expected_error_message}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.129" endtime="20200102 09:48:27.129"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.129" endtime="20200102 09:48:27.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_response}[ErrorMessage]</arg>
<arg>${expected_error_message}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.130" endtime="20200102 09:48:27.131"></status>
</kw>
<doc>Attempts to delete a previously deleted driver.</doc>
<tags>
<tag>awsxrsdriverrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.126" endtime="20200102 09:48:27.131" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<status status="NOT_RUN" starttime="20200102 09:48:27.133" endtime="20200102 09:48:27.133"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Driver Entity Management Web Services</doc>
<status status="PASS" starttime="20200102 09:48:27.000" endtime="20200102 09:48:27.133"></status>
</suite>
<suite id="s1-s1-s3" name="ValidateAWSXRSOrganizationWebService" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\03__ValidateAWSXRSOrganizationWebService.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Create AWS XRS Web Services Session</arg>
<arg>AND</arg>
<arg>Test Data Setup For XRS AWS Organization Web Service Test Suite</arg>
</arguments>
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService">
<doc>Create a session with aws xrs web services</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.606" endtime="20200102 09:48:27.607"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.606" endtime="20200102 09:48:27.607"></status>
</kw>
<kw name="Test Data Setup For XRS AWS Organization Web Service Test Suite">
<doc>Keyword for setting up a random organization for the organization test suite</doc>
<kw name="Word" library="FakerLibrary">
<doc>:returns: A random word, eg: 'lorem'</doc>
<assign>
<var>${FAKE_WORD1}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.607" endtime="20200102 09:48:27.607"></status>
</kw>
<kw name="Word" library="FakerLibrary">
<doc>:returns: A random word, eg: 'lorem'</doc>
<assign>
<var>${FAKE_WORD2}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.607" endtime="20200102 09:48:27.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_WORD1}${FAKE_WORD2}</arg>
</arguments>
<assign>
<var>${FAKE_TEST_ORGANIZATION_ID_1}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.607" endtime="20200102 09:48:27.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_WORD1}${SPACE}${FAKE_WORD2}</arg>
</arguments>
<assign>
<var>${FAKE_TEST_ORGANIZATION_NAME_1}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.607" endtime="20200102 09:48:27.608"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>CarrierName=${XRS_GENERAL_INFORMATION.Address.Carrier_Name}</arg>
<arg>Country=${XRS_GENERAL_INFORMATION.Address.Country}</arg>
<arg>DotNumber=${XRS_GENERAL_INFORMATION.Address.DOT_Number}</arg>
<arg>Language=${XRS_GENERAL_INFORMATION.Localization.Language}</arg>
<arg>OrganizationId=${FAKE_TEST_ORGANIZATION_ID_1}</arg>
<arg>OrganizationName=${FAKE_TEST_ORGANIZATION_NAME_1}</arg>
<arg>ParentOrganizationId=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>ParentOrganizationSid=${XRS_GENERAL_INFORMATION.Company.ParentOrganizationSid}</arg>
<arg>TimeZone=CST</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.608" endtime="20200102 09:48:27.608"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.608" endtime="20200102 09:48:27.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.608" endtime="20200102 09:48:27.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.608" endtime="20200102 09:48:27.608"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Language=${XRS_GENERAL_INFORMATION.Localization.Language}</arg>
<arg>OrganizationId=${FAKE_TEST_ORGANIZATION_ID_1}</arg>
<arg>OrganizationName=${FAKE_TEST_ORGANIZATION_NAME_1}Modified</arg>
<arg>ParentOrganizationId=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.608" endtime="20200102 09:48:27.608"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.608" endtime="20200102 09:48:27.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.609" endtime="20200102 09:48:27.609"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.607" endtime="20200102 09:48:27.609"></status>
</kw>
<status status="NOT_RUN" starttime="20200102 09:48:27.606" endtime="20200102 09:48:27.609"></status>
</kw>
<test id="s1-s1-s3-t1" name="Validate AWS XRS Get Organization By SID REST Web Services Returns 200 OK With Parent Organization SID">
<kw name="Get Organization By OrganizationSID" library="Organization">
<doc>Get Organization information for a particular Organization using the OrganizationSID</doc>
<arguments>
<arg>${XRS_GENERAL_INFORMATION.Company.ParentOrganizationSid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_ORGANIZATION}/${organization_sid}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.610" endtime="20200102 09:48:27.610"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.610" endtime="20200102 09:48:27.610"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.610" endtime="20200102 09:48:27.610"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.611" endtime="20200102 09:48:27.611"></status>
</kw>
<doc>Verifies that a Organization with a specific number does not exist</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.609" endtime="20200102 09:48:27.611" critical="yes"></status>
</test>
<test id="s1-s1-s3-t2" name="Validate AWS XRS Post Organization REST Web Services Returns Caption &quot;Request succeeded.&quot;">
<kw name="Post Organizations" library="Organization">
<doc>Calls the Post Method on Organizations.
Accepts a list of json objects
Json field definitions:
Address1
The Address of the organization.
Defaults to Parent Organization's value.
Address2
The Address of the organization.
Defaults to Parent Organization's value.
AllowSharedResourceGroup
An advanced feature, users can view and report on shared resources across organizations.
See Resource Group Field Definitions for more information.
AllowSubscriptionChange
When set to True, Omnitracs XRS will track any changes that affect subscription levels
(adding subscribers, or moving vehicles or drivers between organizations).
The customer will be billed based on the changes.
When set to False, customers must contact Omnitracs XRS or their sales channel for subscription changes.
BillingOrganizationId
The ID of the Billing Organization.
BillingOrganizationSid
The SID of the Billing Organization.
This value is generated automatically by Omnitracs XRS and can be retrieved using the GET method.
CarrierName
DOT-specific carrier name.
City
The name of the city where the organization is based.
Country
The name of the country where the organization is based.
CreateDate
The date and time the account was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
DotNumber
Company's US DOT Number.
FleetViewRefresh
A read only field indicating the ID of the last driver which logged into the Organization.
Language
A read only field indicating the name of the last driver which logged into the Organization.
ModifiedBy
The SID of the last Omnitracs XRS User that made modifications to the record.
ModifiedDate
The Date and Time the site record was last modified.
OrganizationID
The user-defined ID of the organization.
OrganizationName
A read-only field containing the name of the organization to which the Organization is assigned.
OrganizationSid
The internal system generated ID (primary key) of the Organization in Omnitracs XRS.
This value can be retrieved using the GET method.
ParentOrganizationID
The internal system generated ID (primary key) of the Parent Organization in Omnitracs XRS.
Note: This field is required if a ParentOrganizationSID value is not specified.
ParentOrganizationSid
The ID of the parent organization.
Note: This field is required if a Parent OrganizationID value is not specified.
PostalCode
The 5 to 9 digit zip code for the organization.
State
The state, province or territory for the organization.
Status
Indicates whether the Organization record is active within Omnitracs XRS.
TimeZone
Identifies the Time Zone the Organization is located in.
UnitOfMeasure
The unit of measure selected for this organization. This applies to all performance and compliance based reporting.
Standard (MPG)
Metric (KM/L)</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.615" endtime="20200102 09:48:27.615"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.615" endtime="20200102 09:48:27.616"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.615" endtime="20200102 09:48:27.616"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.617" endtime="20200102 09:48:27.617"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Caption]</arg>
<arg>Request succeeded.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.618" endtime="20200102 09:48:27.618"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${r}[SID]</arg>
</arguments>
<assign>
<var>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.618" endtime="20200102 09:48:27.618"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.617" endtime="20200102 09:48:27.618"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.617" endtime="20200102 09:48:27.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.619" endtime="20200102 09:48:27.619"></status>
</kw>
<doc>Posts a Organization and expects a Caption value "Request succeeded."</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.613" endtime="20200102 09:48:27.619" critical="yes"></status>
</test>
<test id="s1-s1-s3-t3" name="Validate AWS XRS Get Organization By SID REST Web Services Returns 200 OK With New Organization">
<kw name="Get Organization By OrganizationSID" library="Organization">
<doc>Get Organization information for a particular Organization using the OrganizationSID</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_ORGANIZATION}/${organization_sid}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.622" endtime="20200102 09:48:27.622"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.622" endtime="20200102 09:48:27.622"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.622" endtime="20200102 09:48:27.622"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.623" endtime="20200102 09:48:27.623"></status>
</kw>
<doc>Verifies that a posted Organization now exists</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.621" endtime="20200102 09:48:27.624" critical="yes"></status>
</test>
<test id="s1-s1-s3-t4" name="Validate AWS XRS Put Organization REST Web Services Modifies Description Successfully">
<kw name="Put Organizations" library="Organization">
<doc>Calls the Put Method on Organizations.
Accepts a list of json objects
See Json field definitions in the "Post Organizations" Keyword</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_ORGANIZATION_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_PUT_ORGANIZATIONS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.627" endtime="20200102 09:48:27.627"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.627" endtime="20200102 09:48:27.627"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.626" endtime="20200102 09:48:27.627"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.628" endtime="20200102 09:48:27.628"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Organization Edited Successfully.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.628" endtime="20200102 09:48:27.629"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.628" endtime="20200102 09:48:27.629"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.628" endtime="20200102 09:48:27.629"></status>
</kw>
<doc>Posts a Organization and expects a Code value of 201</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.625" endtime="20200102 09:48:27.629" critical="yes"></status>
</test>
<test id="s1-s1-s3-t5" name="Validate AWS XRS Get Organizations By Parameters REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.632" endtime="20200102 09:48:27.632"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.632" endtime="20200102 09:48:27.632"></status>
</kw>
<kw name="Verify Get Organizations With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.633" endtime="20200102 09:48:27.633"></status>
</kw>
<kw name="Get Organizations With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Organization">
<doc>This Keyword modifies character between the base uri and the parameters
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Organizations Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.634" endtime="20200102 09:48:27.634"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.634" endtime="20200102 09:48:27.634"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.633" endtime="20200102 09:48:27.634"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.634" endtime="20200102 09:48:27.634"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.633" endtime="20200102 09:48:27.634"></status>
</kw>
<kw name="Verify Get Organizations Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Get Organizations" library="Organization">
<doc>Call the Get Method on Organizations.
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
The date and time are associated with the last modified date and time of the record.
System Limit: 30 days
Status
Filters results to active organizations only.
Valid Values: True False Both
Active (same as True)
Inactive (same as False)
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationId
Limits results to organizations that fall under the specified organization.
ResourceGroupId
Limits results to Organizations in one or more resource groups.
OrganizationSid
Limits results to organizations that fall under the specified organization.
ResourceGroupSid
Limits results to Organizations in one or more resource groups.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.635" endtime="20200102 09:48:27.635"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.635" endtime="20200102 09:48:27.635"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.635" endtime="20200102 09:48:27.636"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.636" endtime="20200102 09:48:27.636"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.635" endtime="20200102 09:48:27.636"></status>
</kw>
<doc>Get Organizations with basic parameters</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.631" endtime="20200102 09:48:27.636" critical="yes"></status>
</test>
<test id="s1-s1-s3-t6" name="Validate AWS XRS Get Organizations By Parameters REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Organizations Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.638" endtime="20200102 09:48:27.639"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.639" endtime="20200102 09:48:27.639"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.640" endtime="20200102 09:48:27.640"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.639" endtime="20200102 09:48:27.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationSid=${params.OrganizationSid}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.640" endtime="20200102 09:48:27.641"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.641" endtime="20200102 09:48:27.642"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.642" endtime="20200102 09:48:27.642"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.638" endtime="20200102 09:48:27.642"></status>
</kw>
<kw name="Verify Get Organizations Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.643" endtime="20200102 09:48:27.644"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.644" endtime="20200102 09:48:27.644"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.644" endtime="20200102 09:48:27.644"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.644" endtime="20200102 09:48:27.644"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationSid=${params.OrganizationSid}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.644" endtime="20200102 09:48:27.644"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.645" endtime="20200102 09:48:27.645"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.645" endtime="20200102 09:48:27.645"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.643" endtime="20200102 09:48:27.645"></status>
</kw>
<doc>Get Organizations with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.637" endtime="20200102 09:48:27.646" critical="yes"></status>
</test>
<test id="s1-s1-s3-t7" name="Validate AWS XRS Get Organizations By ID REST Web Services Returns 200 OK">
<kw name="Get Organizations By ID" library="Organization">
<doc>Get organizations by ID.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}/${organization_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.652" endtime="20200102 09:48:27.652"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.652" endtime="20200102 09:48:27.652"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.651" endtime="20200102 09:48:27.652"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.653" endtime="20200102 09:48:27.654"></status>
</kw>
<doc>Get organization by ID returns 200 OK</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.648" endtime="20200102 09:48:27.654" critical="yes"></status>
</test>
<test id="s1-s1-s3-t8" name="Validate AWS XRS Get Organizations REST Web Services For All Organizations Returns 200 OK">
<kw name="Get All Organizations" library="Organization">
<doc>Get attributes for all organizations.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.657" endtime="20200102 09:48:27.658"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.658" endtime="20200102 09:48:27.658"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.657" endtime="20200102 09:48:27.658"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.659" endtime="20200102 09:48:27.659"></status>
</kw>
<doc>Gets all the Organizations</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.656" endtime="20200102 09:48:27.659" critical="yes"></status>
</test>
<test id="s1-s1-s3-t9" name="Validate AWS XRS Get Organizations Performance (settings) Data By SID REST Web Services Returns 200 OK">
<kw name="Get Organizations Performance Data By ID" library="Organization">
<doc>Get performance (settings) data for all organizations by ID</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}/${organization_id}/performance</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.662" endtime="20200102 09:48:27.662"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.662" endtime="20200102 09:48:27.663"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.662" endtime="20200102 09:48:27.663"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.663" endtime="20200102 09:48:27.663"></status>
</kw>
<doc>Get organization performance endpoint by ID returns 200 OK</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.661" endtime="20200102 09:48:27.665" critical="yes"></status>
</test>
<test id="s1-s1-s3-t10" name="Validate AWS XRS Put Organization Performance (settings) Data By SID REST Web Services Update Return 200 OK">
<kw name="Load JSON From File" library="JSONLibrary">
<doc>Load JSON from file.</doc>
<arguments>
<arg>C:\\Users\\kstine\\git\\aws-api-gateway-tests\\Tests\\AWS_XRS_WebServicesTests/organization_performance_minimum_setting.json</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.668" endtime="20200102 09:48:27.668"></status>
</kw>
<kw name="Put Organizations Performance Data By ID" library="Organization">
<doc>Calls the Put Method on Organizations performance (settings)
Requires two variables: OrganizationId and json file data</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}</arg>
<arg>${json_data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_ORGANIZATIONS}/${organization_id}/performance</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.669" endtime="20200102 09:48:27.669"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${json_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.669" endtime="20200102 09:48:27.669"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.668" endtime="20200102 09:48:27.669"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.670" endtime="20200102 09:48:27.670"></status>
</kw>
<doc>Sends an performance settings update request from a json file, expects a 200 response</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.667" endtime="20200102 09:48:27.670" critical="yes"></status>
</test>
<test id="s1-s1-s3-t11" name="Validate AWS XRS Get Organizations Performance (settings) Data By Parameters REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.672" endtime="20200102 09:48:27.673"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationId=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_1_DICT.OrganizationId}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.673" endtime="20200102 09:48:27.673"></status>
</kw>
<kw name="Verify Get Organizations Performance (settings) Data With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.675" endtime="20200102 09:48:27.675"></status>
</kw>
<kw name="Get Organizations Performance Data With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Organization">
<doc>This Keyword modifies character between the base uri and the parameters
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Organizations Performance Data Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_PUT_ORGANIZATIONS_PERFORMANCE}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.675" endtime="20200102 09:48:27.675"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.675" endtime="20200102 09:48:27.676"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.675" endtime="20200102 09:48:27.676"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.676" endtime="20200102 09:48:27.676"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.674" endtime="20200102 09:48:27.676"></status>
</kw>
<kw name="Verify Get Organizations Performance (settings) Data Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Get Organizations Performance Data" library="Organization">
<doc>Call the Get Method on Organizations Performance (settings) data.
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
The date and time are associated with the last modified date and time of the record.
System Limit: 30 days
Status
Filters results to active organizations only.
Valid Values: True False Both
Active (same as True)
Inactive (same as False)
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationId
Limits results to organizations that fall under the specified organization.
ResourceGroupId
Limits results to Organizations in one or more resource groups.
Recurse
No clue what this does.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_PUT_ORGANIZATIONS_PERFORMANCE}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.678" endtime="20200102 09:48:27.678"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.678" endtime="20200102 09:48:27.679"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.678" endtime="20200102 09:48:27.679"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.679" endtime="20200102 09:48:27.679"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.676" endtime="20200102 09:48:27.679"></status>
</kw>
<doc>Get Organizations with basic parameters</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.672" endtime="20200102 09:48:27.680" critical="yes"></status>
</test>
<test id="s1-s1-s3-t12" name="Validate AWS XRS Get Organizations Performance (settings) Data By Parameters REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Organizations Performance (settings) Data Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.684" endtime="20200102 09:48:27.685"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.685" endtime="20200102 09:48:27.685"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_PUT_ORGANIZATIONS_PERFORMANCE}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.685" endtime="20200102 09:48:27.685"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.685" endtime="20200102 09:48:27.685"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationSid=${params.OrganizationSid}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.685" endtime="20200102 09:48:27.685"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.685" endtime="20200102 09:48:27.686"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.686" endtime="20200102 09:48:27.686"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.684" endtime="20200102 09:48:27.686"></status>
</kw>
<kw name="Verify Get Organizations Performance (settings) Data Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.687" endtime="20200102 09:48:27.687"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationSid=${XRS_AWS_WEBSERVICE_POST_TEST_ORGANIZATION_SID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.687" endtime="20200102 09:48:27.687"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Organization}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_PUT_ORGANIZATIONS_PERFORMANCE}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.688" endtime="20200102 09:48:27.688"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.688" endtime="20200102 09:48:27.688"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationSid=${params.OrganizationSid}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.689" endtime="20200102 09:48:27.689"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.689" endtime="20200102 09:48:27.689"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.689" endtime="20200102 09:48:27.689"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.686" endtime="20200102 09:48:27.689"></status>
</kw>
<doc>Get Organizations with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsorganizationrestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.682" endtime="20200102 09:48:27.690" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<status status="NOT_RUN" starttime="20200102 09:48:27.692" endtime="20200102 09:48:27.692"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Organization Entity Management Web Services</doc>
<status status="PASS" starttime="20200102 09:48:27.136" endtime="20200102 09:48:27.692"></status>
</suite>
<suite id="s1-s1-s4" name="ValidateAWSXRSResourceGroupWebService" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\04__ValidateAWSXRSResourceGroupWebService.robot">
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService" type="setup">
<doc>Create a session with aws xrs web services</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.771" endtime="20200102 09:48:27.771"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.771" endtime="20200102 09:48:27.771"></status>
</kw>
<test id="s1-s1-s4-t1" name="Validate AWS XRS Get Resource Groups REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.772" endtime="20200102 09:48:27.772"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.773" endtime="20200102 09:48:27.773"></status>
</kw>
<kw name="Verify Get Resource Groups With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.774" endtime="20200102 09:48:27.774"></status>
</kw>
<kw name="Get Resource Groups With URI Ending With ${ending_character} And Parameters &amp;{params}" library="ResourceGroup">
<doc>This Keyword modifies character between the base uri and the parameters
This will get Resource Groups that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Resource Groups Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.774" endtime="20200102 09:48:27.774"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.774" endtime="20200102 09:48:27.775"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.774" endtime="20200102 09:48:27.775"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.775" endtime="20200102 09:48:27.775"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.773" endtime="20200102 09:48:27.775"></status>
</kw>
<kw name="Verify Get Resource Groups Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Get Resource Groups" library="ResourceGroup">
<doc>Call the Get Method on Organizations.
This will get Organizations that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
Status
Filters results to active organizations only.
Valid Values: True False Both
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationId
Limits results to organizations that fall under the specified organization.
ResourceGroupId
Limits results to Organizations in one or more resource groups.
OrganizationSid
Limits results to organizations that fall under the specified organization.
ResourceGroupSid
Limits results to Organizations in one or more resource groups.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.777" endtime="20200102 09:48:27.777"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.777" endtime="20200102 09:48:27.778"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.777" endtime="20200102 09:48:27.778"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.778" endtime="20200102 09:48:27.778"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.776" endtime="20200102 09:48:27.778"></status>
</kw>
<doc>Get Resource Groups with basic parameters</doc>
<tags>
<tag>awsxrsresourcegrouprestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.771" endtime="20200102 09:48:27.779" critical="yes"></status>
</test>
<test id="s1-s1-s4-t2" name="Validate AWS XRS Get Resource Groups REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Resource Groups Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.782" endtime="20200102 09:48:27.782"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.783" endtime="20200102 09:48:27.783"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.783" endtime="20200102 09:48:27.783"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.783" endtime="20200102 09:48:27.784"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.784" endtime="20200102 09:48:27.784"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.784" endtime="20200102 09:48:27.784"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.784" endtime="20200102 09:48:27.785"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.782" endtime="20200102 09:48:27.785"></status>
</kw>
<kw name="Verify Get Resource Groups Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.786" endtime="20200102 09:48:27.786"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.786" endtime="20200102 09:48:27.786"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.787" endtime="20200102 09:48:27.787"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.786" endtime="20200102 09:48:27.787"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.787" endtime="20200102 09:48:27.787"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.787" endtime="20200102 09:48:27.787"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.788" endtime="20200102 09:48:27.788"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.785" endtime="20200102 09:48:27.788"></status>
</kw>
<doc>Get Resource Groups with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsresourcegrouprestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.781" endtime="20200102 09:48:27.789" critical="yes"></status>
</test>
<test id="s1-s1-s4-t3" name="Validate AWS XRS Get Resource Groups REST Web Services For All Resource Groups Returns 200 OK">
<kw name="Get All Resource Groups" library="ResourceGroup">
<doc>Get attributes for all organizations.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUPS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.791" endtime="20200102 09:48:27.791"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.791" endtime="20200102 09:48:27.791"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.790" endtime="20200102 09:48:27.791"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.791" endtime="20200102 09:48:27.791"></status>
</kw>
<doc>Gets all the Organizations</doc>
<tags>
<tag>awsxrsresourcegrouprestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.790" endtime="20200102 09:48:27.792" critical="yes"></status>
</test>
<test id="s1-s1-s4-t4" name="Validate AWS XRS Get Device REST Web Services Returns 200 OK">
<kw name="Get Resource Group By Resource Group Id" library="ResourceGroup">
<doc>Get resource group information for a particular group using the resource group id</doc>
<arguments>
<arg>${DEFAULT_RESOURCE_GROUP.RESOURCE_GROUP_NAME}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Resource_Group}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_RESOURCE_GROUP}/${resource_group_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.795" endtime="20200102 09:48:27.795"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.795" endtime="20200102 09:48:27.796"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.794" endtime="20200102 09:48:27.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.797" endtime="20200102 09:48:27.797"></status>
</kw>
<doc>Verifies that a posted device now exists</doc>
<tags>
<tag>awsxrsresourcegrouprestwebservicevalidation</tag>
<tag>awsxrsrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.793" endtime="20200102 09:48:27.798" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<status status="NOT_RUN" starttime="20200102 09:48:27.800" endtime="20200102 09:48:27.800"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Resource Group Entity Management Web Services</doc>
<status status="PASS" starttime="20200102 09:48:27.695" endtime="20200102 09:48:27.800"></status>
</suite>
<suite id="s1-s1-s5" name="ValidateAWSXRSSiteWebService" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\05__ValidateAWSXRSSiteWebService.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Create AWS XRS Web Services Session</arg>
<arg>AND</arg>
<arg>Test Data Setup For XRS AWS Site Web Service Test Suite</arg>
</arguments>
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService">
<doc>Create a session with aws xrs web services</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.903" endtime="20200102 09:48:27.903"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.903" endtime="20200102 09:48:27.904"></status>
</kw>
<kw name="Test Data Setup For XRS AWS Site Web Service Test Suite">
<doc>Keyword for setting up suite variables for AWS Site Web Service Tests.</doc>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ArrivalGeoCodeType=${XRS_WEB_SERVICES_TEST_SITE.ArrivalGeoCodeType}</arg>
<arg>ArrivalRadius=${XRS_WEB_SERVICES_TEST_SITE.ArrivalRadius}</arg>
<arg>City=${XRS_WEB_SERVICES_TEST_SITE.City}</arg>
<arg>Country=${XRS_WEB_SERVICES_TEST_SITE.Country}</arg>
<arg>DepartureGeoCodeType=${XRS_WEB_SERVICES_TEST_SITE.DepartureGeoCodeType}</arg>
<arg>DepartureRadius=${XRS_WEB_SERVICES_TEST_SITE.DepartureRadius}</arg>
<arg>DepartureSameAsArrival=${XRS_WEB_SERVICES_TEST_SITE.DepartureSameAsArrival}</arg>
<arg>Measure=${XRS_WEB_SERVICES_TEST_SITE.Measure}</arg>
<arg>Name=${XRS_WEB_SERVICES_TEST_SITE.Name}</arg>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>OrganizationName=${XRS_GENERAL_INFORMATION.Company.Company_Name}</arg>
<arg>SiteID=${XRS_WEB_SERVICES_TEST_SITE.SiteID}</arg>
<arg>SiteType=${XRS_WEB_SERVICES_TEST_SITE.SiteType}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_SITE.StateName}</arg>
<arg>TimeZone=${XRS_WEB_SERVICES_TEST_SITE.TimeZone}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_SITE_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.904" endtime="20200102 09:48:27.904"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_SITE_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_SITE_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.904" endtime="20200102 09:48:27.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_Site_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.905" endtime="20200102 09:48:27.905"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ArrivalRadius=${XRS_WEB_SERVICES_TEST_SITE.ArrivalRadius}</arg>
<arg>City=${XRS_WEB_SERVICES_TEST_SITE.City}</arg>
<arg>Country=${XRS_WEB_SERVICES_TEST_SITE.Country}</arg>
<arg>DepartureRadius=${XRS_WEB_SERVICES_TEST_SITE.DepartureRadius}</arg>
<arg>Name=${XRS_WEB_SERVICES_TEST_SITE.Name}Modified</arg>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>SiteID=${XRS_WEB_SERVICES_TEST_SITE.SiteID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_SITE.StateName}</arg>
<arg>TimeZone=${XRS_WEB_SERVICES_TEST_SITE.TimeZone}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_Site_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.905" endtime="20200102 09:48:27.905"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_SITE_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_SITE_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.906" endtime="20200102 09:48:27.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_SITE_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.906" endtime="20200102 09:48:27.906"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.904" endtime="20200102 09:48:27.906"></status>
</kw>
<status status="NOT_RUN" starttime="20200102 09:48:27.902" endtime="20200102 09:48:27.906"></status>
</kw>
<test id="s1-s1-s5-t1" name="Validate AWS XRS Get Site REST Web Services Returns Geographic &quot;Site identity does not exist.&quot; Error Message">
<kw name="Get Sites By Site Id" library="Site">
<doc>Get organizations by Site ID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_SITE.SiteID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}/${site_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.908" endtime="20200102 09:48:27.908"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.908" endtime="20200102 09:48:27.909"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.907" endtime="20200102 09:48:27.909"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.909" endtime="20200102 09:48:27.909"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_response}[ErrorMessage]</arg>
<arg>Geographic Site identity does not exist.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.910" endtime="20200102 09:48:27.910"></status>
</kw>
<doc>Verifies that a Site with a specific number does not exist</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.906" endtime="20200102 09:48:27.910" critical="yes"></status>
</test>
<test id="s1-s1-s5-t2" name="Validate AWS XRS Post Site REST Web Services Returns Description &quot;Geographic Site added successfully.&quot;">
<kw name="Post Sites" library="Site">
<doc>Calls the Post Method on Organizations.
Accepts a list of json objects
Json field definitions (POST/PUT requirements):
Address
The address of the site.
ArrivalGeoCodeType
Indicates whether the site area is defined as a circle or a polygon
ArrivalPolygonPoints
The collection of lat/long pairs for each point that defines the boundaries of the polygon.
ArrivalRadius
Arrival perimeter of CIRCLE GeoCode site.
The arrival circle characteristics are also used in site lookups throughout the system.​
City
The name of the city where the site is located.
Country
The name of the country where the site is located.
CreateDate
The date and time the site object was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
DeliveryWindows
Delivery Windows Collection Field Definitions:
BeginTime
The beginning time of the delivery window.
DayOfWeek
The day to which the delivery window applies.
When multiple days are provided using a comma separated list,
the values provided in the BeginTime and EndTime fields will apply to all days provided in the list.
EndTime
The ending time of the delivery window.
IsAllowDelivery
The type of delivery window.
A value of true indicates that deliveries are allowed during this window.
A value of false indicates deliveries are not allowed during this window.
DepartureGeoCodeType
Indicates whether the site area is defined as a circle or a polygon
DeparturePolygonPoints
Collection of latitude and longitude coordinate​ pairs for each point that defines the boundary of the polygon GeoCode type.
DepartureRadius
Departure perimeter of a circle Geocode Type
NOTE: This field does not apply to polygon GeoCode types.
DepartureSameAsArrival
Indicates whether the site departure geocode is the same as the site arrive geocode.
Latitude
The latitudinal position of the site.
XRS supports up to 6 decimal points for this value.
Longitude
The longitudinal position of the site.
XRS supports up to 6 decimal points for this value.
Measure
The unit of measure to be used for the Site radius (if selected)
ModifiedBy
The ID of the last person to modify the site.
From AC: CreateDate, ModifiedDate and ModifiedBy data fields will be initialized by system.
ModifiedDate
The date the site record was last modified.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
Name
The name of the Site.
Field length is 3-50 to match current host GUI.
OrganizationID
The user-defined ID of the Organization in XRS.
OrganizationName
The user-defined name of the organization.
PostalCode
The 5 to 9 digit zip code for the organization.
ResourceGroupIDs
Indicates the set of ResourceGroupIDs to which the site belongs.
SiteID
The user-defined ID of the Site in Omnitracs XRS.
SiteType
Unknown, Commerce, Domicile, Terminal, Fuel Stop, Government, Rest Stop, Shop, Truck Stop
StateName
The name of the state or province where the site is located.
This field corresponds to the State.Province field on the Edit Site &gt; General Information tab.
TimeZone
Identifies the Time Zone the site is located in.
UserDefinedField1
User-defined field #1
UserDefinedField2
User-defined field #2
UserDefinedField3
User-defined field #3
UserDefinedField4
User-defined field #4
UserDefinedField5
User-defined field #5</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_SITE_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.913" endtime="20200102 09:48:27.913"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.913" endtime="20200102 09:48:27.914"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.913" endtime="20200102 09:48:27.914"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.914" endtime="20200102 09:48:27.915"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Geographic Site added successfully.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.915" endtime="20200102 09:48:27.915"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.915" endtime="20200102 09:48:27.915"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.915" endtime="20200102 09:48:27.915"></status>
</kw>
<doc>Posts a Site and expects a Code value of 201</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.912" endtime="20200102 09:48:27.916" critical="yes"></status>
</test>
<test id="s1-s1-s5-t3" name="Validate AWS XRS Get Site REST Web Services Returns 200 OK">
<kw name="Get Sites By Site Id" library="Site">
<doc>Get organizations by Site ID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_SITE.SiteID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}/${site_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.918" endtime="20200102 09:48:27.918"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.918" endtime="20200102 09:48:27.918"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.918" endtime="20200102 09:48:27.918"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.919" endtime="20200102 09:48:27.919"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.919" endtime="20200102 09:48:27.919"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${json_response}[SiteID]</arg>
</arguments>
<assign>
<var>${XRS_WEB_SERVICES_TEST_SITE_SID}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.920" endtime="20200102 09:48:27.920"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_SITE_SID}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.920" endtime="20200102 09:48:27.921"></status>
</kw>
<doc>Verifies that a posted Site now exists</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.917" endtime="20200102 09:48:27.921" critical="yes"></status>
</test>
<test id="s1-s1-s5-t4" name="Validate AWS XRS Put Site REST Web Services Modifies Site Successfully">
<kw name="Put Sites" library="Site">
<doc>Calls the Put Method on Sites.
Accepts a list of json objects
See Json field definitions in the "Post Sites" Keyword</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_SITE_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.925" endtime="20200102 09:48:27.925"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.925" endtime="20200102 09:48:27.925"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.924" endtime="20200102 09:48:27.926"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.926" endtime="20200102 09:48:27.927"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Geographic Site edited successfully.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.930" endtime="20200102 09:48:27.931"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.930" endtime="20200102 09:48:27.931"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.930" endtime="20200102 09:48:27.932"></status>
</kw>
<doc>Posts a Site and expects a Code value of 201</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.923" endtime="20200102 09:48:27.935" critical="yes"></status>
</test>
<test id="s1-s1-s5-t5" name="Validate AWS XRS Get Sites REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.940" endtime="20200102 09:48:27.940"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.941" endtime="20200102 09:48:27.941"></status>
</kw>
<kw name="Verify Get Sites With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.942" endtime="20200102 09:48:27.942"></status>
</kw>
<kw name="Get Sites With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Site">
<doc>This Keyword modifies character between the base uri and the parameters
This will get Sites that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Sites Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.943" endtime="20200102 09:48:27.943"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.943" endtime="20200102 09:48:27.943"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.942" endtime="20200102 09:48:27.944"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.944" endtime="20200102 09:48:27.944"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.941" endtime="20200102 09:48:27.944"></status>
</kw>
<kw name="Verify Get Sites Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Get Sites" library="Site">
<doc>Call the Get Method on Sites.
This will get Sites that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
System Limit: 30 days
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationID
Limits results to sites in one or more organizations.
[No Filter] - Limits results to all sites within organizations that are associated with the Web Service User ID.
[OrganizationID] - Limits results to sites that belong to the specified Organization.
Recurse
True - Limits results to all site objects in the hierarchy of organizations within the specified OrganizationID.
False - Limits results to all site objects within specified OrganizationID.
ResourceGroupID
Limits results to sites in one or more resource groups.
[No Filter] - Limits results to all sites within resource groups that are associated with the Web Service User ID.
[ResourceGroupID] - Limits results to the specified Resource Group ID.
SiteID
Limits results to site object with SiteID equal to that specified.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.945" endtime="20200102 09:48:27.945"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.945" endtime="20200102 09:48:27.945"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.945" endtime="20200102 09:48:27.946"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.946" endtime="20200102 09:48:27.946"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.944" endtime="20200102 09:48:27.946"></status>
</kw>
<doc>Get Sites with basic parameters</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.937" endtime="20200102 09:48:27.946" critical="yes"></status>
</test>
<test id="s1-s1-s5-t6" name="Validate AWS XRS Get Sites REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Sites Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.952" endtime="20200102 09:48:27.952"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.953" endtime="20200102 09:48:27.953"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.954" endtime="20200102 09:48:27.954"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.954" endtime="20200102 09:48:27.955"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.955" endtime="20200102 09:48:27.955"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.955" endtime="20200102 09:48:27.955"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.956" endtime="20200102 09:48:27.956"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.951" endtime="20200102 09:48:27.956"></status>
</kw>
<kw name="Verify Get Sites Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.957" endtime="20200102 09:48:27.957"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.957" endtime="20200102 09:48:27.957"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.958" endtime="20200102 09:48:27.958"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.958" endtime="20200102 09:48:27.958"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.958" endtime="20200102 09:48:27.959"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.959" endtime="20200102 09:48:27.959"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.959" endtime="20200102 09:48:27.959"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.956" endtime="20200102 09:48:27.959"></status>
</kw>
<doc>Get Sites with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.949" endtime="20200102 09:48:27.960" critical="yes"></status>
</test>
<test id="s1-s1-s5-t7" name="Validate AWS XRS Delete Site REST Web Services Returns 200 OK">
<kw name="Delete Sites By Site Id" library="Site">
<doc>Delete Site by Site ID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_SITE.SiteID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}/${site_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.962" endtime="20200102 09:48:27.962"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.962" endtime="20200102 09:48:27.962"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.962" endtime="20200102 09:48:27.962"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.963" endtime="20200102 09:48:27.963"></status>
</kw>
<doc>Verifies that created Site is deleted</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.961" endtime="20200102 09:48:27.963" critical="yes"></status>
</test>
<test id="s1-s1-s5-t8" name="Validate AWS XRS Get Sites REST Web Services For All Sites Returns 200 OK">
<kw name="Get All Sites" library="Site">
<doc>Get attributes for all sites.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.972" endtime="20200102 09:48:27.972"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.972" endtime="20200102 09:48:27.973"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.971" endtime="20200102 09:48:27.973"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.973" endtime="20200102 09:48:27.973"></status>
</kw>
<doc>Gets all the Sites</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.970" endtime="20200102 09:48:27.974" critical="yes"></status>
</test>
<test id="s1-s1-s5-t9" name="Validate AWS XRS Delete Sites REST Web Services Returns Code 401">
<kw name="Delete Sites By Site Id" library="Site">
<doc>Delete Site by Site ID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_SITE_SID}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Site}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_DELETE_SITE}/${site_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.977" endtime="20200102 09:48:27.977"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.977" endtime="20200102 09:48:27.977"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:27.976" endtime="20200102 09:48:27.977"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Site ${XRS_WEB_SERVICES_TEST_SITE_SID} doesn't exist.</arg>
</arguments>
<assign>
<var>${expected_error_message}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.978" endtime="20200102 09:48:27.978"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:27.978" endtime="20200102 09:48:27.979"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_response}[Code]</arg>
<arg>401</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:27.979" endtime="20200102 09:48:27.979"></status>
</kw>
<doc>Attempts to delete a previously deleted Site.</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrssiterestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:27.975" endtime="20200102 09:48:27.979" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<status status="NOT_RUN" starttime="20200102 09:48:27.982" endtime="20200102 09:48:27.982"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Site Entity Management Web Services</doc>
<status status="PASS" starttime="20200102 09:48:27.803" endtime="20200102 09:48:27.982"></status>
</suite>
<suite id="s1-s1-s6" name="ValidateAWSXRSTrailerWebService" source="C:\Users\kstine\git\aws-api-gateway-tests\Tests\AWS_XRS_WebServicesTests\06__ValidateAWSXRSTrailerWebService.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Create AWS XRS Web Services Session</arg>
<arg>AND</arg>
<arg>Test Data Setup For XRS AWS Trailer Web Service Test Suite</arg>
</arguments>
<kw name="Create AWS XRS Web Services Session" library="XRSCommonWebService">
<doc>Create a session with aws xrs web services</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${XRS_AWS_WEBSERVICES_URL}[${XRS_HOST_ENVIRONMENT}]</arg>
<arg>verify=True</arg>
<arg>auth=${XRS_WEBSERVICES_AUTHORIZATION}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.105" endtime="20200102 09:48:28.105"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.105" endtime="20200102 09:48:28.106"></status>
</kw>
<kw name="Test Data Setup For XRS AWS Trailer Web Service Test Suite">
<doc>Keyword for setting up suite variables for AWS Trailer Web Service Tests.</doc>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_TRAILER.StateName}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_TRAILER.Status}</arg>
<arg>TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.106" endtime="20200102 09:48:28.106"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.107" endtime="20200102 09:48:28.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.107" endtime="20200102 09:48:28.107"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_TRAILER.StateName}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_TRAILER.Status}</arg>
<arg>TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.107" endtime="20200102 09:48:28.107"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.108" endtime="20200102 09:48:28.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.108" endtime="20200102 09:48:28.108"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_TRAILER_V2.StateName}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Status}</arg>
<arg>TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
<arg>Country=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Country}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_V2_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.108" endtime="20200102 09:48:28.108"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_1_V2_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.108" endtime="20200102 09:48:28.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.109" endtime="20200102 09:48:28.109"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>StateName=${XRS_WEB_SERVICES_TEST_TRAILER_V2.StateName}</arg>
<arg>Status=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Status}</arg>
<arg>TrailerIdentity=${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
<arg>Country=${XRS_WEB_SERVICES_TEST_TRAILER_V2.Country}</arg>
</arguments>
<assign>
<var>&amp;{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_V2_DICT}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.109" endtime="20200102 09:48:28.109"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_1_V2_DICT}</arg>
</arguments>
<assign>
<var>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.109" endtime="20200102 09:48:28.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.109" endtime="20200102 09:48:28.109"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.106" endtime="20200102 09:48:28.109"></status>
</kw>
<status status="NOT_RUN" starttime="20200102 09:48:28.104" endtime="20200102 09:48:28.109"></status>
</kw>
<test id="s1-s1-s6-t1" name="Validate AWS XRS Get Trailer REST Web Services Returns 400 Error">
<kw name="Get Trailer By ID" library="Trailer">
<doc>Get attributes for a specific trailer by specifying a TrailerSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.111" endtime="20200102 09:48:28.111"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.111" endtime="20200102 09:48:28.111"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.110" endtime="20200102 09:48:28.111"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>400</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.112" endtime="20200102 09:48:28.112"></status>
</kw>
<doc>Verifies that a trailer with a specific number does not exist</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.110" endtime="20200102 09:48:28.112" critical="yes"></status>
</test>
<test id="s1-s1-s6-t2" name="Validate AWS XRS Post Trailer REST Web Services Returns Code 201">
<kw name="Post Trailers" library="Trailer">
<doc>Calls the Post Method for Trailers.
Accepts a list of json objects
Json field definitions:
CompanyName
The user defined name of the company.
CreateDate
The date and time the trailer object was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
ModifiedBy
The ID of the last person to modify the driver record.
ModifiedDate
Date driver record was last modified.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
OrganizationID
The user-defined ID of the Organization in Omnitracs XRS in which the trailer is located.
OrganizationName
The user-defined name of the organization in which the trailer is located.
StateName
The state, province or territory for the trailer.
Status
The current status of the trailer in the Omnitracs XRS. The value of this field must be Active or Inactive.
TrailerIdentity
The user-defined ID of the trailer.
TrailerResourceGroupIDs
Indicates the set of ResourceGroupIDs to which the trailers should belong.
TrailerType
The type of trailer.
VIN
The registered Vehicle Identification Number (VIN) of the trailer.
NOTE: This non-required field is reserved for future use.
Web Service calls made to retrieve the value of this field will return a null value at this time.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.115" endtime="20200102 09:48:28.115"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.115" endtime="20200102 09:48:28.116"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.114" endtime="20200102 09:48:28.116"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.117" endtime="20200102 09:48:28.117"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Code]</arg>
<arg>201</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.118" endtime="20200102 09:48:28.118"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.118" endtime="20200102 09:48:28.118"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.118" endtime="20200102 09:48:28.118"></status>
</kw>
<doc>Posts a trailer and expects a Code value of 201</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.113" endtime="20200102 09:48:28.118" critical="yes"></status>
</test>
<test id="s1-s1-s6-t3" name="Validate AWS XRS Get Trailer REST Web Services Returns 200 OK">
<kw name="Get Trailer By ID" library="Trailer">
<doc>Get attributes for a specific trailer by specifying a TrailerSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.122" endtime="20200102 09:48:28.122"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.122" endtime="20200102 09:48:28.123"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.121" endtime="20200102 09:48:28.123"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.124" endtime="20200102 09:48:28.124"></status>
</kw>
<doc>Verifies that a posted trailer now exists</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.119" endtime="20200102 09:48:28.126" critical="yes"></status>
</test>
<test id="s1-s1-s6-t4" name="Validate AWS XRS Put Trailer REST Web Services Modifies Driver Successfully">
<kw name="Put Trailers" library="Trailer">
<doc>Calls the Post Method for Trailers.
Accepts a list of json objects
See Json field definitions in the "Post Trailers" Keyword</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.132" endtime="20200102 09:48:28.133"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.133" endtime="20200102 09:48:28.133"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.131" endtime="20200102 09:48:28.134"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.134" endtime="20200102 09:48:28.134"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Trailer edited successfully.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.135" endtime="20200102 09:48:28.135"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.135" endtime="20200102 09:48:28.135"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.135" endtime="20200102 09:48:28.135"></status>
</kw>
<doc>Posts a trailer and expects a Code value of 201</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.129" endtime="20200102 09:48:28.136" critical="yes"></status>
</test>
<test id="s1-s1-s6-t5" name="Validate AWS XRS Get Trailers REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.138" endtime="20200102 09:48:28.138"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.139" endtime="20200102 09:48:28.139"></status>
</kw>
<kw name="Verify Get Trailers With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.140" endtime="20200102 09:48:28.140"></status>
</kw>
<kw name="Get Trailers With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Trailer">
<doc>This Keyword modifies character between the base uri and the parameters
This will get trailers that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Trailers Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.141" endtime="20200102 09:48:28.142"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.142" endtime="20200102 09:48:28.142"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.141" endtime="20200102 09:48:28.142"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.142" endtime="20200102 09:48:28.142"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.139" endtime="20200102 09:48:28.143"></status>
</kw>
<kw name="Verify Get Trailers Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Get Trailers" library="Trailer">
<doc>Call the Get Method on trailers.
This will get trailers that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
IsActive
Filters results to active trailers only.
True, False, Both
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationID
Limits results to trailers in one or more organizations.
Maximum of 20 characters.
Recurse
When True, limits results to all trailer objects in all OrganizationIDs and ResourceGroupIDs in OrganizationID &amp; ResourceGroupID.
ResourceGroupID
Limits results to trailers in one or more resource groups.
ResourceGroupSID
Limits results to Organizations in one or more resource groups.
Maximum of 50 characters.
Status
Limits results to trailers with the selected status. Valid values include:
IsActive - Limits results to all active trailer objects in OrganizationID &amp; ResourceGroupID.
IsInActive - Limits results to all inactive trailer objects within all OrganizationID and ResourceGroupID.
TrailerID
Limits the results to trailer objects with TrailerID in OrganizationID and ResourceGroupID.
Maximum of 20 characters.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.146" endtime="20200102 09:48:28.146"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.148" endtime="20200102 09:48:28.148"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.144" endtime="20200102 09:48:28.148"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.149" endtime="20200102 09:48:28.150"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.143" endtime="20200102 09:48:28.150"></status>
</kw>
<doc>Get trailers with basic parameters</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.137" endtime="20200102 09:48:28.154" critical="yes"></status>
</test>
<test id="s1-s1-s6-t6" name="Validate AWS XRS Get Trailers REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Trailers Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.158" endtime="20200102 09:48:28.158"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.158" endtime="20200102 09:48:28.158"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.159" endtime="20200102 09:48:28.159"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.158" endtime="20200102 09:48:28.159"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.159" endtime="20200102 09:48:28.159"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.159" endtime="20200102 09:48:28.159"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.159" endtime="20200102 09:48:28.159"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.157" endtime="20200102 09:48:28.160"></status>
</kw>
<kw name="Verify Get Trailers Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.160" endtime="20200102 09:48:28.160"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.160" endtime="20200102 09:48:28.161"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.161" endtime="20200102 09:48:28.161"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.161" endtime="20200102 09:48:28.161"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.161" endtime="20200102 09:48:28.161"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.161" endtime="20200102 09:48:28.162"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.162" endtime="20200102 09:48:28.162"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.160" endtime="20200102 09:48:28.162"></status>
</kw>
<doc>Get trailers with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.157" endtime="20200102 09:48:28.162" critical="yes"></status>
</test>
<test id="s1-s1-s6-t7" name="Validate AWS XRS Delete Trailer REST Web Services Returns 200 OK">
<kw name="Delete Trailer By ID" library="Trailer">
<doc>Delete a single trailer record in Omnitracs XRS by specifying the TrailerSID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.167" endtime="20200102 09:48:28.167"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.168" endtime="20200102 09:48:28.168"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.164" endtime="20200102 09:48:28.169"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.170" endtime="20200102 09:48:28.170"></status>
</kw>
<doc>Verifies that created trailer is deleted</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.163" endtime="20200102 09:48:28.172" critical="yes"></status>
</test>
<test id="s1-s1-s6-t8" name="Validate AWS XRS Get Trailers REST Web Services For All Trailers Returns 200 OK">
<kw name="Get All Trailers" library="Trailer">
<doc>Get attributes for all trailers.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.177" endtime="20200102 09:48:28.177"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.177" endtime="20200102 09:48:28.177"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.176" endtime="20200102 09:48:28.177"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.178" endtime="20200102 09:48:28.178"></status>
</kw>
<doc>Gets all the trailers</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.175" endtime="20200102 09:48:28.178" critical="yes"></status>
</test>
<test id="s1-s1-s6-t9" name="Validate AWS XRS Delete Trailers REST Web Services Returns Error Message">
<kw name="Delete Trailer By ID" library="Trailer">
<doc>Delete a single trailer record in Omnitracs XRS by specifying the TrailerSID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.186" endtime="20200102 09:48:28.186"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.187" endtime="20200102 09:48:28.187"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.182" endtime="20200102 09:48:28.188"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Trailer not exist.</arg>
</arguments>
<assign>
<var>${expected_error_message}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.188" endtime="20200102 09:48:28.188"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.189" endtime="20200102 09:48:28.189"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_response}[Description]</arg>
<arg>${expected_error_message}</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.189" endtime="20200102 09:48:28.189"></status>
</kw>
<doc>Attempts to delete a previously deleted trailer.</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.180" endtime="20200102 09:48:28.189" critical="yes"></status>
</test>
<test id="s1-s1-s6-t10" name="Validate AWS XRS Get Trailer V2 REST Web Services Returns 400 Error">
<kw name="Get Trailer V2 By ID" library="Trailer">
<doc>Get attributes for a specific trailer by specifying a TrailerSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_TRAILER_V2}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.192" endtime="20200102 09:48:28.192"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.192" endtime="20200102 09:48:28.192"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.191" endtime="20200102 09:48:28.192"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>400</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.193" endtime="20200102 09:48:28.193"></status>
</kw>
<doc>Verifies that a trailer with a specific number does not exist</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.190" endtime="20200102 09:48:28.193" critical="yes"></status>
</test>
<test id="s1-s1-s6-t11" name="Validate AWS XRS Post Trailer V2 REST Web Services Returns Code 201">
<kw name="Post Trailers V2" library="Trailer">
<doc>Calls the Post Method for Trailers.
Accepts a list of json objects
Json field definitions:
CompanyName
The user defined name of the company.
CreateDate
The date and time the trailer object was created.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
ModifiedBy
The ID of the last person to modify the driver record.
ModifiedDate
Date driver record was last modified.
The value of this field is Read Only and cannot be modified using PUT or POST commands.
OrganizationID
The user-defined ID of the Organization in Omnitracs XRS in which the trailer is located.
OrganizationName
The user-defined name of the organization in which the trailer is located.
StateName
The state, province or territory for the trailer.
Status
The current status of the trailer in the Omnitracs XRS. The value of this field must be Active or Inactive.
TrailerIdentity
The user-defined ID of the trailer.
TrailerResourceGroupIDs
Indicates the set of ResourceGroupIDs to which the trailers should belong.
TrailerType
The type of trailer.
VIN
The registered Vehicle Identification Number (VIN) of the trailer.
NOTE: This non-required field is reserved for future use.
Web Service calls made to retrieve the value of this field will return a null value at this time.
Country
The country where the trailer is based.
NOTE: This field is used only with Version 2 of this Web Service.
LicensePlate
The LicensePlate of the vehicle attached to the trailer.
NOTE: This field is used only with Version 2 of this Web Service.
Odomoter
The last Odometer reading from the trailer.
NOTE: This field is used only with Version 2 of this Web Service.
SerialNumber
The serial number of the trailer, if available.
NOTE: This field is used only with Version 2 of this Web Service.</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_POST_TEST_TRAILER_LIST_V2}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.196" endtime="20200102 09:48:28.196"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.196" endtime="20200102 09:48:28.197"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.196" endtime="20200102 09:48:28.197"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.197" endtime="20200102 09:48:28.198"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Code]</arg>
<arg>201</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.198" endtime="20200102 09:48:28.199"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.198" endtime="20200102 09:48:28.199"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.198" endtime="20200102 09:48:28.199"></status>
</kw>
<doc>Posts a trailer and expects a Code value of 201</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.194" endtime="20200102 09:48:28.200" critical="yes"></status>
</test>
<test id="s1-s1-s6-t12" name="Validate AWS XRS Get Trailer V2 REST Web Services Returns 200 OK">
<kw name="Get Trailer By ID" library="Trailer">
<doc>Get attributes for a specific trailer by specifying a TrailerSID value.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.205" endtime="20200102 09:48:28.205"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.205" endtime="20200102 09:48:28.205"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.204" endtime="20200102 09:48:28.205"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.206" endtime="20200102 09:48:28.206"></status>
</kw>
<doc>Verifies that a posted trailer now exists</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.203" endtime="20200102 09:48:28.206" critical="yes"></status>
</test>
<test id="s1-s1-s6-t13" name="Validate AWS XRS Put Trailer V2 REST Web Services Modifies Driver Successfully">
<kw name="Put Trailers V2" library="Trailer">
<doc>Calls the Post Method for Trailers.
Accepts a list of json objects
See Json field definitions in the "Post Trailers" Keyword</doc>
<arguments>
<arg>@{XRS_AWS_WEBSERVICE_PUT_TEST_TRAILER_LIST_V2}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.209" endtime="20200102 09:48:28.209"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>json=${list_data}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.209" endtime="20200102 09:48:28.209"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.208" endtime="20200102 09:48:28.209"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.210" endtime="20200102 09:48:28.210"></status>
</kw>
<kw name="${r} IN [ @{json_response} ]" type="for">
<kw name="${r} = ${r}" type="foritem">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${r}[Description]</arg>
<arg>Trailer edited successfully.</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.211" endtime="20200102 09:48:28.211"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.210" endtime="20200102 09:48:28.211"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.210" endtime="20200102 09:48:28.211"></status>
</kw>
<doc>Posts a trailer and expects a Code value of 201</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.207" endtime="20200102 09:48:28.211" critical="yes"></status>
</test>
<test id="s1-s1-s6-t14" name="Validate AWS XRS Get Trailers V2 REST Web Services Returns 200 OK">
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.215" endtime="20200102 09:48:28.216"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.217" endtime="20200102 09:48:28.217"></status>
</kw>
<kw name="Verify Get Trailers V2 With Forward Slash Returns 200 OK">
<doc>Verify that using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${ending_character}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.221" endtime="20200102 09:48:28.221"></status>
</kw>
<kw name="Get Trailers With URI Ending With ${ending_character} And Parameters &amp;{params}" library="Trailer">
<doc>This Keyword modifies character between the base uri and the parameters
This will get trailers that match the provided parameters.
Params can be named individually or within a Dictionary
See the Get Trailers Keyword for param definitions.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS}${ending_character}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.222" endtime="20200102 09:48:28.222"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.223" endtime="20200102 09:48:28.223"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.221" endtime="20200102 09:48:28.223"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.224" endtime="20200102 09:48:28.224"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.220" endtime="20200102 09:48:28.224"></status>
</kw>
<kw name="Verify Get Trailers V2 Without Forward Slash Returns 200 OK">
<doc>Verify that not using a '/' in the URI returns 200 OK</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<kw name="Get Trailers V2" library="Trailer">
<doc>Call the Get Method on trailers v2.
This will get trailers that match the provided parameters.
Params can be named individually or within a Dictionary
Param Definitions:
AsOfDateTime
Tells the service to return only the data that changed since the specified date and time.
IsActive
Filters results to active trailers only.
True, False, Both
Limit
Used in conjunction with the Offset parameter to implement paging.
Limits the number of results to a specified number.
System Limit: 10,000
Offset
Used in conjunction with the Limit parameter to implement paging.
Represents a page number for the starting point of the return set.
OrganizationID
Limits results to trailers in one or more organizations.
Maximum of 20 characters.
Recurse
When True, limits results to all trailer objects in all OrganizationIDs and ResourceGroupIDs in OrganizationID &amp; ResourceGroupID.
ResourceGroupID
Limits results to trailers in one or more resource groups.
ResourceGroupSID
Limits results to Organizations in one or more resource groups.
Maximum of 50 characters.
Status
Limits results to trailers with the selected status. Valid values include:
IsActive - Limits results to all active trailer objects in OrganizationID &amp; ResourceGroupID.
IsInActive - Limits results to all inactive trailer objects within all OrganizationID and ResourceGroupID.
TrailerID
Limits the results to trailer objects with TrailerID in OrganizationID and ResourceGroupID.
Maximum of 20 characters.</doc>
<arguments>
<arg>&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS_V2}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.226" endtime="20200102 09:48:28.226"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.226" endtime="20200102 09:48:28.226"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.225" endtime="20200102 09:48:28.226"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.226" endtime="20200102 09:48:28.226"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.224" endtime="20200102 09:48:28.227"></status>
</kw>
<doc>Get trailers with basic parameters</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.214" endtime="20200102 09:48:28.227" critical="yes"></status>
</test>
<test id="s1-s1-s6-t15" name="Validate AWS XRS Get Trailers V2 REST Web Services Returns 200 OK With Raw String URI">
<kw name="Verify Get Trailers V2 Raw String URI With /? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.229" endtime="20200102 09:48:28.229"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.230" endtime="20200102 09:48:28.230"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS_V2}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.230" endtime="20200102 09:48:28.230"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.230" endtime="20200102 09:48:28.231"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.231" endtime="20200102 09:48:28.231"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.231" endtime="20200102 09:48:28.232"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.232" endtime="20200102 09:48:28.233"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.229" endtime="20200102 09:48:28.233"></status>
</kw>
<kw name="Verify Get Trailers V2 Raw String URI With ? Returns 200 OK">
<doc>Verify that using the given character string in the raw URI string returns 200 OK</doc>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year,month,day</arg>
</arguments>
<assign>
<var>${yyyy}</var>
<var>${mm}</var>
<var>${dd}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.236" endtime="20200102 09:48:28.236"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>OrganizationID=${XRS_GENERAL_INFORMATION.Company.Company_ID}</arg>
<arg>IsActive=True</arg>
<arg>AsOfDateTime=${mm}/${dd}/${yyyy}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.236" endtime="20200102 09:48:28.237"></status>
</kw>
<kw name="Create URI String With" library="URIStringBuilderTool">
<doc>Helper Keyword to construct the request uri with different character strings
base_uri = webservice uri
request_type = request extentenstion for the webservice
character_string = final character of the uri. i.e. /, /?, etc ...</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}</arg>
<arg>${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS_V2}</arg>
<arg>${character_string}</arg>
</arguments>
<assign>
<var>${uri_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${base_uri}${request_type}${character_string}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.238" endtime="20200102 09:48:28.238"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.237" endtime="20200102 09:48:28.238"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${uri_string}OrganizationID=${params.OrganizationID}&amp;IsActive=${params.IsActive}&amp;AsOfDateTime=${params.AsOfDateTime}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.239" endtime="20200102 09:48:28.239"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.240" endtime="20200102 09:48:28.240"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.240" endtime="20200102 09:48:28.241"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.235" endtime="20200102 09:48:28.241"></status>
</kw>
<doc>Get trailers with basic parameters using a raw URI string</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.228" endtime="20200102 09:48:28.241" critical="yes"></status>
</test>
<test id="s1-s1-s6-t16" name="Validate AWS XRS Delete Trailer V2 REST Web Services Returns 200 OK">
<kw name="Delete Trailer By ID" library="Trailer">
<doc>Delete a single trailer record in Omnitracs XRS by specifying the TrailerSID.</doc>
<arguments>
<arg>${XRS_WEB_SERVICES_TEST_TRAILER_V2.TrailerIdentity}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_GET_DELETE_TRAILER}/${trailer_id}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.244" endtime="20200102 09:48:28.246"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.246" endtime="20200102 09:48:28.246"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.244" endtime="20200102 09:48:28.246"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.247" endtime="20200102 09:48:28.247"></status>
</kw>
<doc>Verifies that created trailer is deleted</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.243" endtime="20200102 09:48:28.247" critical="yes"></status>
</test>
<test id="s1-s1-s6-t17" name="Validate AWS XRS Get Trailers V2 REST Web Services For All Trailers Returns 200 OK">
<kw name="Get All Trailers V2" library="Trailer">
<doc>Get attributes for all trailers v2.</doc>
<assign>
<var>${response}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${XRS_Entity_Management_Base_URI.Trailer}${XRS_WEBSERVICE_ENTITY_MANAGEMENT_POST_GET_PUT_TRAILERS_V2}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.254" endtime="20200102 09:48:28.254"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${XRS_WEB_SERVICE_SESSION_ALIAS}</arg>
<arg>${uri}</arg>
<arg>headers=${XRS_WEBSERVICES_JSON_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<status status="NOT_RUN" starttime="20200102 09:48:28.255" endtime="20200102 09:48:28.255"></status>
</kw>
<status status="PASS" starttime="20200102 09:48:28.251" endtime="20200102 09:48:28.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="NOT_RUN" starttime="20200102 09:48:28.255" endtime="20200102 09:48:28.256"></status>
</kw>
<doc>Gets all the trailers</doc>
<tags>
<tag>awsxrsrestwebservicevalidation</tag>
<tag>awsxrstrailerrestwebservicevalidation</tag>
<tag>xrsawsperftest</tag>
</tags>
<status status="PASS" starttime="20200102 09:48:28.250" endtime="20200102 09:48:28.256" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<status status="NOT_RUN" starttime="20200102 09:48:28.259" endtime="20200102 09:48:28.259"></status>
</kw>
<doc>Fundamental suite to test XRS AWS Trailer Entity Management Web Services</doc>
<status status="PASS" starttime="20200102 09:48:27.987" endtime="20200102 09:48:28.259"></status>
</suite>
<status status="PASS" starttime="20200102 09:48:26.760" endtime="20200102 09:48:28.263"></status>
</suite>
<status status="PASS" starttime="20200102 09:48:26.734" endtime="20200102 09:48:28.282"></status>
</suite>
<statistics>
<total>
<stat pass="59" fail="0">Critical Tests</stat>
<stat pass="59" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0">awsxrsdevicerestwebservicevalidation</stat>
<stat pass="9" fail="0">awsxrsdriverrestwebservicevalidation</stat>
<stat pass="12" fail="0">awsxrsorganizationrestwebservicevalidation</stat>
<stat pass="4" fail="0">awsxrsresourcegrouprestwebservicevalidation</stat>
<stat pass="59" fail="0">awsxrsrestwebservicevalidation</stat>
<stat pass="9" fail="0">awsxrssiterestwebservicevalidation</stat>
<stat pass="17" fail="0">awsxrstrailerrestwebservicevalidation</stat>
<stat pass="7" fail="0">xrsawsperftest</stat>
</tag>
<suite>
<stat pass="59" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="59" fail="0" id="s1-s1" name="AWS XRS WebServicesTests">Tests.AWS XRS WebServicesTests</stat>
<stat pass="8" fail="0" id="s1-s1-s1" name="ValidateAWSXRSDeviceWebServices">Tests.AWS XRS WebServicesTests.ValidateAWSXRSDeviceWebServices</stat>
<stat pass="9" fail="0" id="s1-s1-s2" name="Validate AWSXRSDriverWebServices">Tests.AWS XRS WebServicesTests.Validate AWSXRSDriverWebServices</stat>
<stat pass="12" fail="0" id="s1-s1-s3" name="ValidateAWSXRSOrganizationWebService">Tests.AWS XRS WebServicesTests.ValidateAWSXRSOrganizationWebService</stat>
<stat pass="4" fail="0" id="s1-s1-s4" name="ValidateAWSXRSResourceGroupWebService">Tests.AWS XRS WebServicesTests.ValidateAWSXRSResourceGroupWebService</stat>
<stat pass="9" fail="0" id="s1-s1-s5" name="ValidateAWSXRSSiteWebService">Tests.AWS XRS WebServicesTests.ValidateAWSXRSSiteWebService</stat>
<stat pass="17" fail="0" id="s1-s1-s6" name="ValidateAWSXRSTrailerWebService">Tests.AWS XRS WebServicesTests.ValidateAWSXRSTrailerWebService</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
